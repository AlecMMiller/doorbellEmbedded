

Microchip Technology PIC PRO Macro Assembler V1.42 build -159332390 
                                                                                               Sun Sep 17 11:36:04 2017

Microchip Technology Omniscient Code Generator v1.42 (PRO mode) build 201704130522
     1                           	processor	16F18875
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	idataBANK1,global,class=CODE,delta=2
     5                           	psect	idataBANK2,global,class=CODE,delta=2
     6                           	psect	stringtext1,global,class=STRCODE,delta=2
     7                           	psect	stringtext2,global,class=STRCODE,delta=2
     8                           	psect	stringtext3,global,class=STRCODE,delta=2
     9                           	psect	stringtext4,global,class=STRCODE,delta=2
    10                           	psect	stringtext5,global,class=STRCODE,delta=2
    11                           	psect	stringtext6,global,class=STRCODE,delta=2
    12                           	psect	stringtext7,global,class=STRCODE,delta=2
    13                           	psect	stringtext8,global,class=STRCODE,delta=2
    14                           	psect	stringtext9,global,class=STRCODE,delta=2
    15                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	stringtext10,global,class=STRCODE,delta=2
    17                           	psect	stringtext11,global,class=STRCODE,delta=2
    18                           	psect	stringtext12,global,class=STRCODE,delta=2
    19                           	psect	stringtext13,global,class=STRCODE,delta=2
    20                           	psect	stringtext14,global,class=STRCODE,delta=2
    21                           	psect	stringtext15,global,class=STRCODE,delta=2
    22                           	psect	stringtext16,global,class=STRCODE,delta=2
    23                           	psect	stringtext17,global,class=STRCODE,delta=2
    24                           	psect	stringtext18,global,class=STRCODE,delta=2
    25                           	psect	stringtext19,global,class=STRCODE,delta=2
    26                           	psect	stringtext20,global,class=STRCODE,delta=2
    27                           	psect	stringtext21,global,class=STRCODE,delta=2
    28                           	psect	stringtext22,global,class=STRCODE,delta=2
    29                           	psect	stringtext23,global,class=STRCODE,delta=2
    30                           	psect	stringtext24,global,class=STRCODE,delta=2
    31                           	psect	stringtext25,global,class=STRCODE,delta=2
    32                           	psect	stringtext26,global,class=STRCODE,delta=2
    33                           	psect	stringtext27,global,class=STRCODE,delta=2
    34                           	psect	stringtext28,global,class=STRCODE,delta=2
    35                           	psect	stringtext29,global,class=STRCODE,delta=2
    36                           	psect	stringtext30,global,class=STRCODE,delta=2
    37                           	psect	stringtext31,global,class=STRCODE,delta=2
    38                           	psect	stringtext32,global,class=STRCODE,delta=2
    39                           	psect	stringtext33,global,class=STRCODE,delta=2
    40                           	psect	stringtext34,global,class=STRCODE,delta=2
    41                           	psect	stringtext35,global,class=STRCODE,delta=2
    42                           	psect	stringtext36,global,class=STRCODE,delta=2
    43                           	psect	stringtext37,global,class=STRCODE,delta=2
    44                           	psect	stringtext38,global,class=STRCODE,delta=2
    45                           	psect	stringtext39,global,class=STRCODE,delta=2
    46                           	psect	cinit,global,class=CODE,merge=1,delta=2
    47                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
    48                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    49                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    50                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    51                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    52                           	psect	inittext,global,class=CODE,delta=2
    53                           	psect	clrtext,global,class=CODE,delta=2
    54                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    55                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    56                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text56,local,class=CODE,merge=1,delta=2
    59                           	psect	intentry,global,class=CODE,delta=2
    60                           	psect	text60,local,class=CODE,merge=1,delta=2
    61                           	psect	text61,local,class=CODE,merge=1,delta=2
    62                           	psect	text62,local,class=CODE,merge=1,delta=2
    63                           	psect	text65,local,class=CODE,merge=1,delta=2
    64                           	psect	text66,local,class=CODE,merge=1,delta=2
    65                           	psect	text67,local,class=CODE,merge=1,delta=2
    66                           	psect	text69,local,class=CODE,merge=1,delta=2
    67                           	psect	text70,local,class=CODE,merge=1,delta=2
    68                           	psect	pa_nodes0,global,class=CODE,delta=2
    69                           	dabs	1,0x7E,2
    70  0000                     
    71                           ; Version 1.42
    72                           ; Generated 13/04/2017 GMT
    73                           ; 
    74                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F18875 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000F                     	;# 
   121  0010                     	;# 
   122  0011                     	;# 
   123  0012                     	;# 
   124  0013                     	;# 
   125  0014                     	;# 
   126  0015                     	;# 
   127  0016                     	;# 
   128  0017                     	;# 
   129  0018                     	;# 
   130  0019                     	;# 
   131  001A                     	;# 
   132  001C                     	;# 
   133  001C                     	;# 
   134  001D                     	;# 
   135  001D                     	;# 
   136  001E                     	;# 
   137  001F                     	;# 
   138  008C                     	;# 
   139  008C                     	;# 
   140  008D                     	;# 
   141  008E                     	;# 
   142  008E                     	;# 
   143  008F                     	;# 
   144  0090                     	;# 
   145  0090                     	;# 
   146  0091                     	;# 
   147  0093                     	;# 
   148  0094                     	;# 
   149  0095                     	;# 
   150  0096                     	;# 
   151  0097                     	;# 
   152  0098                     	;# 
   153  0099                     	;# 
   154  009A                     	;# 
   155  009B                     	;# 
   156  009C                     	;# 
   157  009D                     	;# 
   158  009E                     	;# 
   159  010C                     	;# 
   160  010D                     	;# 
   161  010E                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0110                     	;# 
   165  0110                     	;# 
   166  0111                     	;# 
   167  0112                     	;# 
   168  0112                     	;# 
   169  0113                     	;# 
   170  0114                     	;# 
   171  0114                     	;# 
   172  0115                     	;# 
   173  0116                     	;# 
   174  0116                     	;# 
   175  0117                     	;# 
   176  0119                     	;# 
   177  0119                     	;# 
   178  0119                     	;# 
   179  011A                     	;# 
   180  011A                     	;# 
   181  011A                     	;# 
   182  011B                     	;# 
   183  011B                     	;# 
   184  011B                     	;# 
   185  011B                     	;# 
   186  011B                     	;# 
   187  011C                     	;# 
   188  011C                     	;# 
   189  011C                     	;# 
   190  011D                     	;# 
   191  011D                     	;# 
   192  011D                     	;# 
   193  011E                     	;# 
   194  011E                     	;# 
   195  011E                     	;# 
   196  011F                     	;# 
   197  011F                     	;# 
   198  011F                     	;# 
   199  011F                     	;# 
   200  011F                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  018E                     	;# 
   204  018F                     	;# 
   205  0190                     	;# 
   206  0191                     	;# 
   207  0192                     	;# 
   208  0196                     	;# 
   209  0197                     	;# 
   210  0198                     	;# 
   211  0199                     	;# 
   212  019A                     	;# 
   213  019B                     	;# 
   214  019C                     	;# 
   215  020C                     	;# 
   216  020C                     	;# 
   217  020D                     	;# 
   218  020E                     	;# 
   219  020F                     	;# 
   220  020F                     	;# 
   221  0210                     	;# 
   222  0210                     	;# 
   223  0211                     	;# 
   224  0211                     	;# 
   225  0212                     	;# 
   226  0212                     	;# 
   227  0213                     	;# 
   228  0214                     	;# 
   229  0215                     	;# 
   230  0215                     	;# 
   231  0216                     	;# 
   232  0216                     	;# 
   233  0217                     	;# 
   234  0217                     	;# 
   235  0218                     	;# 
   236  0218                     	;# 
   237  0219                     	;# 
   238  021A                     	;# 
   239  021B                     	;# 
   240  021B                     	;# 
   241  021C                     	;# 
   242  021C                     	;# 
   243  021D                     	;# 
   244  021D                     	;# 
   245  021E                     	;# 
   246  021F                     	;# 
   247  028C                     	;# 
   248  028C                     	;# 
   249  028D                     	;# 
   250  028D                     	;# 
   251  028E                     	;# 
   252  028F                     	;# 
   253  0290                     	;# 
   254  0290                     	;# 
   255  0291                     	;# 
   256  0292                     	;# 
   257  0292                     	;# 
   258  0293                     	;# 
   259  0293                     	;# 
   260  0294                     	;# 
   261  0295                     	;# 
   262  0296                     	;# 
   263  0296                     	;# 
   264  0297                     	;# 
   265  0298                     	;# 
   266  0298                     	;# 
   267  0299                     	;# 
   268  0299                     	;# 
   269  029A                     	;# 
   270  029B                     	;# 
   271  029C                     	;# 
   272  029C                     	;# 
   273  029D                     	;# 
   274  030C                     	;# 
   275  030C                     	;# 
   276  030D                     	;# 
   277  030E                     	;# 
   278  030F                     	;# 
   279  0310                     	;# 
   280  0310                     	;# 
   281  0311                     	;# 
   282  0312                     	;# 
   283  0313                     	;# 
   284  0314                     	;# 
   285  0314                     	;# 
   286  0315                     	;# 
   287  0316                     	;# 
   288  0317                     	;# 
   289  0318                     	;# 
   290  0318                     	;# 
   291  0319                     	;# 
   292  031A                     	;# 
   293  031B                     	;# 
   294  031C                     	;# 
   295  031C                     	;# 
   296  031D                     	;# 
   297  031E                     	;# 
   298  031F                     	;# 
   299  038C                     	;# 
   300  038D                     	;# 
   301  038E                     	;# 
   302  0390                     	;# 
   303  0391                     	;# 
   304  0392                     	;# 
   305  040C                     	;# 
   306  040D                     	;# 
   307  040E                     	;# 
   308  040F                     	;# 
   309  0410                     	;# 
   310  0411                     	;# 
   311  0416                     	;# 
   312  0416                     	;# 
   313  0417                     	;# 
   314  0418                     	;# 
   315  0418                     	;# 
   316  0419                     	;# 
   317  041A                     	;# 
   318  041A                     	;# 
   319  041B                     	;# 
   320  041C                     	;# 
   321  041C                     	;# 
   322  041D                     	;# 
   323  041E                     	;# 
   324  041F                     	;# 
   325  048C                     	;# 
   326  048C                     	;# 
   327  048D                     	;# 
   328  048E                     	;# 
   329  048F                     	;# 
   330  048F                     	;# 
   331  0490                     	;# 
   332  0491                     	;# 
   333  0492                     	;# 
   334  0492                     	;# 
   335  0493                     	;# 
   336  0494                     	;# 
   337  0495                     	;# 
   338  0495                     	;# 
   339  0496                     	;# 
   340  0497                     	;# 
   341  0498                     	;# 
   342  0499                     	;# 
   343  049A                     	;# 
   344  049B                     	;# 
   345  049C                     	;# 
   346  049D                     	;# 
   347  050C                     	;# 
   348  050C                     	;# 
   349  050D                     	;# 
   350  050E                     	;# 
   351  050F                     	;# 
   352  050F                     	;# 
   353  0510                     	;# 
   354  0511                     	;# 
   355  0512                     	;# 
   356  0512                     	;# 
   357  0513                     	;# 
   358  0514                     	;# 
   359  0515                     	;# 
   360  0515                     	;# 
   361  0516                     	;# 
   362  0517                     	;# 
   363  0518                     	;# 
   364  0519                     	;# 
   365  051A                     	;# 
   366  051B                     	;# 
   367  051C                     	;# 
   368  051D                     	;# 
   369  058C                     	;# 
   370  058C                     	;# 
   371  058D                     	;# 
   372  058E                     	;# 
   373  058F                     	;# 
   374  058F                     	;# 
   375  0590                     	;# 
   376  0591                     	;# 
   377  0592                     	;# 
   378  0593                     	;# 
   379  060C                     	;# 
   380  060D                     	;# 
   381  060E                     	;# 
   382  060F                     	;# 
   383  0610                     	;# 
   384  0611                     	;# 
   385  0612                     	;# 
   386  0613                     	;# 
   387  0614                     	;# 
   388  0616                     	;# 
   389  0617                     	;# 
   390  0618                     	;# 
   391  0619                     	;# 
   392  061A                     	;# 
   393  061B                     	;# 
   394  061C                     	;# 
   395  061D                     	;# 
   396  061E                     	;# 
   397  068C                     	;# 
   398  068D                     	;# 
   399  068E                     	;# 
   400  068F                     	;# 
   401  0690                     	;# 
   402  0691                     	;# 
   403  0692                     	;# 
   404  0693                     	;# 
   405  0694                     	;# 
   406  070C                     	;# 
   407  070D                     	;# 
   408  070E                     	;# 
   409  070F                     	;# 
   410  0710                     	;# 
   411  0711                     	;# 
   412  0712                     	;# 
   413  0713                     	;# 
   414  0714                     	;# 
   415  0716                     	;# 
   416  0717                     	;# 
   417  0718                     	;# 
   418  0719                     	;# 
   419  071A                     	;# 
   420  071B                     	;# 
   421  071C                     	;# 
   422  071D                     	;# 
   423  071E                     	;# 
   424  0796                     	;# 
   425  0797                     	;# 
   426  0798                     	;# 
   427  0799                     	;# 
   428  079A                     	;# 
   429  079B                     	;# 
   430  080C                     	;# 
   431  080D                     	;# 
   432  080E                     	;# 
   433  080F                     	;# 
   434  0810                     	;# 
   435  0811                     	;# 
   436  0812                     	;# 
   437  0813                     	;# 
   438  0814                     	;# 
   439  081A                     	;# 
   440  081B                     	;# 
   441  081C                     	;# 
   442  081D                     	;# 
   443  081E                     	;# 
   444  081F                     	;# 
   445  088C                     	;# 
   446  088D                     	;# 
   447  088E                     	;# 
   448  088F                     	;# 
   449  0890                     	;# 
   450  0891                     	;# 
   451  0892                     	;# 
   452  0893                     	;# 
   453  0895                     	;# 
   454  0896                     	;# 
   455  0897                     	;# 
   456  0898                     	;# 
   457  0899                     	;# 
   458  089A                     	;# 
   459  089B                     	;# 
   460  090C                     	;# 
   461  090E                     	;# 
   462  090F                     	;# 
   463  091F                     	;# 
   464  091F                     	;# 
   465  098F                     	;# 
   466  098F                     	;# 
   467  0990                     	;# 
   468  0991                     	;# 
   469  0992                     	;# 
   470  0993                     	;# 
   471  0994                     	;# 
   472  0995                     	;# 
   473  0996                     	;# 
   474  0997                     	;# 
   475  0E0F                     	;# 
   476  0E10                     	;# 
   477  0E11                     	;# 
   478  0E12                     	;# 
   479  0E13                     	;# 
   480  0E14                     	;# 
   481  0E15                     	;# 
   482  0E16                     	;# 
   483  0E17                     	;# 
   484  0E18                     	;# 
   485  0E19                     	;# 
   486  0E1A                     	;# 
   487  0E1B                     	;# 
   488  0E1C                     	;# 
   489  0E1D                     	;# 
   490  0E1E                     	;# 
   491  0E1F                     	;# 
   492  0E20                     	;# 
   493  0E21                     	;# 
   494  0E22                     	;# 
   495  0E23                     	;# 
   496  0E24                     	;# 
   497  0E25                     	;# 
   498  0E26                     	;# 
   499  0E27                     	;# 
   500  0E28                     	;# 
   501  0E29                     	;# 
   502  0E2A                     	;# 
   503  0E2B                     	;# 
   504  0E2C                     	;# 
   505  0E2D                     	;# 
   506  0E2E                     	;# 
   507  0E2F                     	;# 
   508  0E30                     	;# 
   509  0E31                     	;# 
   510  0E32                     	;# 
   511  0E33                     	;# 
   512  0E34                     	;# 
   513  0E35                     	;# 
   514  0E36                     	;# 
   515  0E37                     	;# 
   516  0E8F                     	;# 
   517  0E90                     	;# 
   518  0E91                     	;# 
   519  0E92                     	;# 
   520  0E93                     	;# 
   521  0E94                     	;# 
   522  0E95                     	;# 
   523  0E96                     	;# 
   524  0E97                     	;# 
   525  0E9C                     	;# 
   526  0E9D                     	;# 
   527  0E9E                     	;# 
   528  0EA1                     	;# 
   529  0EA2                     	;# 
   530  0EA3                     	;# 
   531  0EA4                     	;# 
   532  0EA5                     	;# 
   533  0EA9                     	;# 
   534  0EAA                     	;# 
   535  0EAB                     	;# 
   536  0EAC                     	;# 
   537  0EB1                     	;# 
   538  0EB2                     	;# 
   539  0EB3                     	;# 
   540  0EB8                     	;# 
   541  0EB9                     	;# 
   542  0EBA                     	;# 
   543  0EBB                     	;# 
   544  0EBC                     	;# 
   545  0EBD                     	;# 
   546  0EBE                     	;# 
   547  0EC3                     	;# 
   548  0EC5                     	;# 
   549  0EC6                     	;# 
   550  0EC7                     	;# 
   551  0EC8                     	;# 
   552  0EC9                     	;# 
   553  0ECA                     	;# 
   554  0ECB                     	;# 
   555  0ECC                     	;# 
   556  0F10                     	;# 
   557  0F11                     	;# 
   558  0F12                     	;# 
   559  0F13                     	;# 
   560  0F14                     	;# 
   561  0F15                     	;# 
   562  0F16                     	;# 
   563  0F17                     	;# 
   564  0F18                     	;# 
   565  0F19                     	;# 
   566  0F1A                     	;# 
   567  0F1B                     	;# 
   568  0F1C                     	;# 
   569  0F1D                     	;# 
   570  0F1E                     	;# 
   571  0F1F                     	;# 
   572  0F20                     	;# 
   573  0F21                     	;# 
   574  0F22                     	;# 
   575  0F23                     	;# 
   576  0F24                     	;# 
   577  0F25                     	;# 
   578  0F26                     	;# 
   579  0F27                     	;# 
   580  0F28                     	;# 
   581  0F29                     	;# 
   582  0F2A                     	;# 
   583  0F2B                     	;# 
   584  0F2C                     	;# 
   585  0F2D                     	;# 
   586  0F2E                     	;# 
   587  0F2F                     	;# 
   588  0F30                     	;# 
   589  0F31                     	;# 
   590  0F32                     	;# 
   591  0F38                     	;# 
   592  0F39                     	;# 
   593  0F3A                     	;# 
   594  0F3B                     	;# 
   595  0F3C                     	;# 
   596  0F3D                     	;# 
   597  0F3E                     	;# 
   598  0F3F                     	;# 
   599  0F40                     	;# 
   600  0F41                     	;# 
   601  0F43                     	;# 
   602  0F44                     	;# 
   603  0F45                     	;# 
   604  0F46                     	;# 
   605  0F47                     	;# 
   606  0F48                     	;# 
   607  0F49                     	;# 
   608  0F4A                     	;# 
   609  0F4B                     	;# 
   610  0F4C                     	;# 
   611  0F4E                     	;# 
   612  0F4F                     	;# 
   613  0F50                     	;# 
   614  0F51                     	;# 
   615  0F52                     	;# 
   616  0F53                     	;# 
   617  0F54                     	;# 
   618  0F55                     	;# 
   619  0F56                     	;# 
   620  0F57                     	;# 
   621  0F59                     	;# 
   622  0F5A                     	;# 
   623  0F5B                     	;# 
   624  0F5C                     	;# 
   625  0F5D                     	;# 
   626  0F61                     	;# 
   627  0F62                     	;# 
   628  0F64                     	;# 
   629  0F65                     	;# 
   630  0F66                     	;# 
   631  0F67                     	;# 
   632  0F68                     	;# 
   633  0F69                     	;# 
   634  0F6A                     	;# 
   635  0F6B                     	;# 
   636  0F6C                     	;# 
   637  0F6D                     	;# 
   638  0FE4                     	;# 
   639  0FE5                     	;# 
   640  0FE6                     	;# 
   641  0FE7                     	;# 
   642  0FE8                     	;# 
   643  0FE9                     	;# 
   644  0FEA                     	;# 
   645  0FEB                     	;# 
   646  0FED                     	;# 
   647  0FEE                     	;# 
   648  0FEF                     	;# 
   649  0000                     	;# 
   650  0001                     	;# 
   651  0002                     	;# 
   652  0003                     	;# 
   653  0004                     	;# 
   654  0005                     	;# 
   655  0006                     	;# 
   656  0007                     	;# 
   657  0008                     	;# 
   658  0009                     	;# 
   659  000A                     	;# 
   660  000B                     	;# 
   661  000C                     	;# 
   662  000D                     	;# 
   663  000E                     	;# 
   664  000F                     	;# 
   665  0010                     	;# 
   666  0011                     	;# 
   667  0012                     	;# 
   668  0013                     	;# 
   669  0014                     	;# 
   670  0015                     	;# 
   671  0016                     	;# 
   672  0017                     	;# 
   673  0018                     	;# 
   674  0019                     	;# 
   675  001A                     	;# 
   676  001C                     	;# 
   677  001C                     	;# 
   678  001D                     	;# 
   679  001D                     	;# 
   680  001E                     	;# 
   681  001F                     	;# 
   682  008C                     	;# 
   683  008C                     	;# 
   684  008D                     	;# 
   685  008E                     	;# 
   686  008E                     	;# 
   687  008F                     	;# 
   688  0090                     	;# 
   689  0090                     	;# 
   690  0091                     	;# 
   691  0093                     	;# 
   692  0094                     	;# 
   693  0095                     	;# 
   694  0096                     	;# 
   695  0097                     	;# 
   696  0098                     	;# 
   697  0099                     	;# 
   698  009A                     	;# 
   699  009B                     	;# 
   700  009C                     	;# 
   701  009D                     	;# 
   702  009E                     	;# 
   703  010C                     	;# 
   704  010D                     	;# 
   705  010E                     	;# 
   706  010E                     	;# 
   707  010F                     	;# 
   708  0110                     	;# 
   709  0110                     	;# 
   710  0111                     	;# 
   711  0112                     	;# 
   712  0112                     	;# 
   713  0113                     	;# 
   714  0114                     	;# 
   715  0114                     	;# 
   716  0115                     	;# 
   717  0116                     	;# 
   718  0116                     	;# 
   719  0117                     	;# 
   720  0119                     	;# 
   721  0119                     	;# 
   722  0119                     	;# 
   723  011A                     	;# 
   724  011A                     	;# 
   725  011A                     	;# 
   726  011B                     	;# 
   727  011B                     	;# 
   728  011B                     	;# 
   729  011B                     	;# 
   730  011B                     	;# 
   731  011C                     	;# 
   732  011C                     	;# 
   733  011C                     	;# 
   734  011D                     	;# 
   735  011D                     	;# 
   736  011D                     	;# 
   737  011E                     	;# 
   738  011E                     	;# 
   739  011E                     	;# 
   740  011F                     	;# 
   741  011F                     	;# 
   742  011F                     	;# 
   743  011F                     	;# 
   744  011F                     	;# 
   745  018C                     	;# 
   746  018D                     	;# 
   747  018E                     	;# 
   748  018F                     	;# 
   749  0190                     	;# 
   750  0191                     	;# 
   751  0192                     	;# 
   752  0196                     	;# 
   753  0197                     	;# 
   754  0198                     	;# 
   755  0199                     	;# 
   756  019A                     	;# 
   757  019B                     	;# 
   758  019C                     	;# 
   759  020C                     	;# 
   760  020C                     	;# 
   761  020D                     	;# 
   762  020E                     	;# 
   763  020F                     	;# 
   764  020F                     	;# 
   765  0210                     	;# 
   766  0210                     	;# 
   767  0211                     	;# 
   768  0211                     	;# 
   769  0212                     	;# 
   770  0212                     	;# 
   771  0213                     	;# 
   772  0214                     	;# 
   773  0215                     	;# 
   774  0215                     	;# 
   775  0216                     	;# 
   776  0216                     	;# 
   777  0217                     	;# 
   778  0217                     	;# 
   779  0218                     	;# 
   780  0218                     	;# 
   781  0219                     	;# 
   782  021A                     	;# 
   783  021B                     	;# 
   784  021B                     	;# 
   785  021C                     	;# 
   786  021C                     	;# 
   787  021D                     	;# 
   788  021D                     	;# 
   789  021E                     	;# 
   790  021F                     	;# 
   791  028C                     	;# 
   792  028C                     	;# 
   793  028D                     	;# 
   794  028D                     	;# 
   795  028E                     	;# 
   796  028F                     	;# 
   797  0290                     	;# 
   798  0290                     	;# 
   799  0291                     	;# 
   800  0292                     	;# 
   801  0292                     	;# 
   802  0293                     	;# 
   803  0293                     	;# 
   804  0294                     	;# 
   805  0295                     	;# 
   806  0296                     	;# 
   807  0296                     	;# 
   808  0297                     	;# 
   809  0298                     	;# 
   810  0298                     	;# 
   811  0299                     	;# 
   812  0299                     	;# 
   813  029A                     	;# 
   814  029B                     	;# 
   815  029C                     	;# 
   816  029C                     	;# 
   817  029D                     	;# 
   818  030C                     	;# 
   819  030C                     	;# 
   820  030D                     	;# 
   821  030E                     	;# 
   822  030F                     	;# 
   823  0310                     	;# 
   824  0310                     	;# 
   825  0311                     	;# 
   826  0312                     	;# 
   827  0313                     	;# 
   828  0314                     	;# 
   829  0314                     	;# 
   830  0315                     	;# 
   831  0316                     	;# 
   832  0317                     	;# 
   833  0318                     	;# 
   834  0318                     	;# 
   835  0319                     	;# 
   836  031A                     	;# 
   837  031B                     	;# 
   838  031C                     	;# 
   839  031C                     	;# 
   840  031D                     	;# 
   841  031E                     	;# 
   842  031F                     	;# 
   843  038C                     	;# 
   844  038D                     	;# 
   845  038E                     	;# 
   846  0390                     	;# 
   847  0391                     	;# 
   848  0392                     	;# 
   849  040C                     	;# 
   850  040D                     	;# 
   851  040E                     	;# 
   852  040F                     	;# 
   853  0410                     	;# 
   854  0411                     	;# 
   855  0416                     	;# 
   856  0416                     	;# 
   857  0417                     	;# 
   858  0418                     	;# 
   859  0418                     	;# 
   860  0419                     	;# 
   861  041A                     	;# 
   862  041A                     	;# 
   863  041B                     	;# 
   864  041C                     	;# 
   865  041C                     	;# 
   866  041D                     	;# 
   867  041E                     	;# 
   868  041F                     	;# 
   869  048C                     	;# 
   870  048C                     	;# 
   871  048D                     	;# 
   872  048E                     	;# 
   873  048F                     	;# 
   874  048F                     	;# 
   875  0490                     	;# 
   876  0491                     	;# 
   877  0492                     	;# 
   878  0492                     	;# 
   879  0493                     	;# 
   880  0494                     	;# 
   881  0495                     	;# 
   882  0495                     	;# 
   883  0496                     	;# 
   884  0497                     	;# 
   885  0498                     	;# 
   886  0499                     	;# 
   887  049A                     	;# 
   888  049B                     	;# 
   889  049C                     	;# 
   890  049D                     	;# 
   891  050C                     	;# 
   892  050C                     	;# 
   893  050D                     	;# 
   894  050E                     	;# 
   895  050F                     	;# 
   896  050F                     	;# 
   897  0510                     	;# 
   898  0511                     	;# 
   899  0512                     	;# 
   900  0512                     	;# 
   901  0513                     	;# 
   902  0514                     	;# 
   903  0515                     	;# 
   904  0515                     	;# 
   905  0516                     	;# 
   906  0517                     	;# 
   907  0518                     	;# 
   908  0519                     	;# 
   909  051A                     	;# 
   910  051B                     	;# 
   911  051C                     	;# 
   912  051D                     	;# 
   913  058C                     	;# 
   914  058C                     	;# 
   915  058D                     	;# 
   916  058E                     	;# 
   917  058F                     	;# 
   918  058F                     	;# 
   919  0590                     	;# 
   920  0591                     	;# 
   921  0592                     	;# 
   922  0593                     	;# 
   923  060C                     	;# 
   924  060D                     	;# 
   925  060E                     	;# 
   926  060F                     	;# 
   927  0610                     	;# 
   928  0611                     	;# 
   929  0612                     	;# 
   930  0613                     	;# 
   931  0614                     	;# 
   932  0616                     	;# 
   933  0617                     	;# 
   934  0618                     	;# 
   935  0619                     	;# 
   936  061A                     	;# 
   937  061B                     	;# 
   938  061C                     	;# 
   939  061D                     	;# 
   940  061E                     	;# 
   941  068C                     	;# 
   942  068D                     	;# 
   943  068E                     	;# 
   944  068F                     	;# 
   945  0690                     	;# 
   946  0691                     	;# 
   947  0692                     	;# 
   948  0693                     	;# 
   949  0694                     	;# 
   950  070C                     	;# 
   951  070D                     	;# 
   952  070E                     	;# 
   953  070F                     	;# 
   954  0710                     	;# 
   955  0711                     	;# 
   956  0712                     	;# 
   957  0713                     	;# 
   958  0714                     	;# 
   959  0716                     	;# 
   960  0717                     	;# 
   961  0718                     	;# 
   962  0719                     	;# 
   963  071A                     	;# 
   964  071B                     	;# 
   965  071C                     	;# 
   966  071D                     	;# 
   967  071E                     	;# 
   968  0796                     	;# 
   969  0797                     	;# 
   970  0798                     	;# 
   971  0799                     	;# 
   972  079A                     	;# 
   973  079B                     	;# 
   974  080C                     	;# 
   975  080D                     	;# 
   976  080E                     	;# 
   977  080F                     	;# 
   978  0810                     	;# 
   979  0811                     	;# 
   980  0812                     	;# 
   981  0813                     	;# 
   982  0814                     	;# 
   983  081A                     	;# 
   984  081B                     	;# 
   985  081C                     	;# 
   986  081D                     	;# 
   987  081E                     	;# 
   988  081F                     	;# 
   989  088C                     	;# 
   990  088D                     	;# 
   991  088E                     	;# 
   992  088F                     	;# 
   993  0890                     	;# 
   994  0891                     	;# 
   995  0892                     	;# 
   996  0893                     	;# 
   997  0895                     	;# 
   998  0896                     	;# 
   999  0897                     	;# 
  1000  0898                     	;# 
  1001  0899                     	;# 
  1002  089A                     	;# 
  1003  089B                     	;# 
  1004  090C                     	;# 
  1005  090E                     	;# 
  1006  090F                     	;# 
  1007  091F                     	;# 
  1008  091F                     	;# 
  1009  098F                     	;# 
  1010  098F                     	;# 
  1011  0990                     	;# 
  1012  0991                     	;# 
  1013  0992                     	;# 
  1014  0993                     	;# 
  1015  0994                     	;# 
  1016  0995                     	;# 
  1017  0996                     	;# 
  1018  0997                     	;# 
  1019  0E0F                     	;# 
  1020  0E10                     	;# 
  1021  0E11                     	;# 
  1022  0E12                     	;# 
  1023  0E13                     	;# 
  1024  0E14                     	;# 
  1025  0E15                     	;# 
  1026  0E16                     	;# 
  1027  0E17                     	;# 
  1028  0E18                     	;# 
  1029  0E19                     	;# 
  1030  0E1A                     	;# 
  1031  0E1B                     	;# 
  1032  0E1C                     	;# 
  1033  0E1D                     	;# 
  1034  0E1E                     	;# 
  1035  0E1F                     	;# 
  1036  0E20                     	;# 
  1037  0E21                     	;# 
  1038  0E22                     	;# 
  1039  0E23                     	;# 
  1040  0E24                     	;# 
  1041  0E25                     	;# 
  1042  0E26                     	;# 
  1043  0E27                     	;# 
  1044  0E28                     	;# 
  1045  0E29                     	;# 
  1046  0E2A                     	;# 
  1047  0E2B                     	;# 
  1048  0E2C                     	;# 
  1049  0E2D                     	;# 
  1050  0E2E                     	;# 
  1051  0E2F                     	;# 
  1052  0E30                     	;# 
  1053  0E31                     	;# 
  1054  0E32                     	;# 
  1055  0E33                     	;# 
  1056  0E34                     	;# 
  1057  0E35                     	;# 
  1058  0E36                     	;# 
  1059  0E37                     	;# 
  1060  0E8F                     	;# 
  1061  0E90                     	;# 
  1062  0E91                     	;# 
  1063  0E92                     	;# 
  1064  0E93                     	;# 
  1065  0E94                     	;# 
  1066  0E95                     	;# 
  1067  0E96                     	;# 
  1068  0E97                     	;# 
  1069  0E9C                     	;# 
  1070  0E9D                     	;# 
  1071  0E9E                     	;# 
  1072  0EA1                     	;# 
  1073  0EA2                     	;# 
  1074  0EA3                     	;# 
  1075  0EA4                     	;# 
  1076  0EA5                     	;# 
  1077  0EA9                     	;# 
  1078  0EAA                     	;# 
  1079  0EAB                     	;# 
  1080  0EAC                     	;# 
  1081  0EB1                     	;# 
  1082  0EB2                     	;# 
  1083  0EB3                     	;# 
  1084  0EB8                     	;# 
  1085  0EB9                     	;# 
  1086  0EBA                     	;# 
  1087  0EBB                     	;# 
  1088  0EBC                     	;# 
  1089  0EBD                     	;# 
  1090  0EBE                     	;# 
  1091  0EC3                     	;# 
  1092  0EC5                     	;# 
  1093  0EC6                     	;# 
  1094  0EC7                     	;# 
  1095  0EC8                     	;# 
  1096  0EC9                     	;# 
  1097  0ECA                     	;# 
  1098  0ECB                     	;# 
  1099  0ECC                     	;# 
  1100  0F10                     	;# 
  1101  0F11                     	;# 
  1102  0F12                     	;# 
  1103  0F13                     	;# 
  1104  0F14                     	;# 
  1105  0F15                     	;# 
  1106  0F16                     	;# 
  1107  0F17                     	;# 
  1108  0F18                     	;# 
  1109  0F19                     	;# 
  1110  0F1A                     	;# 
  1111  0F1B                     	;# 
  1112  0F1C                     	;# 
  1113  0F1D                     	;# 
  1114  0F1E                     	;# 
  1115  0F1F                     	;# 
  1116  0F20                     	;# 
  1117  0F21                     	;# 
  1118  0F22                     	;# 
  1119  0F23                     	;# 
  1120  0F24                     	;# 
  1121  0F25                     	;# 
  1122  0F26                     	;# 
  1123  0F27                     	;# 
  1124  0F28                     	;# 
  1125  0F29                     	;# 
  1126  0F2A                     	;# 
  1127  0F2B                     	;# 
  1128  0F2C                     	;# 
  1129  0F2D                     	;# 
  1130  0F2E                     	;# 
  1131  0F2F                     	;# 
  1132  0F30                     	;# 
  1133  0F31                     	;# 
  1134  0F32                     	;# 
  1135  0F38                     	;# 
  1136  0F39                     	;# 
  1137  0F3A                     	;# 
  1138  0F3B                     	;# 
  1139  0F3C                     	;# 
  1140  0F3D                     	;# 
  1141  0F3E                     	;# 
  1142  0F3F                     	;# 
  1143  0F40                     	;# 
  1144  0F41                     	;# 
  1145  0F43                     	;# 
  1146  0F44                     	;# 
  1147  0F45                     	;# 
  1148  0F46                     	;# 
  1149  0F47                     	;# 
  1150  0F48                     	;# 
  1151  0F49                     	;# 
  1152  0F4A                     	;# 
  1153  0F4B                     	;# 
  1154  0F4C                     	;# 
  1155  0F4E                     	;# 
  1156  0F4F                     	;# 
  1157  0F50                     	;# 
  1158  0F51                     	;# 
  1159  0F52                     	;# 
  1160  0F53                     	;# 
  1161  0F54                     	;# 
  1162  0F55                     	;# 
  1163  0F56                     	;# 
  1164  0F57                     	;# 
  1165  0F59                     	;# 
  1166  0F5A                     	;# 
  1167  0F5B                     	;# 
  1168  0F5C                     	;# 
  1169  0F5D                     	;# 
  1170  0F61                     	;# 
  1171  0F62                     	;# 
  1172  0F64                     	;# 
  1173  0F65                     	;# 
  1174  0F66                     	;# 
  1175  0F67                     	;# 
  1176  0F68                     	;# 
  1177  0F69                     	;# 
  1178  0F6A                     	;# 
  1179  0F6B                     	;# 
  1180  0F6C                     	;# 
  1181  0F6D                     	;# 
  1182  0FE4                     	;# 
  1183  0FE5                     	;# 
  1184  0FE6                     	;# 
  1185  0FE7                     	;# 
  1186  0FE8                     	;# 
  1187  0FE9                     	;# 
  1188  0FEA                     	;# 
  1189  0FEB                     	;# 
  1190  0FED                     	;# 
  1191  0FEE                     	;# 
  1192  0FEF                     	;# 
  1193  0000                     	;# 
  1194  0001                     	;# 
  1195  0002                     	;# 
  1196  0003                     	;# 
  1197  0004                     	;# 
  1198  0005                     	;# 
  1199  0006                     	;# 
  1200  0007                     	;# 
  1201  0008                     	;# 
  1202  0009                     	;# 
  1203  000A                     	;# 
  1204  000B                     	;# 
  1205  000C                     	;# 
  1206  000D                     	;# 
  1207  000E                     	;# 
  1208  000F                     	;# 
  1209  0010                     	;# 
  1210  0011                     	;# 
  1211  0012                     	;# 
  1212  0013                     	;# 
  1213  0014                     	;# 
  1214  0015                     	;# 
  1215  0016                     	;# 
  1216  0017                     	;# 
  1217  0018                     	;# 
  1218  0019                     	;# 
  1219  001A                     	;# 
  1220  001C                     	;# 
  1221  001C                     	;# 
  1222  001D                     	;# 
  1223  001D                     	;# 
  1224  001E                     	;# 
  1225  001F                     	;# 
  1226  008C                     	;# 
  1227  008C                     	;# 
  1228  008D                     	;# 
  1229  008E                     	;# 
  1230  008E                     	;# 
  1231  008F                     	;# 
  1232  0090                     	;# 
  1233  0090                     	;# 
  1234  0091                     	;# 
  1235  0093                     	;# 
  1236  0094                     	;# 
  1237  0095                     	;# 
  1238  0096                     	;# 
  1239  0097                     	;# 
  1240  0098                     	;# 
  1241  0099                     	;# 
  1242  009A                     	;# 
  1243  009B                     	;# 
  1244  009C                     	;# 
  1245  009D                     	;# 
  1246  009E                     	;# 
  1247  010C                     	;# 
  1248  010D                     	;# 
  1249  010E                     	;# 
  1250  010E                     	;# 
  1251  010F                     	;# 
  1252  0110                     	;# 
  1253  0110                     	;# 
  1254  0111                     	;# 
  1255  0112                     	;# 
  1256  0112                     	;# 
  1257  0113                     	;# 
  1258  0114                     	;# 
  1259  0114                     	;# 
  1260  0115                     	;# 
  1261  0116                     	;# 
  1262  0116                     	;# 
  1263  0117                     	;# 
  1264  0119                     	;# 
  1265  0119                     	;# 
  1266  0119                     	;# 
  1267  011A                     	;# 
  1268  011A                     	;# 
  1269  011A                     	;# 
  1270  011B                     	;# 
  1271  011B                     	;# 
  1272  011B                     	;# 
  1273  011B                     	;# 
  1274  011B                     	;# 
  1275  011C                     	;# 
  1276  011C                     	;# 
  1277  011C                     	;# 
  1278  011D                     	;# 
  1279  011D                     	;# 
  1280  011D                     	;# 
  1281  011E                     	;# 
  1282  011E                     	;# 
  1283  011E                     	;# 
  1284  011F                     	;# 
  1285  011F                     	;# 
  1286  011F                     	;# 
  1287  011F                     	;# 
  1288  011F                     	;# 
  1289  018C                     	;# 
  1290  018D                     	;# 
  1291  018E                     	;# 
  1292  018F                     	;# 
  1293  0190                     	;# 
  1294  0191                     	;# 
  1295  0192                     	;# 
  1296  0196                     	;# 
  1297  0197                     	;# 
  1298  0198                     	;# 
  1299  0199                     	;# 
  1300  019A                     	;# 
  1301  019B                     	;# 
  1302  019C                     	;# 
  1303  020C                     	;# 
  1304  020C                     	;# 
  1305  020D                     	;# 
  1306  020E                     	;# 
  1307  020F                     	;# 
  1308  020F                     	;# 
  1309  0210                     	;# 
  1310  0210                     	;# 
  1311  0211                     	;# 
  1312  0211                     	;# 
  1313  0212                     	;# 
  1314  0212                     	;# 
  1315  0213                     	;# 
  1316  0214                     	;# 
  1317  0215                     	;# 
  1318  0215                     	;# 
  1319  0216                     	;# 
  1320  0216                     	;# 
  1321  0217                     	;# 
  1322  0217                     	;# 
  1323  0218                     	;# 
  1324  0218                     	;# 
  1325  0219                     	;# 
  1326  021A                     	;# 
  1327  021B                     	;# 
  1328  021B                     	;# 
  1329  021C                     	;# 
  1330  021C                     	;# 
  1331  021D                     	;# 
  1332  021D                     	;# 
  1333  021E                     	;# 
  1334  021F                     	;# 
  1335  028C                     	;# 
  1336  028C                     	;# 
  1337  028D                     	;# 
  1338  028D                     	;# 
  1339  028E                     	;# 
  1340  028F                     	;# 
  1341  0290                     	;# 
  1342  0290                     	;# 
  1343  0291                     	;# 
  1344  0292                     	;# 
  1345  0292                     	;# 
  1346  0293                     	;# 
  1347  0293                     	;# 
  1348  0294                     	;# 
  1349  0295                     	;# 
  1350  0296                     	;# 
  1351  0296                     	;# 
  1352  0297                     	;# 
  1353  0298                     	;# 
  1354  0298                     	;# 
  1355  0299                     	;# 
  1356  0299                     	;# 
  1357  029A                     	;# 
  1358  029B                     	;# 
  1359  029C                     	;# 
  1360  029C                     	;# 
  1361  029D                     	;# 
  1362  030C                     	;# 
  1363  030C                     	;# 
  1364  030D                     	;# 
  1365  030E                     	;# 
  1366  030F                     	;# 
  1367  0310                     	;# 
  1368  0310                     	;# 
  1369  0311                     	;# 
  1370  0312                     	;# 
  1371  0313                     	;# 
  1372  0314                     	;# 
  1373  0314                     	;# 
  1374  0315                     	;# 
  1375  0316                     	;# 
  1376  0317                     	;# 
  1377  0318                     	;# 
  1378  0318                     	;# 
  1379  0319                     	;# 
  1380  031A                     	;# 
  1381  031B                     	;# 
  1382  031C                     	;# 
  1383  031C                     	;# 
  1384  031D                     	;# 
  1385  031E                     	;# 
  1386  031F                     	;# 
  1387  038C                     	;# 
  1388  038D                     	;# 
  1389  038E                     	;# 
  1390  0390                     	;# 
  1391  0391                     	;# 
  1392  0392                     	;# 
  1393  040C                     	;# 
  1394  040D                     	;# 
  1395  040E                     	;# 
  1396  040F                     	;# 
  1397  0410                     	;# 
  1398  0411                     	;# 
  1399  0416                     	;# 
  1400  0416                     	;# 
  1401  0417                     	;# 
  1402  0418                     	;# 
  1403  0418                     	;# 
  1404  0419                     	;# 
  1405  041A                     	;# 
  1406  041A                     	;# 
  1407  041B                     	;# 
  1408  041C                     	;# 
  1409  041C                     	;# 
  1410  041D                     	;# 
  1411  041E                     	;# 
  1412  041F                     	;# 
  1413  048C                     	;# 
  1414  048C                     	;# 
  1415  048D                     	;# 
  1416  048E                     	;# 
  1417  048F                     	;# 
  1418  048F                     	;# 
  1419  0490                     	;# 
  1420  0491                     	;# 
  1421  0492                     	;# 
  1422  0492                     	;# 
  1423  0493                     	;# 
  1424  0494                     	;# 
  1425  0495                     	;# 
  1426  0495                     	;# 
  1427  0496                     	;# 
  1428  0497                     	;# 
  1429  0498                     	;# 
  1430  0499                     	;# 
  1431  049A                     	;# 
  1432  049B                     	;# 
  1433  049C                     	;# 
  1434  049D                     	;# 
  1435  050C                     	;# 
  1436  050C                     	;# 
  1437  050D                     	;# 
  1438  050E                     	;# 
  1439  050F                     	;# 
  1440  050F                     	;# 
  1441  0510                     	;# 
  1442  0511                     	;# 
  1443  0512                     	;# 
  1444  0512                     	;# 
  1445  0513                     	;# 
  1446  0514                     	;# 
  1447  0515                     	;# 
  1448  0515                     	;# 
  1449  0516                     	;# 
  1450  0517                     	;# 
  1451  0518                     	;# 
  1452  0519                     	;# 
  1453  051A                     	;# 
  1454  051B                     	;# 
  1455  051C                     	;# 
  1456  051D                     	;# 
  1457  058C                     	;# 
  1458  058C                     	;# 
  1459  058D                     	;# 
  1460  058E                     	;# 
  1461  058F                     	;# 
  1462  058F                     	;# 
  1463  0590                     	;# 
  1464  0591                     	;# 
  1465  0592                     	;# 
  1466  0593                     	;# 
  1467  060C                     	;# 
  1468  060D                     	;# 
  1469  060E                     	;# 
  1470  060F                     	;# 
  1471  0610                     	;# 
  1472  0611                     	;# 
  1473  0612                     	;# 
  1474  0613                     	;# 
  1475  0614                     	;# 
  1476  0616                     	;# 
  1477  0617                     	;# 
  1478  0618                     	;# 
  1479  0619                     	;# 
  1480  061A                     	;# 
  1481  061B                     	;# 
  1482  061C                     	;# 
  1483  061D                     	;# 
  1484  061E                     	;# 
  1485  068C                     	;# 
  1486  068D                     	;# 
  1487  068E                     	;# 
  1488  068F                     	;# 
  1489  0690                     	;# 
  1490  0691                     	;# 
  1491  0692                     	;# 
  1492  0693                     	;# 
  1493  0694                     	;# 
  1494  070C                     	;# 
  1495  070D                     	;# 
  1496  070E                     	;# 
  1497  070F                     	;# 
  1498  0710                     	;# 
  1499  0711                     	;# 
  1500  0712                     	;# 
  1501  0713                     	;# 
  1502  0714                     	;# 
  1503  0716                     	;# 
  1504  0717                     	;# 
  1505  0718                     	;# 
  1506  0719                     	;# 
  1507  071A                     	;# 
  1508  071B                     	;# 
  1509  071C                     	;# 
  1510  071D                     	;# 
  1511  071E                     	;# 
  1512  0796                     	;# 
  1513  0797                     	;# 
  1514  0798                     	;# 
  1515  0799                     	;# 
  1516  079A                     	;# 
  1517  079B                     	;# 
  1518  080C                     	;# 
  1519  080D                     	;# 
  1520  080E                     	;# 
  1521  080F                     	;# 
  1522  0810                     	;# 
  1523  0811                     	;# 
  1524  0812                     	;# 
  1525  0813                     	;# 
  1526  0814                     	;# 
  1527  081A                     	;# 
  1528  081B                     	;# 
  1529  081C                     	;# 
  1530  081D                     	;# 
  1531  081E                     	;# 
  1532  081F                     	;# 
  1533  088C                     	;# 
  1534  088D                     	;# 
  1535  088E                     	;# 
  1536  088F                     	;# 
  1537  0890                     	;# 
  1538  0891                     	;# 
  1539  0892                     	;# 
  1540  0893                     	;# 
  1541  0895                     	;# 
  1542  0896                     	;# 
  1543  0897                     	;# 
  1544  0898                     	;# 
  1545  0899                     	;# 
  1546  089A                     	;# 
  1547  089B                     	;# 
  1548  090C                     	;# 
  1549  090E                     	;# 
  1550  090F                     	;# 
  1551  091F                     	;# 
  1552  091F                     	;# 
  1553  098F                     	;# 
  1554  098F                     	;# 
  1555  0990                     	;# 
  1556  0991                     	;# 
  1557  0992                     	;# 
  1558  0993                     	;# 
  1559  0994                     	;# 
  1560  0995                     	;# 
  1561  0996                     	;# 
  1562  0997                     	;# 
  1563  0E0F                     	;# 
  1564  0E10                     	;# 
  1565  0E11                     	;# 
  1566  0E12                     	;# 
  1567  0E13                     	;# 
  1568  0E14                     	;# 
  1569  0E15                     	;# 
  1570  0E16                     	;# 
  1571  0E17                     	;# 
  1572  0E18                     	;# 
  1573  0E19                     	;# 
  1574  0E1A                     	;# 
  1575  0E1B                     	;# 
  1576  0E1C                     	;# 
  1577  0E1D                     	;# 
  1578  0E1E                     	;# 
  1579  0E1F                     	;# 
  1580  0E20                     	;# 
  1581  0E21                     	;# 
  1582  0E22                     	;# 
  1583  0E23                     	;# 
  1584  0E24                     	;# 
  1585  0E25                     	;# 
  1586  0E26                     	;# 
  1587  0E27                     	;# 
  1588  0E28                     	;# 
  1589  0E29                     	;# 
  1590  0E2A                     	;# 
  1591  0E2B                     	;# 
  1592  0E2C                     	;# 
  1593  0E2D                     	;# 
  1594  0E2E                     	;# 
  1595  0E2F                     	;# 
  1596  0E30                     	;# 
  1597  0E31                     	;# 
  1598  0E32                     	;# 
  1599  0E33                     	;# 
  1600  0E34                     	;# 
  1601  0E35                     	;# 
  1602  0E36                     	;# 
  1603  0E37                     	;# 
  1604  0E8F                     	;# 
  1605  0E90                     	;# 
  1606  0E91                     	;# 
  1607  0E92                     	;# 
  1608  0E93                     	;# 
  1609  0E94                     	;# 
  1610  0E95                     	;# 
  1611  0E96                     	;# 
  1612  0E97                     	;# 
  1613  0E9C                     	;# 
  1614  0E9D                     	;# 
  1615  0E9E                     	;# 
  1616  0EA1                     	;# 
  1617  0EA2                     	;# 
  1618  0EA3                     	;# 
  1619  0EA4                     	;# 
  1620  0EA5                     	;# 
  1621  0EA9                     	;# 
  1622  0EAA                     	;# 
  1623  0EAB                     	;# 
  1624  0EAC                     	;# 
  1625  0EB1                     	;# 
  1626  0EB2                     	;# 
  1627  0EB3                     	;# 
  1628  0EB8                     	;# 
  1629  0EB9                     	;# 
  1630  0EBA                     	;# 
  1631  0EBB                     	;# 
  1632  0EBC                     	;# 
  1633  0EBD                     	;# 
  1634  0EBE                     	;# 
  1635  0EC3                     	;# 
  1636  0EC5                     	;# 
  1637  0EC6                     	;# 
  1638  0EC7                     	;# 
  1639  0EC8                     	;# 
  1640  0EC9                     	;# 
  1641  0ECA                     	;# 
  1642  0ECB                     	;# 
  1643  0ECC                     	;# 
  1644  0F10                     	;# 
  1645  0F11                     	;# 
  1646  0F12                     	;# 
  1647  0F13                     	;# 
  1648  0F14                     	;# 
  1649  0F15                     	;# 
  1650  0F16                     	;# 
  1651  0F17                     	;# 
  1652  0F18                     	;# 
  1653  0F19                     	;# 
  1654  0F1A                     	;# 
  1655  0F1B                     	;# 
  1656  0F1C                     	;# 
  1657  0F1D                     	;# 
  1658  0F1E                     	;# 
  1659  0F1F                     	;# 
  1660  0F20                     	;# 
  1661  0F21                     	;# 
  1662  0F22                     	;# 
  1663  0F23                     	;# 
  1664  0F24                     	;# 
  1665  0F25                     	;# 
  1666  0F26                     	;# 
  1667  0F27                     	;# 
  1668  0F28                     	;# 
  1669  0F29                     	;# 
  1670  0F2A                     	;# 
  1671  0F2B                     	;# 
  1672  0F2C                     	;# 
  1673  0F2D                     	;# 
  1674  0F2E                     	;# 
  1675  0F2F                     	;# 
  1676  0F30                     	;# 
  1677  0F31                     	;# 
  1678  0F32                     	;# 
  1679  0F38                     	;# 
  1680  0F39                     	;# 
  1681  0F3A                     	;# 
  1682  0F3B                     	;# 
  1683  0F3C                     	;# 
  1684  0F3D                     	;# 
  1685  0F3E                     	;# 
  1686  0F3F                     	;# 
  1687  0F40                     	;# 
  1688  0F41                     	;# 
  1689  0F43                     	;# 
  1690  0F44                     	;# 
  1691  0F45                     	;# 
  1692  0F46                     	;# 
  1693  0F47                     	;# 
  1694  0F48                     	;# 
  1695  0F49                     	;# 
  1696  0F4A                     	;# 
  1697  0F4B                     	;# 
  1698  0F4C                     	;# 
  1699  0F4E                     	;# 
  1700  0F4F                     	;# 
  1701  0F50                     	;# 
  1702  0F51                     	;# 
  1703  0F52                     	;# 
  1704  0F53                     	;# 
  1705  0F54                     	;# 
  1706  0F55                     	;# 
  1707  0F56                     	;# 
  1708  0F57                     	;# 
  1709  0F59                     	;# 
  1710  0F5A                     	;# 
  1711  0F5B                     	;# 
  1712  0F5C                     	;# 
  1713  0F5D                     	;# 
  1714  0F61                     	;# 
  1715  0F62                     	;# 
  1716  0F64                     	;# 
  1717  0F65                     	;# 
  1718  0F66                     	;# 
  1719  0F67                     	;# 
  1720  0F68                     	;# 
  1721  0F69                     	;# 
  1722  0F6A                     	;# 
  1723  0F6B                     	;# 
  1724  0F6C                     	;# 
  1725  0F6D                     	;# 
  1726  0FE4                     	;# 
  1727  0FE5                     	;# 
  1728  0FE6                     	;# 
  1729  0FE7                     	;# 
  1730  0FE8                     	;# 
  1731  0FE9                     	;# 
  1732  0FEA                     	;# 
  1733  0FEB                     	;# 
  1734  0FED                     	;# 
  1735  0FEE                     	;# 
  1736  0FEF                     	;# 
  1737  0000                     	;# 
  1738  0001                     	;# 
  1739  0002                     	;# 
  1740  0003                     	;# 
  1741  0004                     	;# 
  1742  0005                     	;# 
  1743  0006                     	;# 
  1744  0007                     	;# 
  1745  0008                     	;# 
  1746  0009                     	;# 
  1747  000A                     	;# 
  1748  000B                     	;# 
  1749  000C                     	;# 
  1750  000D                     	;# 
  1751  000E                     	;# 
  1752  000F                     	;# 
  1753  0010                     	;# 
  1754  0011                     	;# 
  1755  0012                     	;# 
  1756  0013                     	;# 
  1757  0014                     	;# 
  1758  0015                     	;# 
  1759  0016                     	;# 
  1760  0017                     	;# 
  1761  0018                     	;# 
  1762  0019                     	;# 
  1763  001A                     	;# 
  1764  001C                     	;# 
  1765  001C                     	;# 
  1766  001D                     	;# 
  1767  001D                     	;# 
  1768  001E                     	;# 
  1769  001F                     	;# 
  1770  008C                     	;# 
  1771  008C                     	;# 
  1772  008D                     	;# 
  1773  008E                     	;# 
  1774  008E                     	;# 
  1775  008F                     	;# 
  1776  0090                     	;# 
  1777  0090                     	;# 
  1778  0091                     	;# 
  1779  0093                     	;# 
  1780  0094                     	;# 
  1781  0095                     	;# 
  1782  0096                     	;# 
  1783  0097                     	;# 
  1784  0098                     	;# 
  1785  0099                     	;# 
  1786  009A                     	;# 
  1787  009B                     	;# 
  1788  009C                     	;# 
  1789  009D                     	;# 
  1790  009E                     	;# 
  1791  010C                     	;# 
  1792  010D                     	;# 
  1793  010E                     	;# 
  1794  010E                     	;# 
  1795  010F                     	;# 
  1796  0110                     	;# 
  1797  0110                     	;# 
  1798  0111                     	;# 
  1799  0112                     	;# 
  1800  0112                     	;# 
  1801  0113                     	;# 
  1802  0114                     	;# 
  1803  0114                     	;# 
  1804  0115                     	;# 
  1805  0116                     	;# 
  1806  0116                     	;# 
  1807  0117                     	;# 
  1808  0119                     	;# 
  1809  0119                     	;# 
  1810  0119                     	;# 
  1811  011A                     	;# 
  1812  011A                     	;# 
  1813  011A                     	;# 
  1814  011B                     	;# 
  1815  011B                     	;# 
  1816  011B                     	;# 
  1817  011B                     	;# 
  1818  011B                     	;# 
  1819  011C                     	;# 
  1820  011C                     	;# 
  1821  011C                     	;# 
  1822  011D                     	;# 
  1823  011D                     	;# 
  1824  011D                     	;# 
  1825  011E                     	;# 
  1826  011E                     	;# 
  1827  011E                     	;# 
  1828  011F                     	;# 
  1829  011F                     	;# 
  1830  011F                     	;# 
  1831  011F                     	;# 
  1832  011F                     	;# 
  1833  018C                     	;# 
  1834  018D                     	;# 
  1835  018E                     	;# 
  1836  018F                     	;# 
  1837  0190                     	;# 
  1838  0191                     	;# 
  1839  0192                     	;# 
  1840  0196                     	;# 
  1841  0197                     	;# 
  1842  0198                     	;# 
  1843  0199                     	;# 
  1844  019A                     	;# 
  1845  019B                     	;# 
  1846  019C                     	;# 
  1847  020C                     	;# 
  1848  020C                     	;# 
  1849  020D                     	;# 
  1850  020E                     	;# 
  1851  020F                     	;# 
  1852  020F                     	;# 
  1853  0210                     	;# 
  1854  0210                     	;# 
  1855  0211                     	;# 
  1856  0211                     	;# 
  1857  0212                     	;# 
  1858  0212                     	;# 
  1859  0213                     	;# 
  1860  0214                     	;# 
  1861  0215                     	;# 
  1862  0215                     	;# 
  1863  0216                     	;# 
  1864  0216                     	;# 
  1865  0217                     	;# 
  1866  0217                     	;# 
  1867  0218                     	;# 
  1868  0218                     	;# 
  1869  0219                     	;# 
  1870  021A                     	;# 
  1871  021B                     	;# 
  1872  021B                     	;# 
  1873  021C                     	;# 
  1874  021C                     	;# 
  1875  021D                     	;# 
  1876  021D                     	;# 
  1877  021E                     	;# 
  1878  021F                     	;# 
  1879  028C                     	;# 
  1880  028C                     	;# 
  1881  028D                     	;# 
  1882  028D                     	;# 
  1883  028E                     	;# 
  1884  028F                     	;# 
  1885  0290                     	;# 
  1886  0290                     	;# 
  1887  0291                     	;# 
  1888  0292                     	;# 
  1889  0292                     	;# 
  1890  0293                     	;# 
  1891  0293                     	;# 
  1892  0294                     	;# 
  1893  0295                     	;# 
  1894  0296                     	;# 
  1895  0296                     	;# 
  1896  0297                     	;# 
  1897  0298                     	;# 
  1898  0298                     	;# 
  1899  0299                     	;# 
  1900  0299                     	;# 
  1901  029A                     	;# 
  1902  029B                     	;# 
  1903  029C                     	;# 
  1904  029C                     	;# 
  1905  029D                     	;# 
  1906  030C                     	;# 
  1907  030C                     	;# 
  1908  030D                     	;# 
  1909  030E                     	;# 
  1910  030F                     	;# 
  1911  0310                     	;# 
  1912  0310                     	;# 
  1913  0311                     	;# 
  1914  0312                     	;# 
  1915  0313                     	;# 
  1916  0314                     	;# 
  1917  0314                     	;# 
  1918  0315                     	;# 
  1919  0316                     	;# 
  1920  0317                     	;# 
  1921  0318                     	;# 
  1922  0318                     	;# 
  1923  0319                     	;# 
  1924  031A                     	;# 
  1925  031B                     	;# 
  1926  031C                     	;# 
  1927  031C                     	;# 
  1928  031D                     	;# 
  1929  031E                     	;# 
  1930  031F                     	;# 
  1931  038C                     	;# 
  1932  038D                     	;# 
  1933  038E                     	;# 
  1934  0390                     	;# 
  1935  0391                     	;# 
  1936  0392                     	;# 
  1937  040C                     	;# 
  1938  040D                     	;# 
  1939  040E                     	;# 
  1940  040F                     	;# 
  1941  0410                     	;# 
  1942  0411                     	;# 
  1943  0416                     	;# 
  1944  0416                     	;# 
  1945  0417                     	;# 
  1946  0418                     	;# 
  1947  0418                     	;# 
  1948  0419                     	;# 
  1949  041A                     	;# 
  1950  041A                     	;# 
  1951  041B                     	;# 
  1952  041C                     	;# 
  1953  041C                     	;# 
  1954  041D                     	;# 
  1955  041E                     	;# 
  1956  041F                     	;# 
  1957  048C                     	;# 
  1958  048C                     	;# 
  1959  048D                     	;# 
  1960  048E                     	;# 
  1961  048F                     	;# 
  1962  048F                     	;# 
  1963  0490                     	;# 
  1964  0491                     	;# 
  1965  0492                     	;# 
  1966  0492                     	;# 
  1967  0493                     	;# 
  1968  0494                     	;# 
  1969  0495                     	;# 
  1970  0495                     	;# 
  1971  0496                     	;# 
  1972  0497                     	;# 
  1973  0498                     	;# 
  1974  0499                     	;# 
  1975  049A                     	;# 
  1976  049B                     	;# 
  1977  049C                     	;# 
  1978  049D                     	;# 
  1979  050C                     	;# 
  1980  050C                     	;# 
  1981  050D                     	;# 
  1982  050E                     	;# 
  1983  050F                     	;# 
  1984  050F                     	;# 
  1985  0510                     	;# 
  1986  0511                     	;# 
  1987  0512                     	;# 
  1988  0512                     	;# 
  1989  0513                     	;# 
  1990  0514                     	;# 
  1991  0515                     	;# 
  1992  0515                     	;# 
  1993  0516                     	;# 
  1994  0517                     	;# 
  1995  0518                     	;# 
  1996  0519                     	;# 
  1997  051A                     	;# 
  1998  051B                     	;# 
  1999  051C                     	;# 
  2000  051D                     	;# 
  2001  058C                     	;# 
  2002  058C                     	;# 
  2003  058D                     	;# 
  2004  058E                     	;# 
  2005  058F                     	;# 
  2006  058F                     	;# 
  2007  0590                     	;# 
  2008  0591                     	;# 
  2009  0592                     	;# 
  2010  0593                     	;# 
  2011  060C                     	;# 
  2012  060D                     	;# 
  2013  060E                     	;# 
  2014  060F                     	;# 
  2015  0610                     	;# 
  2016  0611                     	;# 
  2017  0612                     	;# 
  2018  0613                     	;# 
  2019  0614                     	;# 
  2020  0616                     	;# 
  2021  0617                     	;# 
  2022  0618                     	;# 
  2023  0619                     	;# 
  2024  061A                     	;# 
  2025  061B                     	;# 
  2026  061C                     	;# 
  2027  061D                     	;# 
  2028  061E                     	;# 
  2029  068C                     	;# 
  2030  068D                     	;# 
  2031  068E                     	;# 
  2032  068F                     	;# 
  2033  0690                     	;# 
  2034  0691                     	;# 
  2035  0692                     	;# 
  2036  0693                     	;# 
  2037  0694                     	;# 
  2038  070C                     	;# 
  2039  070D                     	;# 
  2040  070E                     	;# 
  2041  070F                     	;# 
  2042  0710                     	;# 
  2043  0711                     	;# 
  2044  0712                     	;# 
  2045  0713                     	;# 
  2046  0714                     	;# 
  2047  0716                     	;# 
  2048  0717                     	;# 
  2049  0718                     	;# 
  2050  0719                     	;# 
  2051  071A                     	;# 
  2052  071B                     	;# 
  2053  071C                     	;# 
  2054  071D                     	;# 
  2055  071E                     	;# 
  2056  0796                     	;# 
  2057  0797                     	;# 
  2058  0798                     	;# 
  2059  0799                     	;# 
  2060  079A                     	;# 
  2061  079B                     	;# 
  2062  080C                     	;# 
  2063  080D                     	;# 
  2064  080E                     	;# 
  2065  080F                     	;# 
  2066  0810                     	;# 
  2067  0811                     	;# 
  2068  0812                     	;# 
  2069  0813                     	;# 
  2070  0814                     	;# 
  2071  081A                     	;# 
  2072  081B                     	;# 
  2073  081C                     	;# 
  2074  081D                     	;# 
  2075  081E                     	;# 
  2076  081F                     	;# 
  2077  088C                     	;# 
  2078  088D                     	;# 
  2079  088E                     	;# 
  2080  088F                     	;# 
  2081  0890                     	;# 
  2082  0891                     	;# 
  2083  0892                     	;# 
  2084  0893                     	;# 
  2085  0895                     	;# 
  2086  0896                     	;# 
  2087  0897                     	;# 
  2088  0898                     	;# 
  2089  0899                     	;# 
  2090  089A                     	;# 
  2091  089B                     	;# 
  2092  090C                     	;# 
  2093  090E                     	;# 
  2094  090F                     	;# 
  2095  091F                     	;# 
  2096  091F                     	;# 
  2097  098F                     	;# 
  2098  098F                     	;# 
  2099  0990                     	;# 
  2100  0991                     	;# 
  2101  0992                     	;# 
  2102  0993                     	;# 
  2103  0994                     	;# 
  2104  0995                     	;# 
  2105  0996                     	;# 
  2106  0997                     	;# 
  2107  0E0F                     	;# 
  2108  0E10                     	;# 
  2109  0E11                     	;# 
  2110  0E12                     	;# 
  2111  0E13                     	;# 
  2112  0E14                     	;# 
  2113  0E15                     	;# 
  2114  0E16                     	;# 
  2115  0E17                     	;# 
  2116  0E18                     	;# 
  2117  0E19                     	;# 
  2118  0E1A                     	;# 
  2119  0E1B                     	;# 
  2120  0E1C                     	;# 
  2121  0E1D                     	;# 
  2122  0E1E                     	;# 
  2123  0E1F                     	;# 
  2124  0E20                     	;# 
  2125  0E21                     	;# 
  2126  0E22                     	;# 
  2127  0E23                     	;# 
  2128  0E24                     	;# 
  2129  0E25                     	;# 
  2130  0E26                     	;# 
  2131  0E27                     	;# 
  2132  0E28                     	;# 
  2133  0E29                     	;# 
  2134  0E2A                     	;# 
  2135  0E2B                     	;# 
  2136  0E2C                     	;# 
  2137  0E2D                     	;# 
  2138  0E2E                     	;# 
  2139  0E2F                     	;# 
  2140  0E30                     	;# 
  2141  0E31                     	;# 
  2142  0E32                     	;# 
  2143  0E33                     	;# 
  2144  0E34                     	;# 
  2145  0E35                     	;# 
  2146  0E36                     	;# 
  2147  0E37                     	;# 
  2148  0E8F                     	;# 
  2149  0E90                     	;# 
  2150  0E91                     	;# 
  2151  0E92                     	;# 
  2152  0E93                     	;# 
  2153  0E94                     	;# 
  2154  0E95                     	;# 
  2155  0E96                     	;# 
  2156  0E97                     	;# 
  2157  0E9C                     	;# 
  2158  0E9D                     	;# 
  2159  0E9E                     	;# 
  2160  0EA1                     	;# 
  2161  0EA2                     	;# 
  2162  0EA3                     	;# 
  2163  0EA4                     	;# 
  2164  0EA5                     	;# 
  2165  0EA9                     	;# 
  2166  0EAA                     	;# 
  2167  0EAB                     	;# 
  2168  0EAC                     	;# 
  2169  0EB1                     	;# 
  2170  0EB2                     	;# 
  2171  0EB3                     	;# 
  2172  0EB8                     	;# 
  2173  0EB9                     	;# 
  2174  0EBA                     	;# 
  2175  0EBB                     	;# 
  2176  0EBC                     	;# 
  2177  0EBD                     	;# 
  2178  0EBE                     	;# 
  2179  0EC3                     	;# 
  2180  0EC5                     	;# 
  2181  0EC6                     	;# 
  2182  0EC7                     	;# 
  2183  0EC8                     	;# 
  2184  0EC9                     	;# 
  2185  0ECA                     	;# 
  2186  0ECB                     	;# 
  2187  0ECC                     	;# 
  2188  0F10                     	;# 
  2189  0F11                     	;# 
  2190  0F12                     	;# 
  2191  0F13                     	;# 
  2192  0F14                     	;# 
  2193  0F15                     	;# 
  2194  0F16                     	;# 
  2195  0F17                     	;# 
  2196  0F18                     	;# 
  2197  0F19                     	;# 
  2198  0F1A                     	;# 
  2199  0F1B                     	;# 
  2200  0F1C                     	;# 
  2201  0F1D                     	;# 
  2202  0F1E                     	;# 
  2203  0F1F                     	;# 
  2204  0F20                     	;# 
  2205  0F21                     	;# 
  2206  0F22                     	;# 
  2207  0F23                     	;# 
  2208  0F24                     	;# 
  2209  0F25                     	;# 
  2210  0F26                     	;# 
  2211  0F27                     	;# 
  2212  0F28                     	;# 
  2213  0F29                     	;# 
  2214  0F2A                     	;# 
  2215  0F2B                     	;# 
  2216  0F2C                     	;# 
  2217  0F2D                     	;# 
  2218  0F2E                     	;# 
  2219  0F2F                     	;# 
  2220  0F30                     	;# 
  2221  0F31                     	;# 
  2222  0F32                     	;# 
  2223  0F38                     	;# 
  2224  0F39                     	;# 
  2225  0F3A                     	;# 
  2226  0F3B                     	;# 
  2227  0F3C                     	;# 
  2228  0F3D                     	;# 
  2229  0F3E                     	;# 
  2230  0F3F                     	;# 
  2231  0F40                     	;# 
  2232  0F41                     	;# 
  2233  0F43                     	;# 
  2234  0F44                     	;# 
  2235  0F45                     	;# 
  2236  0F46                     	;# 
  2237  0F47                     	;# 
  2238  0F48                     	;# 
  2239  0F49                     	;# 
  2240  0F4A                     	;# 
  2241  0F4B                     	;# 
  2242  0F4C                     	;# 
  2243  0F4E                     	;# 
  2244  0F4F                     	;# 
  2245  0F50                     	;# 
  2246  0F51                     	;# 
  2247  0F52                     	;# 
  2248  0F53                     	;# 
  2249  0F54                     	;# 
  2250  0F55                     	;# 
  2251  0F56                     	;# 
  2252  0F57                     	;# 
  2253  0F59                     	;# 
  2254  0F5A                     	;# 
  2255  0F5B                     	;# 
  2256  0F5C                     	;# 
  2257  0F5D                     	;# 
  2258  0F61                     	;# 
  2259  0F62                     	;# 
  2260  0F64                     	;# 
  2261  0F65                     	;# 
  2262  0F66                     	;# 
  2263  0F67                     	;# 
  2264  0F68                     	;# 
  2265  0F69                     	;# 
  2266  0F6A                     	;# 
  2267  0F6B                     	;# 
  2268  0F6C                     	;# 
  2269  0F6D                     	;# 
  2270  0FE4                     	;# 
  2271  0FE5                     	;# 
  2272  0FE6                     	;# 
  2273  0FE7                     	;# 
  2274  0FE8                     	;# 
  2275  0FE9                     	;# 
  2276  0FEA                     	;# 
  2277  0FEB                     	;# 
  2278  0FED                     	;# 
  2279  0FEE                     	;# 
  2280  0FEF                     	;# 
  2281  0000                     	;# 
  2282  0001                     	;# 
  2283  0002                     	;# 
  2284  0003                     	;# 
  2285  0004                     	;# 
  2286  0005                     	;# 
  2287  0006                     	;# 
  2288  0007                     	;# 
  2289  0008                     	;# 
  2290  0009                     	;# 
  2291  000A                     	;# 
  2292  000B                     	;# 
  2293  000C                     	;# 
  2294  000D                     	;# 
  2295  000E                     	;# 
  2296  000F                     	;# 
  2297  0010                     	;# 
  2298  0011                     	;# 
  2299  0012                     	;# 
  2300  0013                     	;# 
  2301  0014                     	;# 
  2302  0015                     	;# 
  2303  0016                     	;# 
  2304  0017                     	;# 
  2305  0018                     	;# 
  2306  0019                     	;# 
  2307  001A                     	;# 
  2308  001C                     	;# 
  2309  001C                     	;# 
  2310  001D                     	;# 
  2311  001D                     	;# 
  2312  001E                     	;# 
  2313  001F                     	;# 
  2314  008C                     	;# 
  2315  008C                     	;# 
  2316  008D                     	;# 
  2317  008E                     	;# 
  2318  008E                     	;# 
  2319  008F                     	;# 
  2320  0090                     	;# 
  2321  0090                     	;# 
  2322  0091                     	;# 
  2323  0093                     	;# 
  2324  0094                     	;# 
  2325  0095                     	;# 
  2326  0096                     	;# 
  2327  0097                     	;# 
  2328  0098                     	;# 
  2329  0099                     	;# 
  2330  009A                     	;# 
  2331  009B                     	;# 
  2332  009C                     	;# 
  2333  009D                     	;# 
  2334  009E                     	;# 
  2335  010C                     	;# 
  2336  010D                     	;# 
  2337  010E                     	;# 
  2338  010E                     	;# 
  2339  010F                     	;# 
  2340  0110                     	;# 
  2341  0110                     	;# 
  2342  0111                     	;# 
  2343  0112                     	;# 
  2344  0112                     	;# 
  2345  0113                     	;# 
  2346  0114                     	;# 
  2347  0114                     	;# 
  2348  0115                     	;# 
  2349  0116                     	;# 
  2350  0116                     	;# 
  2351  0117                     	;# 
  2352  0119                     	;# 
  2353  0119                     	;# 
  2354  0119                     	;# 
  2355  011A                     	;# 
  2356  011A                     	;# 
  2357  011A                     	;# 
  2358  011B                     	;# 
  2359  011B                     	;# 
  2360  011B                     	;# 
  2361  011B                     	;# 
  2362  011B                     	;# 
  2363  011C                     	;# 
  2364  011C                     	;# 
  2365  011C                     	;# 
  2366  011D                     	;# 
  2367  011D                     	;# 
  2368  011D                     	;# 
  2369  011E                     	;# 
  2370  011E                     	;# 
  2371  011E                     	;# 
  2372  011F                     	;# 
  2373  011F                     	;# 
  2374  011F                     	;# 
  2375  011F                     	;# 
  2376  011F                     	;# 
  2377  018C                     	;# 
  2378  018D                     	;# 
  2379  018E                     	;# 
  2380  018F                     	;# 
  2381  0190                     	;# 
  2382  0191                     	;# 
  2383  0192                     	;# 
  2384  0196                     	;# 
  2385  0197                     	;# 
  2386  0198                     	;# 
  2387  0199                     	;# 
  2388  019A                     	;# 
  2389  019B                     	;# 
  2390  019C                     	;# 
  2391  020C                     	;# 
  2392  020C                     	;# 
  2393  020D                     	;# 
  2394  020E                     	;# 
  2395  020F                     	;# 
  2396  020F                     	;# 
  2397  0210                     	;# 
  2398  0210                     	;# 
  2399  0211                     	;# 
  2400  0211                     	;# 
  2401  0212                     	;# 
  2402  0212                     	;# 
  2403  0213                     	;# 
  2404  0214                     	;# 
  2405  0215                     	;# 
  2406  0215                     	;# 
  2407  0216                     	;# 
  2408  0216                     	;# 
  2409  0217                     	;# 
  2410  0217                     	;# 
  2411  0218                     	;# 
  2412  0218                     	;# 
  2413  0219                     	;# 
  2414  021A                     	;# 
  2415  021B                     	;# 
  2416  021B                     	;# 
  2417  021C                     	;# 
  2418  021C                     	;# 
  2419  021D                     	;# 
  2420  021D                     	;# 
  2421  021E                     	;# 
  2422  021F                     	;# 
  2423  028C                     	;# 
  2424  028C                     	;# 
  2425  028D                     	;# 
  2426  028D                     	;# 
  2427  028E                     	;# 
  2428  028F                     	;# 
  2429  0290                     	;# 
  2430  0290                     	;# 
  2431  0291                     	;# 
  2432  0292                     	;# 
  2433  0292                     	;# 
  2434  0293                     	;# 
  2435  0293                     	;# 
  2436  0294                     	;# 
  2437  0295                     	;# 
  2438  0296                     	;# 
  2439  0296                     	;# 
  2440  0297                     	;# 
  2441  0298                     	;# 
  2442  0298                     	;# 
  2443  0299                     	;# 
  2444  0299                     	;# 
  2445  029A                     	;# 
  2446  029B                     	;# 
  2447  029C                     	;# 
  2448  029C                     	;# 
  2449  029D                     	;# 
  2450  030C                     	;# 
  2451  030C                     	;# 
  2452  030D                     	;# 
  2453  030E                     	;# 
  2454  030F                     	;# 
  2455  0310                     	;# 
  2456  0310                     	;# 
  2457  0311                     	;# 
  2458  0312                     	;# 
  2459  0313                     	;# 
  2460  0314                     	;# 
  2461  0314                     	;# 
  2462  0315                     	;# 
  2463  0316                     	;# 
  2464  0317                     	;# 
  2465  0318                     	;# 
  2466  0318                     	;# 
  2467  0319                     	;# 
  2468  031A                     	;# 
  2469  031B                     	;# 
  2470  031C                     	;# 
  2471  031C                     	;# 
  2472  031D                     	;# 
  2473  031E                     	;# 
  2474  031F                     	;# 
  2475  038C                     	;# 
  2476  038D                     	;# 
  2477  038E                     	;# 
  2478  0390                     	;# 
  2479  0391                     	;# 
  2480  0392                     	;# 
  2481  040C                     	;# 
  2482  040D                     	;# 
  2483  040E                     	;# 
  2484  040F                     	;# 
  2485  0410                     	;# 
  2486  0411                     	;# 
  2487  0416                     	;# 
  2488  0416                     	;# 
  2489  0417                     	;# 
  2490  0418                     	;# 
  2491  0418                     	;# 
  2492  0419                     	;# 
  2493  041A                     	;# 
  2494  041A                     	;# 
  2495  041B                     	;# 
  2496  041C                     	;# 
  2497  041C                     	;# 
  2498  041D                     	;# 
  2499  041E                     	;# 
  2500  041F                     	;# 
  2501  048C                     	;# 
  2502  048C                     	;# 
  2503  048D                     	;# 
  2504  048E                     	;# 
  2505  048F                     	;# 
  2506  048F                     	;# 
  2507  0490                     	;# 
  2508  0491                     	;# 
  2509  0492                     	;# 
  2510  0492                     	;# 
  2511  0493                     	;# 
  2512  0494                     	;# 
  2513  0495                     	;# 
  2514  0495                     	;# 
  2515  0496                     	;# 
  2516  0497                     	;# 
  2517  0498                     	;# 
  2518  0499                     	;# 
  2519  049A                     	;# 
  2520  049B                     	;# 
  2521  049C                     	;# 
  2522  049D                     	;# 
  2523  050C                     	;# 
  2524  050C                     	;# 
  2525  050D                     	;# 
  2526  050E                     	;# 
  2527  050F                     	;# 
  2528  050F                     	;# 
  2529  0510                     	;# 
  2530  0511                     	;# 
  2531  0512                     	;# 
  2532  0512                     	;# 
  2533  0513                     	;# 
  2534  0514                     	;# 
  2535  0515                     	;# 
  2536  0515                     	;# 
  2537  0516                     	;# 
  2538  0517                     	;# 
  2539  0518                     	;# 
  2540  0519                     	;# 
  2541  051A                     	;# 
  2542  051B                     	;# 
  2543  051C                     	;# 
  2544  051D                     	;# 
  2545  058C                     	;# 
  2546  058C                     	;# 
  2547  058D                     	;# 
  2548  058E                     	;# 
  2549  058F                     	;# 
  2550  058F                     	;# 
  2551  0590                     	;# 
  2552  0591                     	;# 
  2553  0592                     	;# 
  2554  0593                     	;# 
  2555  060C                     	;# 
  2556  060D                     	;# 
  2557  060E                     	;# 
  2558  060F                     	;# 
  2559  0610                     	;# 
  2560  0611                     	;# 
  2561  0612                     	;# 
  2562  0613                     	;# 
  2563  0614                     	;# 
  2564  0616                     	;# 
  2565  0617                     	;# 
  2566  0618                     	;# 
  2567  0619                     	;# 
  2568  061A                     	;# 
  2569  061B                     	;# 
  2570  061C                     	;# 
  2571  061D                     	;# 
  2572  061E                     	;# 
  2573  068C                     	;# 
  2574  068D                     	;# 
  2575  068E                     	;# 
  2576  068F                     	;# 
  2577  0690                     	;# 
  2578  0691                     	;# 
  2579  0692                     	;# 
  2580  0693                     	;# 
  2581  0694                     	;# 
  2582  070C                     	;# 
  2583  070D                     	;# 
  2584  070E                     	;# 
  2585  070F                     	;# 
  2586  0710                     	;# 
  2587  0711                     	;# 
  2588  0712                     	;# 
  2589  0713                     	;# 
  2590  0714                     	;# 
  2591  0716                     	;# 
  2592  0717                     	;# 
  2593  0718                     	;# 
  2594  0719                     	;# 
  2595  071A                     	;# 
  2596  071B                     	;# 
  2597  071C                     	;# 
  2598  071D                     	;# 
  2599  071E                     	;# 
  2600  0796                     	;# 
  2601  0797                     	;# 
  2602  0798                     	;# 
  2603  0799                     	;# 
  2604  079A                     	;# 
  2605  079B                     	;# 
  2606  080C                     	;# 
  2607  080D                     	;# 
  2608  080E                     	;# 
  2609  080F                     	;# 
  2610  0810                     	;# 
  2611  0811                     	;# 
  2612  0812                     	;# 
  2613  0813                     	;# 
  2614  0814                     	;# 
  2615  081A                     	;# 
  2616  081B                     	;# 
  2617  081C                     	;# 
  2618  081D                     	;# 
  2619  081E                     	;# 
  2620  081F                     	;# 
  2621  088C                     	;# 
  2622  088D                     	;# 
  2623  088E                     	;# 
  2624  088F                     	;# 
  2625  0890                     	;# 
  2626  0891                     	;# 
  2627  0892                     	;# 
  2628  0893                     	;# 
  2629  0895                     	;# 
  2630  0896                     	;# 
  2631  0897                     	;# 
  2632  0898                     	;# 
  2633  0899                     	;# 
  2634  089A                     	;# 
  2635  089B                     	;# 
  2636  090C                     	;# 
  2637  090E                     	;# 
  2638  090F                     	;# 
  2639  091F                     	;# 
  2640  091F                     	;# 
  2641  098F                     	;# 
  2642  098F                     	;# 
  2643  0990                     	;# 
  2644  0991                     	;# 
  2645  0992                     	;# 
  2646  0993                     	;# 
  2647  0994                     	;# 
  2648  0995                     	;# 
  2649  0996                     	;# 
  2650  0997                     	;# 
  2651  0E0F                     	;# 
  2652  0E10                     	;# 
  2653  0E11                     	;# 
  2654  0E12                     	;# 
  2655  0E13                     	;# 
  2656  0E14                     	;# 
  2657  0E15                     	;# 
  2658  0E16                     	;# 
  2659  0E17                     	;# 
  2660  0E18                     	;# 
  2661  0E19                     	;# 
  2662  0E1A                     	;# 
  2663  0E1B                     	;# 
  2664  0E1C                     	;# 
  2665  0E1D                     	;# 
  2666  0E1E                     	;# 
  2667  0E1F                     	;# 
  2668  0E20                     	;# 
  2669  0E21                     	;# 
  2670  0E22                     	;# 
  2671  0E23                     	;# 
  2672  0E24                     	;# 
  2673  0E25                     	;# 
  2674  0E26                     	;# 
  2675  0E27                     	;# 
  2676  0E28                     	;# 
  2677  0E29                     	;# 
  2678  0E2A                     	;# 
  2679  0E2B                     	;# 
  2680  0E2C                     	;# 
  2681  0E2D                     	;# 
  2682  0E2E                     	;# 
  2683  0E2F                     	;# 
  2684  0E30                     	;# 
  2685  0E31                     	;# 
  2686  0E32                     	;# 
  2687  0E33                     	;# 
  2688  0E34                     	;# 
  2689  0E35                     	;# 
  2690  0E36                     	;# 
  2691  0E37                     	;# 
  2692  0E8F                     	;# 
  2693  0E90                     	;# 
  2694  0E91                     	;# 
  2695  0E92                     	;# 
  2696  0E93                     	;# 
  2697  0E94                     	;# 
  2698  0E95                     	;# 
  2699  0E96                     	;# 
  2700  0E97                     	;# 
  2701  0E9C                     	;# 
  2702  0E9D                     	;# 
  2703  0E9E                     	;# 
  2704  0EA1                     	;# 
  2705  0EA2                     	;# 
  2706  0EA3                     	;# 
  2707  0EA4                     	;# 
  2708  0EA5                     	;# 
  2709  0EA9                     	;# 
  2710  0EAA                     	;# 
  2711  0EAB                     	;# 
  2712  0EAC                     	;# 
  2713  0EB1                     	;# 
  2714  0EB2                     	;# 
  2715  0EB3                     	;# 
  2716  0EB8                     	;# 
  2717  0EB9                     	;# 
  2718  0EBA                     	;# 
  2719  0EBB                     	;# 
  2720  0EBC                     	;# 
  2721  0EBD                     	;# 
  2722  0EBE                     	;# 
  2723  0EC3                     	;# 
  2724  0EC5                     	;# 
  2725  0EC6                     	;# 
  2726  0EC7                     	;# 
  2727  0EC8                     	;# 
  2728  0EC9                     	;# 
  2729  0ECA                     	;# 
  2730  0ECB                     	;# 
  2731  0ECC                     	;# 
  2732  0F10                     	;# 
  2733  0F11                     	;# 
  2734  0F12                     	;# 
  2735  0F13                     	;# 
  2736  0F14                     	;# 
  2737  0F15                     	;# 
  2738  0F16                     	;# 
  2739  0F17                     	;# 
  2740  0F18                     	;# 
  2741  0F19                     	;# 
  2742  0F1A                     	;# 
  2743  0F1B                     	;# 
  2744  0F1C                     	;# 
  2745  0F1D                     	;# 
  2746  0F1E                     	;# 
  2747  0F1F                     	;# 
  2748  0F20                     	;# 
  2749  0F21                     	;# 
  2750  0F22                     	;# 
  2751  0F23                     	;# 
  2752  0F24                     	;# 
  2753  0F25                     	;# 
  2754  0F26                     	;# 
  2755  0F27                     	;# 
  2756  0F28                     	;# 
  2757  0F29                     	;# 
  2758  0F2A                     	;# 
  2759  0F2B                     	;# 
  2760  0F2C                     	;# 
  2761  0F2D                     	;# 
  2762  0F2E                     	;# 
  2763  0F2F                     	;# 
  2764  0F30                     	;# 
  2765  0F31                     	;# 
  2766  0F32                     	;# 
  2767  0F38                     	;# 
  2768  0F39                     	;# 
  2769  0F3A                     	;# 
  2770  0F3B                     	;# 
  2771  0F3C                     	;# 
  2772  0F3D                     	;# 
  2773  0F3E                     	;# 
  2774  0F3F                     	;# 
  2775  0F40                     	;# 
  2776  0F41                     	;# 
  2777  0F43                     	;# 
  2778  0F44                     	;# 
  2779  0F45                     	;# 
  2780  0F46                     	;# 
  2781  0F47                     	;# 
  2782  0F48                     	;# 
  2783  0F49                     	;# 
  2784  0F4A                     	;# 
  2785  0F4B                     	;# 
  2786  0F4C                     	;# 
  2787  0F4E                     	;# 
  2788  0F4F                     	;# 
  2789  0F50                     	;# 
  2790  0F51                     	;# 
  2791  0F52                     	;# 
  2792  0F53                     	;# 
  2793  0F54                     	;# 
  2794  0F55                     	;# 
  2795  0F56                     	;# 
  2796  0F57                     	;# 
  2797  0F59                     	;# 
  2798  0F5A                     	;# 
  2799  0F5B                     	;# 
  2800  0F5C                     	;# 
  2801  0F5D                     	;# 
  2802  0F61                     	;# 
  2803  0F62                     	;# 
  2804  0F64                     	;# 
  2805  0F65                     	;# 
  2806  0F66                     	;# 
  2807  0F67                     	;# 
  2808  0F68                     	;# 
  2809  0F69                     	;# 
  2810  0F6A                     	;# 
  2811  0F6B                     	;# 
  2812  0F6C                     	;# 
  2813  0F6D                     	;# 
  2814  0FE4                     	;# 
  2815  0FE5                     	;# 
  2816  0FE6                     	;# 
  2817  0FE7                     	;# 
  2818  0FE8                     	;# 
  2819  0FE9                     	;# 
  2820  0FEA                     	;# 
  2821  0FEB                     	;# 
  2822  0FED                     	;# 
  2823  0FEE                     	;# 
  2824  0FEF                     	;# 
  2825  0000                     	;# 
  2826  0001                     	;# 
  2827  0002                     	;# 
  2828  0003                     	;# 
  2829  0004                     	;# 
  2830  0005                     	;# 
  2831  0006                     	;# 
  2832  0007                     	;# 
  2833  0008                     	;# 
  2834  0009                     	;# 
  2835  000A                     	;# 
  2836  000B                     	;# 
  2837  000C                     	;# 
  2838  000D                     	;# 
  2839  000E                     	;# 
  2840  000F                     	;# 
  2841  0010                     	;# 
  2842  0011                     	;# 
  2843  0012                     	;# 
  2844  0013                     	;# 
  2845  0014                     	;# 
  2846  0015                     	;# 
  2847  0016                     	;# 
  2848  0017                     	;# 
  2849  0018                     	;# 
  2850  0019                     	;# 
  2851  001A                     	;# 
  2852  001C                     	;# 
  2853  001C                     	;# 
  2854  001D                     	;# 
  2855  001D                     	;# 
  2856  001E                     	;# 
  2857  001F                     	;# 
  2858  008C                     	;# 
  2859  008C                     	;# 
  2860  008D                     	;# 
  2861  008E                     	;# 
  2862  008E                     	;# 
  2863  008F                     	;# 
  2864  0090                     	;# 
  2865  0090                     	;# 
  2866  0091                     	;# 
  2867  0093                     	;# 
  2868  0094                     	;# 
  2869  0095                     	;# 
  2870  0096                     	;# 
  2871  0097                     	;# 
  2872  0098                     	;# 
  2873  0099                     	;# 
  2874  009A                     	;# 
  2875  009B                     	;# 
  2876  009C                     	;# 
  2877  009D                     	;# 
  2878  009E                     	;# 
  2879  010C                     	;# 
  2880  010D                     	;# 
  2881  010E                     	;# 
  2882  010E                     	;# 
  2883  010F                     	;# 
  2884  0110                     	;# 
  2885  0110                     	;# 
  2886  0111                     	;# 
  2887  0112                     	;# 
  2888  0112                     	;# 
  2889  0113                     	;# 
  2890  0114                     	;# 
  2891  0114                     	;# 
  2892  0115                     	;# 
  2893  0116                     	;# 
  2894  0116                     	;# 
  2895  0117                     	;# 
  2896  0119                     	;# 
  2897  0119                     	;# 
  2898  0119                     	;# 
  2899  011A                     	;# 
  2900  011A                     	;# 
  2901  011A                     	;# 
  2902  011B                     	;# 
  2903  011B                     	;# 
  2904  011B                     	;# 
  2905  011B                     	;# 
  2906  011B                     	;# 
  2907  011C                     	;# 
  2908  011C                     	;# 
  2909  011C                     	;# 
  2910  011D                     	;# 
  2911  011D                     	;# 
  2912  011D                     	;# 
  2913  011E                     	;# 
  2914  011E                     	;# 
  2915  011E                     	;# 
  2916  011F                     	;# 
  2917  011F                     	;# 
  2918  011F                     	;# 
  2919  011F                     	;# 
  2920  011F                     	;# 
  2921  018C                     	;# 
  2922  018D                     	;# 
  2923  018E                     	;# 
  2924  018F                     	;# 
  2925  0190                     	;# 
  2926  0191                     	;# 
  2927  0192                     	;# 
  2928  0196                     	;# 
  2929  0197                     	;# 
  2930  0198                     	;# 
  2931  0199                     	;# 
  2932  019A                     	;# 
  2933  019B                     	;# 
  2934  019C                     	;# 
  2935  020C                     	;# 
  2936  020C                     	;# 
  2937  020D                     	;# 
  2938  020E                     	;# 
  2939  020F                     	;# 
  2940  020F                     	;# 
  2941  0210                     	;# 
  2942  0210                     	;# 
  2943  0211                     	;# 
  2944  0211                     	;# 
  2945  0212                     	;# 
  2946  0212                     	;# 
  2947  0213                     	;# 
  2948  0214                     	;# 
  2949  0215                     	;# 
  2950  0215                     	;# 
  2951  0216                     	;# 
  2952  0216                     	;# 
  2953  0217                     	;# 
  2954  0217                     	;# 
  2955  0218                     	;# 
  2956  0218                     	;# 
  2957  0219                     	;# 
  2958  021A                     	;# 
  2959  021B                     	;# 
  2960  021B                     	;# 
  2961  021C                     	;# 
  2962  021C                     	;# 
  2963  021D                     	;# 
  2964  021D                     	;# 
  2965  021E                     	;# 
  2966  021F                     	;# 
  2967  028C                     	;# 
  2968  028C                     	;# 
  2969  028D                     	;# 
  2970  028D                     	;# 
  2971  028E                     	;# 
  2972  028F                     	;# 
  2973  0290                     	;# 
  2974  0290                     	;# 
  2975  0291                     	;# 
  2976  0292                     	;# 
  2977  0292                     	;# 
  2978  0293                     	;# 
  2979  0293                     	;# 
  2980  0294                     	;# 
  2981  0295                     	;# 
  2982  0296                     	;# 
  2983  0296                     	;# 
  2984  0297                     	;# 
  2985  0298                     	;# 
  2986  0298                     	;# 
  2987  0299                     	;# 
  2988  0299                     	;# 
  2989  029A                     	;# 
  2990  029B                     	;# 
  2991  029C                     	;# 
  2992  029C                     	;# 
  2993  029D                     	;# 
  2994  030C                     	;# 
  2995  030C                     	;# 
  2996  030D                     	;# 
  2997  030E                     	;# 
  2998  030F                     	;# 
  2999  0310                     	;# 
  3000  0310                     	;# 
  3001  0311                     	;# 
  3002  0312                     	;# 
  3003  0313                     	;# 
  3004  0314                     	;# 
  3005  0314                     	;# 
  3006  0315                     	;# 
  3007  0316                     	;# 
  3008  0317                     	;# 
  3009  0318                     	;# 
  3010  0318                     	;# 
  3011  0319                     	;# 
  3012  031A                     	;# 
  3013  031B                     	;# 
  3014  031C                     	;# 
  3015  031C                     	;# 
  3016  031D                     	;# 
  3017  031E                     	;# 
  3018  031F                     	;# 
  3019  038C                     	;# 
  3020  038D                     	;# 
  3021  038E                     	;# 
  3022  0390                     	;# 
  3023  0391                     	;# 
  3024  0392                     	;# 
  3025  040C                     	;# 
  3026  040D                     	;# 
  3027  040E                     	;# 
  3028  040F                     	;# 
  3029  0410                     	;# 
  3030  0411                     	;# 
  3031  0416                     	;# 
  3032  0416                     	;# 
  3033  0417                     	;# 
  3034  0418                     	;# 
  3035  0418                     	;# 
  3036  0419                     	;# 
  3037  041A                     	;# 
  3038  041A                     	;# 
  3039  041B                     	;# 
  3040  041C                     	;# 
  3041  041C                     	;# 
  3042  041D                     	;# 
  3043  041E                     	;# 
  3044  041F                     	;# 
  3045  048C                     	;# 
  3046  048C                     	;# 
  3047  048D                     	;# 
  3048  048E                     	;# 
  3049  048F                     	;# 
  3050  048F                     	;# 
  3051  0490                     	;# 
  3052  0491                     	;# 
  3053  0492                     	;# 
  3054  0492                     	;# 
  3055  0493                     	;# 
  3056  0494                     	;# 
  3057  0495                     	;# 
  3058  0495                     	;# 
  3059  0496                     	;# 
  3060  0497                     	;# 
  3061  0498                     	;# 
  3062  0499                     	;# 
  3063  049A                     	;# 
  3064  049B                     	;# 
  3065  049C                     	;# 
  3066  049D                     	;# 
  3067  050C                     	;# 
  3068  050C                     	;# 
  3069  050D                     	;# 
  3070  050E                     	;# 
  3071  050F                     	;# 
  3072  050F                     	;# 
  3073  0510                     	;# 
  3074  0511                     	;# 
  3075  0512                     	;# 
  3076  0512                     	;# 
  3077  0513                     	;# 
  3078  0514                     	;# 
  3079  0515                     	;# 
  3080  0515                     	;# 
  3081  0516                     	;# 
  3082  0517                     	;# 
  3083  0518                     	;# 
  3084  0519                     	;# 
  3085  051A                     	;# 
  3086  051B                     	;# 
  3087  051C                     	;# 
  3088  051D                     	;# 
  3089  058C                     	;# 
  3090  058C                     	;# 
  3091  058D                     	;# 
  3092  058E                     	;# 
  3093  058F                     	;# 
  3094  058F                     	;# 
  3095  0590                     	;# 
  3096  0591                     	;# 
  3097  0592                     	;# 
  3098  0593                     	;# 
  3099  060C                     	;# 
  3100  060D                     	;# 
  3101  060E                     	;# 
  3102  060F                     	;# 
  3103  0610                     	;# 
  3104  0611                     	;# 
  3105  0612                     	;# 
  3106  0613                     	;# 
  3107  0614                     	;# 
  3108  0616                     	;# 
  3109  0617                     	;# 
  3110  0618                     	;# 
  3111  0619                     	;# 
  3112  061A                     	;# 
  3113  061B                     	;# 
  3114  061C                     	;# 
  3115  061D                     	;# 
  3116  061E                     	;# 
  3117  068C                     	;# 
  3118  068D                     	;# 
  3119  068E                     	;# 
  3120  068F                     	;# 
  3121  0690                     	;# 
  3122  0691                     	;# 
  3123  0692                     	;# 
  3124  0693                     	;# 
  3125  0694                     	;# 
  3126  070C                     	;# 
  3127  070D                     	;# 
  3128  070E                     	;# 
  3129  070F                     	;# 
  3130  0710                     	;# 
  3131  0711                     	;# 
  3132  0712                     	;# 
  3133  0713                     	;# 
  3134  0714                     	;# 
  3135  0716                     	;# 
  3136  0717                     	;# 
  3137  0718                     	;# 
  3138  0719                     	;# 
  3139  071A                     	;# 
  3140  071B                     	;# 
  3141  071C                     	;# 
  3142  071D                     	;# 
  3143  071E                     	;# 
  3144  0796                     	;# 
  3145  0797                     	;# 
  3146  0798                     	;# 
  3147  0799                     	;# 
  3148  079A                     	;# 
  3149  079B                     	;# 
  3150  080C                     	;# 
  3151  080D                     	;# 
  3152  080E                     	;# 
  3153  080F                     	;# 
  3154  0810                     	;# 
  3155  0811                     	;# 
  3156  0812                     	;# 
  3157  0813                     	;# 
  3158  0814                     	;# 
  3159  081A                     	;# 
  3160  081B                     	;# 
  3161  081C                     	;# 
  3162  081D                     	;# 
  3163  081E                     	;# 
  3164  081F                     	;# 
  3165  088C                     	;# 
  3166  088D                     	;# 
  3167  088E                     	;# 
  3168  088F                     	;# 
  3169  0890                     	;# 
  3170  0891                     	;# 
  3171  0892                     	;# 
  3172  0893                     	;# 
  3173  0895                     	;# 
  3174  0896                     	;# 
  3175  0897                     	;# 
  3176  0898                     	;# 
  3177  0899                     	;# 
  3178  089A                     	;# 
  3179  089B                     	;# 
  3180  090C                     	;# 
  3181  090E                     	;# 
  3182  090F                     	;# 
  3183  091F                     	;# 
  3184  091F                     	;# 
  3185  098F                     	;# 
  3186  098F                     	;# 
  3187  0990                     	;# 
  3188  0991                     	;# 
  3189  0992                     	;# 
  3190  0993                     	;# 
  3191  0994                     	;# 
  3192  0995                     	;# 
  3193  0996                     	;# 
  3194  0997                     	;# 
  3195  0E0F                     	;# 
  3196  0E10                     	;# 
  3197  0E11                     	;# 
  3198  0E12                     	;# 
  3199  0E13                     	;# 
  3200  0E14                     	;# 
  3201  0E15                     	;# 
  3202  0E16                     	;# 
  3203  0E17                     	;# 
  3204  0E18                     	;# 
  3205  0E19                     	;# 
  3206  0E1A                     	;# 
  3207  0E1B                     	;# 
  3208  0E1C                     	;# 
  3209  0E1D                     	;# 
  3210  0E1E                     	;# 
  3211  0E1F                     	;# 
  3212  0E20                     	;# 
  3213  0E21                     	;# 
  3214  0E22                     	;# 
  3215  0E23                     	;# 
  3216  0E24                     	;# 
  3217  0E25                     	;# 
  3218  0E26                     	;# 
  3219  0E27                     	;# 
  3220  0E28                     	;# 
  3221  0E29                     	;# 
  3222  0E2A                     	;# 
  3223  0E2B                     	;# 
  3224  0E2C                     	;# 
  3225  0E2D                     	;# 
  3226  0E2E                     	;# 
  3227  0E2F                     	;# 
  3228  0E30                     	;# 
  3229  0E31                     	;# 
  3230  0E32                     	;# 
  3231  0E33                     	;# 
  3232  0E34                     	;# 
  3233  0E35                     	;# 
  3234  0E36                     	;# 
  3235  0E37                     	;# 
  3236  0E8F                     	;# 
  3237  0E90                     	;# 
  3238  0E91                     	;# 
  3239  0E92                     	;# 
  3240  0E93                     	;# 
  3241  0E94                     	;# 
  3242  0E95                     	;# 
  3243  0E96                     	;# 
  3244  0E97                     	;# 
  3245  0E9C                     	;# 
  3246  0E9D                     	;# 
  3247  0E9E                     	;# 
  3248  0EA1                     	;# 
  3249  0EA2                     	;# 
  3250  0EA3                     	;# 
  3251  0EA4                     	;# 
  3252  0EA5                     	;# 
  3253  0EA9                     	;# 
  3254  0EAA                     	;# 
  3255  0EAB                     	;# 
  3256  0EAC                     	;# 
  3257  0EB1                     	;# 
  3258  0EB2                     	;# 
  3259  0EB3                     	;# 
  3260  0EB8                     	;# 
  3261  0EB9                     	;# 
  3262  0EBA                     	;# 
  3263  0EBB                     	;# 
  3264  0EBC                     	;# 
  3265  0EBD                     	;# 
  3266  0EBE                     	;# 
  3267  0EC3                     	;# 
  3268  0EC5                     	;# 
  3269  0EC6                     	;# 
  3270  0EC7                     	;# 
  3271  0EC8                     	;# 
  3272  0EC9                     	;# 
  3273  0ECA                     	;# 
  3274  0ECB                     	;# 
  3275  0ECC                     	;# 
  3276  0F10                     	;# 
  3277  0F11                     	;# 
  3278  0F12                     	;# 
  3279  0F13                     	;# 
  3280  0F14                     	;# 
  3281  0F15                     	;# 
  3282  0F16                     	;# 
  3283  0F17                     	;# 
  3284  0F18                     	;# 
  3285  0F19                     	;# 
  3286  0F1A                     	;# 
  3287  0F1B                     	;# 
  3288  0F1C                     	;# 
  3289  0F1D                     	;# 
  3290  0F1E                     	;# 
  3291  0F1F                     	;# 
  3292  0F20                     	;# 
  3293  0F21                     	;# 
  3294  0F22                     	;# 
  3295  0F23                     	;# 
  3296  0F24                     	;# 
  3297  0F25                     	;# 
  3298  0F26                     	;# 
  3299  0F27                     	;# 
  3300  0F28                     	;# 
  3301  0F29                     	;# 
  3302  0F2A                     	;# 
  3303  0F2B                     	;# 
  3304  0F2C                     	;# 
  3305  0F2D                     	;# 
  3306  0F2E                     	;# 
  3307  0F2F                     	;# 
  3308  0F30                     	;# 
  3309  0F31                     	;# 
  3310  0F32                     	;# 
  3311  0F38                     	;# 
  3312  0F39                     	;# 
  3313  0F3A                     	;# 
  3314  0F3B                     	;# 
  3315  0F3C                     	;# 
  3316  0F3D                     	;# 
  3317  0F3E                     	;# 
  3318  0F3F                     	;# 
  3319  0F40                     	;# 
  3320  0F41                     	;# 
  3321  0F43                     	;# 
  3322  0F44                     	;# 
  3323  0F45                     	;# 
  3324  0F46                     	;# 
  3325  0F47                     	;# 
  3326  0F48                     	;# 
  3327  0F49                     	;# 
  3328  0F4A                     	;# 
  3329  0F4B                     	;# 
  3330  0F4C                     	;# 
  3331  0F4E                     	;# 
  3332  0F4F                     	;# 
  3333  0F50                     	;# 
  3334  0F51                     	;# 
  3335  0F52                     	;# 
  3336  0F53                     	;# 
  3337  0F54                     	;# 
  3338  0F55                     	;# 
  3339  0F56                     	;# 
  3340  0F57                     	;# 
  3341  0F59                     	;# 
  3342  0F5A                     	;# 
  3343  0F5B                     	;# 
  3344  0F5C                     	;# 
  3345  0F5D                     	;# 
  3346  0F61                     	;# 
  3347  0F62                     	;# 
  3348  0F64                     	;# 
  3349  0F65                     	;# 
  3350  0F66                     	;# 
  3351  0F67                     	;# 
  3352  0F68                     	;# 
  3353  0F69                     	;# 
  3354  0F6A                     	;# 
  3355  0F6B                     	;# 
  3356  0F6C                     	;# 
  3357  0F6D                     	;# 
  3358  0FE4                     	;# 
  3359  0FE5                     	;# 
  3360  0FE6                     	;# 
  3361  0FE7                     	;# 
  3362  0FE8                     	;# 
  3363  0FE9                     	;# 
  3364  0FEA                     	;# 
  3365  0FEB                     	;# 
  3366  0FED                     	;# 
  3367  0FEE                     	;# 
  3368  0FEF                     	;# 
  3369  0000                     	;# 
  3370  0001                     	;# 
  3371  0002                     	;# 
  3372  0003                     	;# 
  3373  0004                     	;# 
  3374  0005                     	;# 
  3375  0006                     	;# 
  3376  0007                     	;# 
  3377  0008                     	;# 
  3378  0009                     	;# 
  3379  000A                     	;# 
  3380  000B                     	;# 
  3381  000C                     	;# 
  3382  000D                     	;# 
  3383  000E                     	;# 
  3384  000F                     	;# 
  3385  0010                     	;# 
  3386  0011                     	;# 
  3387  0012                     	;# 
  3388  0013                     	;# 
  3389  0014                     	;# 
  3390  0015                     	;# 
  3391  0016                     	;# 
  3392  0017                     	;# 
  3393  0018                     	;# 
  3394  0019                     	;# 
  3395  001A                     	;# 
  3396  001C                     	;# 
  3397  001C                     	;# 
  3398  001D                     	;# 
  3399  001D                     	;# 
  3400  001E                     	;# 
  3401  001F                     	;# 
  3402  008C                     	;# 
  3403  008C                     	;# 
  3404  008D                     	;# 
  3405  008E                     	;# 
  3406  008E                     	;# 
  3407  008F                     	;# 
  3408  0090                     	;# 
  3409  0090                     	;# 
  3410  0091                     	;# 
  3411  0093                     	;# 
  3412  0094                     	;# 
  3413  0095                     	;# 
  3414  0096                     	;# 
  3415  0097                     	;# 
  3416  0098                     	;# 
  3417  0099                     	;# 
  3418  009A                     	;# 
  3419  009B                     	;# 
  3420  009C                     	;# 
  3421  009D                     	;# 
  3422  009E                     	;# 
  3423  010C                     	;# 
  3424  010D                     	;# 
  3425  010E                     	;# 
  3426  010E                     	;# 
  3427  010F                     	;# 
  3428  0110                     	;# 
  3429  0110                     	;# 
  3430  0111                     	;# 
  3431  0112                     	;# 
  3432  0112                     	;# 
  3433  0113                     	;# 
  3434  0114                     	;# 
  3435  0114                     	;# 
  3436  0115                     	;# 
  3437  0116                     	;# 
  3438  0116                     	;# 
  3439  0117                     	;# 
  3440  0119                     	;# 
  3441  0119                     	;# 
  3442  0119                     	;# 
  3443  011A                     	;# 
  3444  011A                     	;# 
  3445  011A                     	;# 
  3446  011B                     	;# 
  3447  011B                     	;# 
  3448  011B                     	;# 
  3449  011B                     	;# 
  3450  011B                     	;# 
  3451  011C                     	;# 
  3452  011C                     	;# 
  3453  011C                     	;# 
  3454  011D                     	;# 
  3455  011D                     	;# 
  3456  011D                     	;# 
  3457  011E                     	;# 
  3458  011E                     	;# 
  3459  011E                     	;# 
  3460  011F                     	;# 
  3461  011F                     	;# 
  3462  011F                     	;# 
  3463  011F                     	;# 
  3464  011F                     	;# 
  3465  018C                     	;# 
  3466  018D                     	;# 
  3467  018E                     	;# 
  3468  018F                     	;# 
  3469  0190                     	;# 
  3470  0191                     	;# 
  3471  0192                     	;# 
  3472  0196                     	;# 
  3473  0197                     	;# 
  3474  0198                     	;# 
  3475  0199                     	;# 
  3476  019A                     	;# 
  3477  019B                     	;# 
  3478  019C                     	;# 
  3479  020C                     	;# 
  3480  020C                     	;# 
  3481  020D                     	;# 
  3482  020E                     	;# 
  3483  020F                     	;# 
  3484  020F                     	;# 
  3485  0210                     	;# 
  3486  0210                     	;# 
  3487  0211                     	;# 
  3488  0211                     	;# 
  3489  0212                     	;# 
  3490  0212                     	;# 
  3491  0213                     	;# 
  3492  0214                     	;# 
  3493  0215                     	;# 
  3494  0215                     	;# 
  3495  0216                     	;# 
  3496  0216                     	;# 
  3497  0217                     	;# 
  3498  0217                     	;# 
  3499  0218                     	;# 
  3500  0218                     	;# 
  3501  0219                     	;# 
  3502  021A                     	;# 
  3503  021B                     	;# 
  3504  021B                     	;# 
  3505  021C                     	;# 
  3506  021C                     	;# 
  3507  021D                     	;# 
  3508  021D                     	;# 
  3509  021E                     	;# 
  3510  021F                     	;# 
  3511  028C                     	;# 
  3512  028C                     	;# 
  3513  028D                     	;# 
  3514  028D                     	;# 
  3515  028E                     	;# 
  3516  028F                     	;# 
  3517  0290                     	;# 
  3518  0290                     	;# 
  3519  0291                     	;# 
  3520  0292                     	;# 
  3521  0292                     	;# 
  3522  0293                     	;# 
  3523  0293                     	;# 
  3524  0294                     	;# 
  3525  0295                     	;# 
  3526  0296                     	;# 
  3527  0296                     	;# 
  3528  0297                     	;# 
  3529  0298                     	;# 
  3530  0298                     	;# 
  3531  0299                     	;# 
  3532  0299                     	;# 
  3533  029A                     	;# 
  3534  029B                     	;# 
  3535  029C                     	;# 
  3536  029C                     	;# 
  3537  029D                     	;# 
  3538  030C                     	;# 
  3539  030C                     	;# 
  3540  030D                     	;# 
  3541  030E                     	;# 
  3542  030F                     	;# 
  3543  0310                     	;# 
  3544  0310                     	;# 
  3545  0311                     	;# 
  3546  0312                     	;# 
  3547  0313                     	;# 
  3548  0314                     	;# 
  3549  0314                     	;# 
  3550  0315                     	;# 
  3551  0316                     	;# 
  3552  0317                     	;# 
  3553  0318                     	;# 
  3554  0318                     	;# 
  3555  0319                     	;# 
  3556  031A                     	;# 
  3557  031B                     	;# 
  3558  031C                     	;# 
  3559  031C                     	;# 
  3560  031D                     	;# 
  3561  031E                     	;# 
  3562  031F                     	;# 
  3563  038C                     	;# 
  3564  038D                     	;# 
  3565  038E                     	;# 
  3566  0390                     	;# 
  3567  0391                     	;# 
  3568  0392                     	;# 
  3569  040C                     	;# 
  3570  040D                     	;# 
  3571  040E                     	;# 
  3572  040F                     	;# 
  3573  0410                     	;# 
  3574  0411                     	;# 
  3575  0416                     	;# 
  3576  0416                     	;# 
  3577  0417                     	;# 
  3578  0418                     	;# 
  3579  0418                     	;# 
  3580  0419                     	;# 
  3581  041A                     	;# 
  3582  041A                     	;# 
  3583  041B                     	;# 
  3584  041C                     	;# 
  3585  041C                     	;# 
  3586  041D                     	;# 
  3587  041E                     	;# 
  3588  041F                     	;# 
  3589  048C                     	;# 
  3590  048C                     	;# 
  3591  048D                     	;# 
  3592  048E                     	;# 
  3593  048F                     	;# 
  3594  048F                     	;# 
  3595  0490                     	;# 
  3596  0491                     	;# 
  3597  0492                     	;# 
  3598  0492                     	;# 
  3599  0493                     	;# 
  3600  0494                     	;# 
  3601  0495                     	;# 
  3602  0495                     	;# 
  3603  0496                     	;# 
  3604  0497                     	;# 
  3605  0498                     	;# 
  3606  0499                     	;# 
  3607  049A                     	;# 
  3608  049B                     	;# 
  3609  049C                     	;# 
  3610  049D                     	;# 
  3611  050C                     	;# 
  3612  050C                     	;# 
  3613  050D                     	;# 
  3614  050E                     	;# 
  3615  050F                     	;# 
  3616  050F                     	;# 
  3617  0510                     	;# 
  3618  0511                     	;# 
  3619  0512                     	;# 
  3620  0512                     	;# 
  3621  0513                     	;# 
  3622  0514                     	;# 
  3623  0515                     	;# 
  3624  0515                     	;# 
  3625  0516                     	;# 
  3626  0517                     	;# 
  3627  0518                     	;# 
  3628  0519                     	;# 
  3629  051A                     	;# 
  3630  051B                     	;# 
  3631  051C                     	;# 
  3632  051D                     	;# 
  3633  058C                     	;# 
  3634  058C                     	;# 
  3635  058D                     	;# 
  3636  058E                     	;# 
  3637  058F                     	;# 
  3638  058F                     	;# 
  3639  0590                     	;# 
  3640  0591                     	;# 
  3641  0592                     	;# 
  3642  0593                     	;# 
  3643  060C                     	;# 
  3644  060D                     	;# 
  3645  060E                     	;# 
  3646  060F                     	;# 
  3647  0610                     	;# 
  3648  0611                     	;# 
  3649  0612                     	;# 
  3650  0613                     	;# 
  3651  0614                     	;# 
  3652  0616                     	;# 
  3653  0617                     	;# 
  3654  0618                     	;# 
  3655  0619                     	;# 
  3656  061A                     	;# 
  3657  061B                     	;# 
  3658  061C                     	;# 
  3659  061D                     	;# 
  3660  061E                     	;# 
  3661  068C                     	;# 
  3662  068D                     	;# 
  3663  068E                     	;# 
  3664  068F                     	;# 
  3665  0690                     	;# 
  3666  0691                     	;# 
  3667  0692                     	;# 
  3668  0693                     	;# 
  3669  0694                     	;# 
  3670  070C                     	;# 
  3671  070D                     	;# 
  3672  070E                     	;# 
  3673  070F                     	;# 
  3674  0710                     	;# 
  3675  0711                     	;# 
  3676  0712                     	;# 
  3677  0713                     	;# 
  3678  0714                     	;# 
  3679  0716                     	;# 
  3680  0717                     	;# 
  3681  0718                     	;# 
  3682  0719                     	;# 
  3683  071A                     	;# 
  3684  071B                     	;# 
  3685  071C                     	;# 
  3686  071D                     	;# 
  3687  071E                     	;# 
  3688  0796                     	;# 
  3689  0797                     	;# 
  3690  0798                     	;# 
  3691  0799                     	;# 
  3692  079A                     	;# 
  3693  079B                     	;# 
  3694  080C                     	;# 
  3695  080D                     	;# 
  3696  080E                     	;# 
  3697  080F                     	;# 
  3698  0810                     	;# 
  3699  0811                     	;# 
  3700  0812                     	;# 
  3701  0813                     	;# 
  3702  0814                     	;# 
  3703  081A                     	;# 
  3704  081B                     	;# 
  3705  081C                     	;# 
  3706  081D                     	;# 
  3707  081E                     	;# 
  3708  081F                     	;# 
  3709  088C                     	;# 
  3710  088D                     	;# 
  3711  088E                     	;# 
  3712  088F                     	;# 
  3713  0890                     	;# 
  3714  0891                     	;# 
  3715  0892                     	;# 
  3716  0893                     	;# 
  3717  0895                     	;# 
  3718  0896                     	;# 
  3719  0897                     	;# 
  3720  0898                     	;# 
  3721  0899                     	;# 
  3722  089A                     	;# 
  3723  089B                     	;# 
  3724  090C                     	;# 
  3725  090E                     	;# 
  3726  090F                     	;# 
  3727  091F                     	;# 
  3728  091F                     	;# 
  3729  098F                     	;# 
  3730  098F                     	;# 
  3731  0990                     	;# 
  3732  0991                     	;# 
  3733  0992                     	;# 
  3734  0993                     	;# 
  3735  0994                     	;# 
  3736  0995                     	;# 
  3737  0996                     	;# 
  3738  0997                     	;# 
  3739  0E0F                     	;# 
  3740  0E10                     	;# 
  3741  0E11                     	;# 
  3742  0E12                     	;# 
  3743  0E13                     	;# 
  3744  0E14                     	;# 
  3745  0E15                     	;# 
  3746  0E16                     	;# 
  3747  0E17                     	;# 
  3748  0E18                     	;# 
  3749  0E19                     	;# 
  3750  0E1A                     	;# 
  3751  0E1B                     	;# 
  3752  0E1C                     	;# 
  3753  0E1D                     	;# 
  3754  0E1E                     	;# 
  3755  0E1F                     	;# 
  3756  0E20                     	;# 
  3757  0E21                     	;# 
  3758  0E22                     	;# 
  3759  0E23                     	;# 
  3760  0E24                     	;# 
  3761  0E25                     	;# 
  3762  0E26                     	;# 
  3763  0E27                     	;# 
  3764  0E28                     	;# 
  3765  0E29                     	;# 
  3766  0E2A                     	;# 
  3767  0E2B                     	;# 
  3768  0E2C                     	;# 
  3769  0E2D                     	;# 
  3770  0E2E                     	;# 
  3771  0E2F                     	;# 
  3772  0E30                     	;# 
  3773  0E31                     	;# 
  3774  0E32                     	;# 
  3775  0E33                     	;# 
  3776  0E34                     	;# 
  3777  0E35                     	;# 
  3778  0E36                     	;# 
  3779  0E37                     	;# 
  3780  0E8F                     	;# 
  3781  0E90                     	;# 
  3782  0E91                     	;# 
  3783  0E92                     	;# 
  3784  0E93                     	;# 
  3785  0E94                     	;# 
  3786  0E95                     	;# 
  3787  0E96                     	;# 
  3788  0E97                     	;# 
  3789  0E9C                     	;# 
  3790  0E9D                     	;# 
  3791  0E9E                     	;# 
  3792  0EA1                     	;# 
  3793  0EA2                     	;# 
  3794  0EA3                     	;# 
  3795  0EA4                     	;# 
  3796  0EA5                     	;# 
  3797  0EA9                     	;# 
  3798  0EAA                     	;# 
  3799  0EAB                     	;# 
  3800  0EAC                     	;# 
  3801  0EB1                     	;# 
  3802  0EB2                     	;# 
  3803  0EB3                     	;# 
  3804  0EB8                     	;# 
  3805  0EB9                     	;# 
  3806  0EBA                     	;# 
  3807  0EBB                     	;# 
  3808  0EBC                     	;# 
  3809  0EBD                     	;# 
  3810  0EBE                     	;# 
  3811  0EC3                     	;# 
  3812  0EC5                     	;# 
  3813  0EC6                     	;# 
  3814  0EC7                     	;# 
  3815  0EC8                     	;# 
  3816  0EC9                     	;# 
  3817  0ECA                     	;# 
  3818  0ECB                     	;# 
  3819  0ECC                     	;# 
  3820  0F10                     	;# 
  3821  0F11                     	;# 
  3822  0F12                     	;# 
  3823  0F13                     	;# 
  3824  0F14                     	;# 
  3825  0F15                     	;# 
  3826  0F16                     	;# 
  3827  0F17                     	;# 
  3828  0F18                     	;# 
  3829  0F19                     	;# 
  3830  0F1A                     	;# 
  3831  0F1B                     	;# 
  3832  0F1C                     	;# 
  3833  0F1D                     	;# 
  3834  0F1E                     	;# 
  3835  0F1F                     	;# 
  3836  0F20                     	;# 
  3837  0F21                     	;# 
  3838  0F22                     	;# 
  3839  0F23                     	;# 
  3840  0F24                     	;# 
  3841  0F25                     	;# 
  3842  0F26                     	;# 
  3843  0F27                     	;# 
  3844  0F28                     	;# 
  3845  0F29                     	;# 
  3846  0F2A                     	;# 
  3847  0F2B                     	;# 
  3848  0F2C                     	;# 
  3849  0F2D                     	;# 
  3850  0F2E                     	;# 
  3851  0F2F                     	;# 
  3852  0F30                     	;# 
  3853  0F31                     	;# 
  3854  0F32                     	;# 
  3855  0F38                     	;# 
  3856  0F39                     	;# 
  3857  0F3A                     	;# 
  3858  0F3B                     	;# 
  3859  0F3C                     	;# 
  3860  0F3D                     	;# 
  3861  0F3E                     	;# 
  3862  0F3F                     	;# 
  3863  0F40                     	;# 
  3864  0F41                     	;# 
  3865  0F43                     	;# 
  3866  0F44                     	;# 
  3867  0F45                     	;# 
  3868  0F46                     	;# 
  3869  0F47                     	;# 
  3870  0F48                     	;# 
  3871  0F49                     	;# 
  3872  0F4A                     	;# 
  3873  0F4B                     	;# 
  3874  0F4C                     	;# 
  3875  0F4E                     	;# 
  3876  0F4F                     	;# 
  3877  0F50                     	;# 
  3878  0F51                     	;# 
  3879  0F52                     	;# 
  3880  0F53                     	;# 
  3881  0F54                     	;# 
  3882  0F55                     	;# 
  3883  0F56                     	;# 
  3884  0F57                     	;# 
  3885  0F59                     	;# 
  3886  0F5A                     	;# 
  3887  0F5B                     	;# 
  3888  0F5C                     	;# 
  3889  0F5D                     	;# 
  3890  0F61                     	;# 
  3891  0F62                     	;# 
  3892  0F64                     	;# 
  3893  0F65                     	;# 
  3894  0F66                     	;# 
  3895  0F67                     	;# 
  3896  0F68                     	;# 
  3897  0F69                     	;# 
  3898  0F6A                     	;# 
  3899  0F6B                     	;# 
  3900  0F6C                     	;# 
  3901  0F6D                     	;# 
  3902  0FE4                     	;# 
  3903  0FE5                     	;# 
  3904  0FE6                     	;# 
  3905  0FE7                     	;# 
  3906  0FE8                     	;# 
  3907  0FE9                     	;# 
  3908  0FEA                     	;# 
  3909  0FEB                     	;# 
  3910  0FED                     	;# 
  3911  0FEE                     	;# 
  3912  0FEF                     	;# 
  3913  0000                     	;# 
  3914  0001                     	;# 
  3915  0002                     	;# 
  3916  0003                     	;# 
  3917  0004                     	;# 
  3918  0005                     	;# 
  3919  0006                     	;# 
  3920  0007                     	;# 
  3921  0008                     	;# 
  3922  0009                     	;# 
  3923  000A                     	;# 
  3924  000B                     	;# 
  3925  000C                     	;# 
  3926  000D                     	;# 
  3927  000E                     	;# 
  3928  000F                     	;# 
  3929  0010                     	;# 
  3930  0011                     	;# 
  3931  0012                     	;# 
  3932  0013                     	;# 
  3933  0014                     	;# 
  3934  0015                     	;# 
  3935  0016                     	;# 
  3936  0017                     	;# 
  3937  0018                     	;# 
  3938  0019                     	;# 
  3939  001A                     	;# 
  3940  001C                     	;# 
  3941  001C                     	;# 
  3942  001D                     	;# 
  3943  001D                     	;# 
  3944  001E                     	;# 
  3945  001F                     	;# 
  3946  008C                     	;# 
  3947  008C                     	;# 
  3948  008D                     	;# 
  3949  008E                     	;# 
  3950  008E                     	;# 
  3951  008F                     	;# 
  3952  0090                     	;# 
  3953  0090                     	;# 
  3954  0091                     	;# 
  3955  0093                     	;# 
  3956  0094                     	;# 
  3957  0095                     	;# 
  3958  0096                     	;# 
  3959  0097                     	;# 
  3960  0098                     	;# 
  3961  0099                     	;# 
  3962  009A                     	;# 
  3963  009B                     	;# 
  3964  009C                     	;# 
  3965  009D                     	;# 
  3966  009E                     	;# 
  3967  010C                     	;# 
  3968  010D                     	;# 
  3969  010E                     	;# 
  3970  010E                     	;# 
  3971  010F                     	;# 
  3972  0110                     	;# 
  3973  0110                     	;# 
  3974  0111                     	;# 
  3975  0112                     	;# 
  3976  0112                     	;# 
  3977  0113                     	;# 
  3978  0114                     	;# 
  3979  0114                     	;# 
  3980  0115                     	;# 
  3981  0116                     	;# 
  3982  0116                     	;# 
  3983  0117                     	;# 
  3984  0119                     	;# 
  3985  0119                     	;# 
  3986  0119                     	;# 
  3987  011A                     	;# 
  3988  011A                     	;# 
  3989  011A                     	;# 
  3990  011B                     	;# 
  3991  011B                     	;# 
  3992  011B                     	;# 
  3993  011B                     	;# 
  3994  011B                     	;# 
  3995  011C                     	;# 
  3996  011C                     	;# 
  3997  011C                     	;# 
  3998  011D                     	;# 
  3999  011D                     	;# 
  4000  011D                     	;# 
  4001  011E                     	;# 
  4002  011E                     	;# 
  4003  011E                     	;# 
  4004  011F                     	;# 
  4005  011F                     	;# 
  4006  011F                     	;# 
  4007  011F                     	;# 
  4008  011F                     	;# 
  4009  018C                     	;# 
  4010  018D                     	;# 
  4011  018E                     	;# 
  4012  018F                     	;# 
  4013  0190                     	;# 
  4014  0191                     	;# 
  4015  0192                     	;# 
  4016  0196                     	;# 
  4017  0197                     	;# 
  4018  0198                     	;# 
  4019  0199                     	;# 
  4020  019A                     	;# 
  4021  019B                     	;# 
  4022  019C                     	;# 
  4023  020C                     	;# 
  4024  020C                     	;# 
  4025  020D                     	;# 
  4026  020E                     	;# 
  4027  020F                     	;# 
  4028  020F                     	;# 
  4029  0210                     	;# 
  4030  0210                     	;# 
  4031  0211                     	;# 
  4032  0211                     	;# 
  4033  0212                     	;# 
  4034  0212                     	;# 
  4035  0213                     	;# 
  4036  0214                     	;# 
  4037  0215                     	;# 
  4038  0215                     	;# 
  4039  0216                     	;# 
  4040  0216                     	;# 
  4041  0217                     	;# 
  4042  0217                     	;# 
  4043  0218                     	;# 
  4044  0218                     	;# 
  4045  0219                     	;# 
  4046  021A                     	;# 
  4047  021B                     	;# 
  4048  021B                     	;# 
  4049  021C                     	;# 
  4050  021C                     	;# 
  4051  021D                     	;# 
  4052  021D                     	;# 
  4053  021E                     	;# 
  4054  021F                     	;# 
  4055  028C                     	;# 
  4056  028C                     	;# 
  4057  028D                     	;# 
  4058  028D                     	;# 
  4059  028E                     	;# 
  4060  028F                     	;# 
  4061  0290                     	;# 
  4062  0290                     	;# 
  4063  0291                     	;# 
  4064  0292                     	;# 
  4065  0292                     	;# 
  4066  0293                     	;# 
  4067  0293                     	;# 
  4068  0294                     	;# 
  4069  0295                     	;# 
  4070  0296                     	;# 
  4071  0296                     	;# 
  4072  0297                     	;# 
  4073  0298                     	;# 
  4074  0298                     	;# 
  4075  0299                     	;# 
  4076  0299                     	;# 
  4077  029A                     	;# 
  4078  029B                     	;# 
  4079  029C                     	;# 
  4080  029C                     	;# 
  4081  029D                     	;# 
  4082  030C                     	;# 
  4083  030C                     	;# 
  4084  030D                     	;# 
  4085  030E                     	;# 
  4086  030F                     	;# 
  4087  0310                     	;# 
  4088  0310                     	;# 
  4089  0311                     	;# 
  4090  0312                     	;# 
  4091  0313                     	;# 
  4092  0314                     	;# 
  4093  0314                     	;# 
  4094  0315                     	;# 
  4095  0316                     	;# 
  4096  0317                     	;# 
  4097  0318                     	;# 
  4098  0318                     	;# 
  4099  0319                     	;# 
  4100  031A                     	;# 
  4101  031B                     	;# 
  4102  031C                     	;# 
  4103  031C                     	;# 
  4104  031D                     	;# 
  4105  031E                     	;# 
  4106  031F                     	;# 
  4107  038C                     	;# 
  4108  038D                     	;# 
  4109  038E                     	;# 
  4110  0390                     	;# 
  4111  0391                     	;# 
  4112  0392                     	;# 
  4113  040C                     	;# 
  4114  040D                     	;# 
  4115  040E                     	;# 
  4116  040F                     	;# 
  4117  0410                     	;# 
  4118  0411                     	;# 
  4119  0416                     	;# 
  4120  0416                     	;# 
  4121  0417                     	;# 
  4122  0418                     	;# 
  4123  0418                     	;# 
  4124  0419                     	;# 
  4125  041A                     	;# 
  4126  041A                     	;# 
  4127  041B                     	;# 
  4128  041C                     	;# 
  4129  041C                     	;# 
  4130  041D                     	;# 
  4131  041E                     	;# 
  4132  041F                     	;# 
  4133  048C                     	;# 
  4134  048C                     	;# 
  4135  048D                     	;# 
  4136  048E                     	;# 
  4137  048F                     	;# 
  4138  048F                     	;# 
  4139  0490                     	;# 
  4140  0491                     	;# 
  4141  0492                     	;# 
  4142  0492                     	;# 
  4143  0493                     	;# 
  4144  0494                     	;# 
  4145  0495                     	;# 
  4146  0495                     	;# 
  4147  0496                     	;# 
  4148  0497                     	;# 
  4149  0498                     	;# 
  4150  0499                     	;# 
  4151  049A                     	;# 
  4152  049B                     	;# 
  4153  049C                     	;# 
  4154  049D                     	;# 
  4155  050C                     	;# 
  4156  050C                     	;# 
  4157  050D                     	;# 
  4158  050E                     	;# 
  4159  050F                     	;# 
  4160  050F                     	;# 
  4161  0510                     	;# 
  4162  0511                     	;# 
  4163  0512                     	;# 
  4164  0512                     	;# 
  4165  0513                     	;# 
  4166  0514                     	;# 
  4167  0515                     	;# 
  4168  0515                     	;# 
  4169  0516                     	;# 
  4170  0517                     	;# 
  4171  0518                     	;# 
  4172  0519                     	;# 
  4173  051A                     	;# 
  4174  051B                     	;# 
  4175  051C                     	;# 
  4176  051D                     	;# 
  4177  058C                     	;# 
  4178  058C                     	;# 
  4179  058D                     	;# 
  4180  058E                     	;# 
  4181  058F                     	;# 
  4182  058F                     	;# 
  4183  0590                     	;# 
  4184  0591                     	;# 
  4185  0592                     	;# 
  4186  0593                     	;# 
  4187  060C                     	;# 
  4188  060D                     	;# 
  4189  060E                     	;# 
  4190  060F                     	;# 
  4191  0610                     	;# 
  4192  0611                     	;# 
  4193  0612                     	;# 
  4194  0613                     	;# 
  4195  0614                     	;# 
  4196  0616                     	;# 
  4197  0617                     	;# 
  4198  0618                     	;# 
  4199  0619                     	;# 
  4200  061A                     	;# 
  4201  061B                     	;# 
  4202  061C                     	;# 
  4203  061D                     	;# 
  4204  061E                     	;# 
  4205  068C                     	;# 
  4206  068D                     	;# 
  4207  068E                     	;# 
  4208  068F                     	;# 
  4209  0690                     	;# 
  4210  0691                     	;# 
  4211  0692                     	;# 
  4212  0693                     	;# 
  4213  0694                     	;# 
  4214  070C                     	;# 
  4215  070D                     	;# 
  4216  070E                     	;# 
  4217  070F                     	;# 
  4218  0710                     	;# 
  4219  0711                     	;# 
  4220  0712                     	;# 
  4221  0713                     	;# 
  4222  0714                     	;# 
  4223  0716                     	;# 
  4224  0717                     	;# 
  4225  0718                     	;# 
  4226  0719                     	;# 
  4227  071A                     	;# 
  4228  071B                     	;# 
  4229  071C                     	;# 
  4230  071D                     	;# 
  4231  071E                     	;# 
  4232  0796                     	;# 
  4233  0797                     	;# 
  4234  0798                     	;# 
  4235  0799                     	;# 
  4236  079A                     	;# 
  4237  079B                     	;# 
  4238  080C                     	;# 
  4239  080D                     	;# 
  4240  080E                     	;# 
  4241  080F                     	;# 
  4242  0810                     	;# 
  4243  0811                     	;# 
  4244  0812                     	;# 
  4245  0813                     	;# 
  4246  0814                     	;# 
  4247  081A                     	;# 
  4248  081B                     	;# 
  4249  081C                     	;# 
  4250  081D                     	;# 
  4251  081E                     	;# 
  4252  081F                     	;# 
  4253  088C                     	;# 
  4254  088D                     	;# 
  4255  088E                     	;# 
  4256  088F                     	;# 
  4257  0890                     	;# 
  4258  0891                     	;# 
  4259  0892                     	;# 
  4260  0893                     	;# 
  4261  0895                     	;# 
  4262  0896                     	;# 
  4263  0897                     	;# 
  4264  0898                     	;# 
  4265  0899                     	;# 
  4266  089A                     	;# 
  4267  089B                     	;# 
  4268  090C                     	;# 
  4269  090E                     	;# 
  4270  090F                     	;# 
  4271  091F                     	;# 
  4272  091F                     	;# 
  4273  098F                     	;# 
  4274  098F                     	;# 
  4275  0990                     	;# 
  4276  0991                     	;# 
  4277  0992                     	;# 
  4278  0993                     	;# 
  4279  0994                     	;# 
  4280  0995                     	;# 
  4281  0996                     	;# 
  4282  0997                     	;# 
  4283  0E0F                     	;# 
  4284  0E10                     	;# 
  4285  0E11                     	;# 
  4286  0E12                     	;# 
  4287  0E13                     	;# 
  4288  0E14                     	;# 
  4289  0E15                     	;# 
  4290  0E16                     	;# 
  4291  0E17                     	;# 
  4292  0E18                     	;# 
  4293  0E19                     	;# 
  4294  0E1A                     	;# 
  4295  0E1B                     	;# 
  4296  0E1C                     	;# 
  4297  0E1D                     	;# 
  4298  0E1E                     	;# 
  4299  0E1F                     	;# 
  4300  0E20                     	;# 
  4301  0E21                     	;# 
  4302  0E22                     	;# 
  4303  0E23                     	;# 
  4304  0E24                     	;# 
  4305  0E25                     	;# 
  4306  0E26                     	;# 
  4307  0E27                     	;# 
  4308  0E28                     	;# 
  4309  0E29                     	;# 
  4310  0E2A                     	;# 
  4311  0E2B                     	;# 
  4312  0E2C                     	;# 
  4313  0E2D                     	;# 
  4314  0E2E                     	;# 
  4315  0E2F                     	;# 
  4316  0E30                     	;# 
  4317  0E31                     	;# 
  4318  0E32                     	;# 
  4319  0E33                     	;# 
  4320  0E34                     	;# 
  4321  0E35                     	;# 
  4322  0E36                     	;# 
  4323  0E37                     	;# 
  4324  0E8F                     	;# 
  4325  0E90                     	;# 
  4326  0E91                     	;# 
  4327  0E92                     	;# 
  4328  0E93                     	;# 
  4329  0E94                     	;# 
  4330  0E95                     	;# 
  4331  0E96                     	;# 
  4332  0E97                     	;# 
  4333  0E9C                     	;# 
  4334  0E9D                     	;# 
  4335  0E9E                     	;# 
  4336  0EA1                     	;# 
  4337  0EA2                     	;# 
  4338  0EA3                     	;# 
  4339  0EA4                     	;# 
  4340  0EA5                     	;# 
  4341  0EA9                     	;# 
  4342  0EAA                     	;# 
  4343  0EAB                     	;# 
  4344  0EAC                     	;# 
  4345  0EB1                     	;# 
  4346  0EB2                     	;# 
  4347  0EB3                     	;# 
  4348  0EB8                     	;# 
  4349  0EB9                     	;# 
  4350  0EBA                     	;# 
  4351  0EBB                     	;# 
  4352  0EBC                     	;# 
  4353  0EBD                     	;# 
  4354  0EBE                     	;# 
  4355  0EC3                     	;# 
  4356  0EC5                     	;# 
  4357  0EC6                     	;# 
  4358  0EC7                     	;# 
  4359  0EC8                     	;# 
  4360  0EC9                     	;# 
  4361  0ECA                     	;# 
  4362  0ECB                     	;# 
  4363  0ECC                     	;# 
  4364  0F10                     	;# 
  4365  0F11                     	;# 
  4366  0F12                     	;# 
  4367  0F13                     	;# 
  4368  0F14                     	;# 
  4369  0F15                     	;# 
  4370  0F16                     	;# 
  4371  0F17                     	;# 
  4372  0F18                     	;# 
  4373  0F19                     	;# 
  4374  0F1A                     	;# 
  4375  0F1B                     	;# 
  4376  0F1C                     	;# 
  4377  0F1D                     	;# 
  4378  0F1E                     	;# 
  4379  0F1F                     	;# 
  4380  0F20                     	;# 
  4381  0F21                     	;# 
  4382  0F22                     	;# 
  4383  0F23                     	;# 
  4384  0F24                     	;# 
  4385  0F25                     	;# 
  4386  0F26                     	;# 
  4387  0F27                     	;# 
  4388  0F28                     	;# 
  4389  0F29                     	;# 
  4390  0F2A                     	;# 
  4391  0F2B                     	;# 
  4392  0F2C                     	;# 
  4393  0F2D                     	;# 
  4394  0F2E                     	;# 
  4395  0F2F                     	;# 
  4396  0F30                     	;# 
  4397  0F31                     	;# 
  4398  0F32                     	;# 
  4399  0F38                     	;# 
  4400  0F39                     	;# 
  4401  0F3A                     	;# 
  4402  0F3B                     	;# 
  4403  0F3C                     	;# 
  4404  0F3D                     	;# 
  4405  0F3E                     	;# 
  4406  0F3F                     	;# 
  4407  0F40                     	;# 
  4408  0F41                     	;# 
  4409  0F43                     	;# 
  4410  0F44                     	;# 
  4411  0F45                     	;# 
  4412  0F46                     	;# 
  4413  0F47                     	;# 
  4414  0F48                     	;# 
  4415  0F49                     	;# 
  4416  0F4A                     	;# 
  4417  0F4B                     	;# 
  4418  0F4C                     	;# 
  4419  0F4E                     	;# 
  4420  0F4F                     	;# 
  4421  0F50                     	;# 
  4422  0F51                     	;# 
  4423  0F52                     	;# 
  4424  0F53                     	;# 
  4425  0F54                     	;# 
  4426  0F55                     	;# 
  4427  0F56                     	;# 
  4428  0F57                     	;# 
  4429  0F59                     	;# 
  4430  0F5A                     	;# 
  4431  0F5B                     	;# 
  4432  0F5C                     	;# 
  4433  0F5D                     	;# 
  4434  0F61                     	;# 
  4435  0F62                     	;# 
  4436  0F64                     	;# 
  4437  0F65                     	;# 
  4438  0F66                     	;# 
  4439  0F67                     	;# 
  4440  0F68                     	;# 
  4441  0F69                     	;# 
  4442  0F6A                     	;# 
  4443  0F6B                     	;# 
  4444  0F6C                     	;# 
  4445  0F6D                     	;# 
  4446  0FE4                     	;# 
  4447  0FE5                     	;# 
  4448  0FE6                     	;# 
  4449  0FE7                     	;# 
  4450  0FE8                     	;# 
  4451  0FE9                     	;# 
  4452  0FEA                     	;# 
  4453  0FEB                     	;# 
  4454  0FED                     	;# 
  4455  0FEE                     	;# 
  4456  0FEF                     	;# 
  4457  0000                     	;# 
  4458  0001                     	;# 
  4459  0002                     	;# 
  4460  0003                     	;# 
  4461  0004                     	;# 
  4462  0005                     	;# 
  4463  0006                     	;# 
  4464  0007                     	;# 
  4465  0008                     	;# 
  4466  0009                     	;# 
  4467  000A                     	;# 
  4468  000B                     	;# 
  4469  000C                     	;# 
  4470  000D                     	;# 
  4471  000E                     	;# 
  4472  000F                     	;# 
  4473  0010                     	;# 
  4474  0011                     	;# 
  4475  0012                     	;# 
  4476  0013                     	;# 
  4477  0014                     	;# 
  4478  0015                     	;# 
  4479  0016                     	;# 
  4480  0017                     	;# 
  4481  0018                     	;# 
  4482  0019                     	;# 
  4483  001A                     	;# 
  4484  001C                     	;# 
  4485  001C                     	;# 
  4486  001D                     	;# 
  4487  001D                     	;# 
  4488  001E                     	;# 
  4489  001F                     	;# 
  4490  008C                     	;# 
  4491  008C                     	;# 
  4492  008D                     	;# 
  4493  008E                     	;# 
  4494  008E                     	;# 
  4495  008F                     	;# 
  4496  0090                     	;# 
  4497  0090                     	;# 
  4498  0091                     	;# 
  4499  0093                     	;# 
  4500  0094                     	;# 
  4501  0095                     	;# 
  4502  0096                     	;# 
  4503  0097                     	;# 
  4504  0098                     	;# 
  4505  0099                     	;# 
  4506  009A                     	;# 
  4507  009B                     	;# 
  4508  009C                     	;# 
  4509  009D                     	;# 
  4510  009E                     	;# 
  4511  010C                     	;# 
  4512  010D                     	;# 
  4513  010E                     	;# 
  4514  010E                     	;# 
  4515  010F                     	;# 
  4516  0110                     	;# 
  4517  0110                     	;# 
  4518  0111                     	;# 
  4519  0112                     	;# 
  4520  0112                     	;# 
  4521  0113                     	;# 
  4522  0114                     	;# 
  4523  0114                     	;# 
  4524  0115                     	;# 
  4525  0116                     	;# 
  4526  0116                     	;# 
  4527  0117                     	;# 
  4528  0119                     	;# 
  4529  0119                     	;# 
  4530  0119                     	;# 
  4531  011A                     	;# 
  4532  011A                     	;# 
  4533  011A                     	;# 
  4534  011B                     	;# 
  4535  011B                     	;# 
  4536  011B                     	;# 
  4537  011B                     	;# 
  4538  011B                     	;# 
  4539  011C                     	;# 
  4540  011C                     	;# 
  4541  011C                     	;# 
  4542  011D                     	;# 
  4543  011D                     	;# 
  4544  011D                     	;# 
  4545  011E                     	;# 
  4546  011E                     	;# 
  4547  011E                     	;# 
  4548  011F                     	;# 
  4549  011F                     	;# 
  4550  011F                     	;# 
  4551  011F                     	;# 
  4552  011F                     	;# 
  4553  018C                     	;# 
  4554  018D                     	;# 
  4555  018E                     	;# 
  4556  018F                     	;# 
  4557  0190                     	;# 
  4558  0191                     	;# 
  4559  0192                     	;# 
  4560  0196                     	;# 
  4561  0197                     	;# 
  4562  0198                     	;# 
  4563  0199                     	;# 
  4564  019A                     	;# 
  4565  019B                     	;# 
  4566  019C                     	;# 
  4567  020C                     	;# 
  4568  020C                     	;# 
  4569  020D                     	;# 
  4570  020E                     	;# 
  4571  020F                     	;# 
  4572  020F                     	;# 
  4573  0210                     	;# 
  4574  0210                     	;# 
  4575  0211                     	;# 
  4576  0211                     	;# 
  4577  0212                     	;# 
  4578  0212                     	;# 
  4579  0213                     	;# 
  4580  0214                     	;# 
  4581  0215                     	;# 
  4582  0215                     	;# 
  4583  0216                     	;# 
  4584  0216                     	;# 
  4585  0217                     	;# 
  4586  0217                     	;# 
  4587  0218                     	;# 
  4588  0218                     	;# 
  4589  0219                     	;# 
  4590  021A                     	;# 
  4591  021B                     	;# 
  4592  021B                     	;# 
  4593  021C                     	;# 
  4594  021C                     	;# 
  4595  021D                     	;# 
  4596  021D                     	;# 
  4597  021E                     	;# 
  4598  021F                     	;# 
  4599  028C                     	;# 
  4600  028C                     	;# 
  4601  028D                     	;# 
  4602  028D                     	;# 
  4603  028E                     	;# 
  4604  028F                     	;# 
  4605  0290                     	;# 
  4606  0290                     	;# 
  4607  0291                     	;# 
  4608  0292                     	;# 
  4609  0292                     	;# 
  4610  0293                     	;# 
  4611  0293                     	;# 
  4612  0294                     	;# 
  4613  0295                     	;# 
  4614  0296                     	;# 
  4615  0296                     	;# 
  4616  0297                     	;# 
  4617  0298                     	;# 
  4618  0298                     	;# 
  4619  0299                     	;# 
  4620  0299                     	;# 
  4621  029A                     	;# 
  4622  029B                     	;# 
  4623  029C                     	;# 
  4624  029C                     	;# 
  4625  029D                     	;# 
  4626  030C                     	;# 
  4627  030C                     	;# 
  4628  030D                     	;# 
  4629  030E                     	;# 
  4630  030F                     	;# 
  4631  0310                     	;# 
  4632  0310                     	;# 
  4633  0311                     	;# 
  4634  0312                     	;# 
  4635  0313                     	;# 
  4636  0314                     	;# 
  4637  0314                     	;# 
  4638  0315                     	;# 
  4639  0316                     	;# 
  4640  0317                     	;# 
  4641  0318                     	;# 
  4642  0318                     	;# 
  4643  0319                     	;# 
  4644  031A                     	;# 
  4645  031B                     	;# 
  4646  031C                     	;# 
  4647  031C                     	;# 
  4648  031D                     	;# 
  4649  031E                     	;# 
  4650  031F                     	;# 
  4651  038C                     	;# 
  4652  038D                     	;# 
  4653  038E                     	;# 
  4654  0390                     	;# 
  4655  0391                     	;# 
  4656  0392                     	;# 
  4657  040C                     	;# 
  4658  040D                     	;# 
  4659  040E                     	;# 
  4660  040F                     	;# 
  4661  0410                     	;# 
  4662  0411                     	;# 
  4663  0416                     	;# 
  4664  0416                     	;# 
  4665  0417                     	;# 
  4666  0418                     	;# 
  4667  0418                     	;# 
  4668  0419                     	;# 
  4669  041A                     	;# 
  4670  041A                     	;# 
  4671  041B                     	;# 
  4672  041C                     	;# 
  4673  041C                     	;# 
  4674  041D                     	;# 
  4675  041E                     	;# 
  4676  041F                     	;# 
  4677  048C                     	;# 
  4678  048C                     	;# 
  4679  048D                     	;# 
  4680  048E                     	;# 
  4681  048F                     	;# 
  4682  048F                     	;# 
  4683  0490                     	;# 
  4684  0491                     	;# 
  4685  0492                     	;# 
  4686  0492                     	;# 
  4687  0493                     	;# 
  4688  0494                     	;# 
  4689  0495                     	;# 
  4690  0495                     	;# 
  4691  0496                     	;# 
  4692  0497                     	;# 
  4693  0498                     	;# 
  4694  0499                     	;# 
  4695  049A                     	;# 
  4696  049B                     	;# 
  4697  049C                     	;# 
  4698  049D                     	;# 
  4699  050C                     	;# 
  4700  050C                     	;# 
  4701  050D                     	;# 
  4702  050E                     	;# 
  4703  050F                     	;# 
  4704  050F                     	;# 
  4705  0510                     	;# 
  4706  0511                     	;# 
  4707  0512                     	;# 
  4708  0512                     	;# 
  4709  0513                     	;# 
  4710  0514                     	;# 
  4711  0515                     	;# 
  4712  0515                     	;# 
  4713  0516                     	;# 
  4714  0517                     	;# 
  4715  0518                     	;# 
  4716  0519                     	;# 
  4717  051A                     	;# 
  4718  051B                     	;# 
  4719  051C                     	;# 
  4720  051D                     	;# 
  4721  058C                     	;# 
  4722  058C                     	;# 
  4723  058D                     	;# 
  4724  058E                     	;# 
  4725  058F                     	;# 
  4726  058F                     	;# 
  4727  0590                     	;# 
  4728  0591                     	;# 
  4729  0592                     	;# 
  4730  0593                     	;# 
  4731  060C                     	;# 
  4732  060D                     	;# 
  4733  060E                     	;# 
  4734  060F                     	;# 
  4735  0610                     	;# 
  4736  0611                     	;# 
  4737  0612                     	;# 
  4738  0613                     	;# 
  4739  0614                     	;# 
  4740  0616                     	;# 
  4741  0617                     	;# 
  4742  0618                     	;# 
  4743  0619                     	;# 
  4744  061A                     	;# 
  4745  061B                     	;# 
  4746  061C                     	;# 
  4747  061D                     	;# 
  4748  061E                     	;# 
  4749  068C                     	;# 
  4750  068D                     	;# 
  4751  068E                     	;# 
  4752  068F                     	;# 
  4753  0690                     	;# 
  4754  0691                     	;# 
  4755  0692                     	;# 
  4756  0693                     	;# 
  4757  0694                     	;# 
  4758  070C                     	;# 
  4759  070D                     	;# 
  4760  070E                     	;# 
  4761  070F                     	;# 
  4762  0710                     	;# 
  4763  0711                     	;# 
  4764  0712                     	;# 
  4765  0713                     	;# 
  4766  0714                     	;# 
  4767  0716                     	;# 
  4768  0717                     	;# 
  4769  0718                     	;# 
  4770  0719                     	;# 
  4771  071A                     	;# 
  4772  071B                     	;# 
  4773  071C                     	;# 
  4774  071D                     	;# 
  4775  071E                     	;# 
  4776  0796                     	;# 
  4777  0797                     	;# 
  4778  0798                     	;# 
  4779  0799                     	;# 
  4780  079A                     	;# 
  4781  079B                     	;# 
  4782  080C                     	;# 
  4783  080D                     	;# 
  4784  080E                     	;# 
  4785  080F                     	;# 
  4786  0810                     	;# 
  4787  0811                     	;# 
  4788  0812                     	;# 
  4789  0813                     	;# 
  4790  0814                     	;# 
  4791  081A                     	;# 
  4792  081B                     	;# 
  4793  081C                     	;# 
  4794  081D                     	;# 
  4795  081E                     	;# 
  4796  081F                     	;# 
  4797  088C                     	;# 
  4798  088D                     	;# 
  4799  088E                     	;# 
  4800  088F                     	;# 
  4801  0890                     	;# 
  4802  0891                     	;# 
  4803  0892                     	;# 
  4804  0893                     	;# 
  4805  0895                     	;# 
  4806  0896                     	;# 
  4807  0897                     	;# 
  4808  0898                     	;# 
  4809  0899                     	;# 
  4810  089A                     	;# 
  4811  089B                     	;# 
  4812  090C                     	;# 
  4813  090E                     	;# 
  4814  090F                     	;# 
  4815  091F                     	;# 
  4816  091F                     	;# 
  4817  098F                     	;# 
  4818  098F                     	;# 
  4819  0990                     	;# 
  4820  0991                     	;# 
  4821  0992                     	;# 
  4822  0993                     	;# 
  4823  0994                     	;# 
  4824  0995                     	;# 
  4825  0996                     	;# 
  4826  0997                     	;# 
  4827  0E0F                     	;# 
  4828  0E10                     	;# 
  4829  0E11                     	;# 
  4830  0E12                     	;# 
  4831  0E13                     	;# 
  4832  0E14                     	;# 
  4833  0E15                     	;# 
  4834  0E16                     	;# 
  4835  0E17                     	;# 
  4836  0E18                     	;# 
  4837  0E19                     	;# 
  4838  0E1A                     	;# 
  4839  0E1B                     	;# 
  4840  0E1C                     	;# 
  4841  0E1D                     	;# 
  4842  0E1E                     	;# 
  4843  0E1F                     	;# 
  4844  0E20                     	;# 
  4845  0E21                     	;# 
  4846  0E22                     	;# 
  4847  0E23                     	;# 
  4848  0E24                     	;# 
  4849  0E25                     	;# 
  4850  0E26                     	;# 
  4851  0E27                     	;# 
  4852  0E28                     	;# 
  4853  0E29                     	;# 
  4854  0E2A                     	;# 
  4855  0E2B                     	;# 
  4856  0E2C                     	;# 
  4857  0E2D                     	;# 
  4858  0E2E                     	;# 
  4859  0E2F                     	;# 
  4860  0E30                     	;# 
  4861  0E31                     	;# 
  4862  0E32                     	;# 
  4863  0E33                     	;# 
  4864  0E34                     	;# 
  4865  0E35                     	;# 
  4866  0E36                     	;# 
  4867  0E37                     	;# 
  4868  0E8F                     	;# 
  4869  0E90                     	;# 
  4870  0E91                     	;# 
  4871  0E92                     	;# 
  4872  0E93                     	;# 
  4873  0E94                     	;# 
  4874  0E95                     	;# 
  4875  0E96                     	;# 
  4876  0E97                     	;# 
  4877  0E9C                     	;# 
  4878  0E9D                     	;# 
  4879  0E9E                     	;# 
  4880  0EA1                     	;# 
  4881  0EA2                     	;# 
  4882  0EA3                     	;# 
  4883  0EA4                     	;# 
  4884  0EA5                     	;# 
  4885  0EA9                     	;# 
  4886  0EAA                     	;# 
  4887  0EAB                     	;# 
  4888  0EAC                     	;# 
  4889  0EB1                     	;# 
  4890  0EB2                     	;# 
  4891  0EB3                     	;# 
  4892  0EB8                     	;# 
  4893  0EB9                     	;# 
  4894  0EBA                     	;# 
  4895  0EBB                     	;# 
  4896  0EBC                     	;# 
  4897  0EBD                     	;# 
  4898  0EBE                     	;# 
  4899  0EC3                     	;# 
  4900  0EC5                     	;# 
  4901  0EC6                     	;# 
  4902  0EC7                     	;# 
  4903  0EC8                     	;# 
  4904  0EC9                     	;# 
  4905  0ECA                     	;# 
  4906  0ECB                     	;# 
  4907  0ECC                     	;# 
  4908  0F10                     	;# 
  4909  0F11                     	;# 
  4910  0F12                     	;# 
  4911  0F13                     	;# 
  4912  0F14                     	;# 
  4913  0F15                     	;# 
  4914  0F16                     	;# 
  4915  0F17                     	;# 
  4916  0F18                     	;# 
  4917  0F19                     	;# 
  4918  0F1A                     	;# 
  4919  0F1B                     	;# 
  4920  0F1C                     	;# 
  4921  0F1D                     	;# 
  4922  0F1E                     	;# 
  4923  0F1F                     	;# 
  4924  0F20                     	;# 
  4925  0F21                     	;# 
  4926  0F22                     	;# 
  4927  0F23                     	;# 
  4928  0F24                     	;# 
  4929  0F25                     	;# 
  4930  0F26                     	;# 
  4931  0F27                     	;# 
  4932  0F28                     	;# 
  4933  0F29                     	;# 
  4934  0F2A                     	;# 
  4935  0F2B                     	;# 
  4936  0F2C                     	;# 
  4937  0F2D                     	;# 
  4938  0F2E                     	;# 
  4939  0F2F                     	;# 
  4940  0F30                     	;# 
  4941  0F31                     	;# 
  4942  0F32                     	;# 
  4943  0F38                     	;# 
  4944  0F39                     	;# 
  4945  0F3A                     	;# 
  4946  0F3B                     	;# 
  4947  0F3C                     	;# 
  4948  0F3D                     	;# 
  4949  0F3E                     	;# 
  4950  0F3F                     	;# 
  4951  0F40                     	;# 
  4952  0F41                     	;# 
  4953  0F43                     	;# 
  4954  0F44                     	;# 
  4955  0F45                     	;# 
  4956  0F46                     	;# 
  4957  0F47                     	;# 
  4958  0F48                     	;# 
  4959  0F49                     	;# 
  4960  0F4A                     	;# 
  4961  0F4B                     	;# 
  4962  0F4C                     	;# 
  4963  0F4E                     	;# 
  4964  0F4F                     	;# 
  4965  0F50                     	;# 
  4966  0F51                     	;# 
  4967  0F52                     	;# 
  4968  0F53                     	;# 
  4969  0F54                     	;# 
  4970  0F55                     	;# 
  4971  0F56                     	;# 
  4972  0F57                     	;# 
  4973  0F59                     	;# 
  4974  0F5A                     	;# 
  4975  0F5B                     	;# 
  4976  0F5C                     	;# 
  4977  0F5D                     	;# 
  4978  0F61                     	;# 
  4979  0F62                     	;# 
  4980  0F64                     	;# 
  4981  0F65                     	;# 
  4982  0F66                     	;# 
  4983  0F67                     	;# 
  4984  0F68                     	;# 
  4985  0F69                     	;# 
  4986  0F6A                     	;# 
  4987  0F6B                     	;# 
  4988  0F6C                     	;# 
  4989  0F6D                     	;# 
  4990  0FE4                     	;# 
  4991  0FE5                     	;# 
  4992  0FE6                     	;# 
  4993  0FE7                     	;# 
  4994  0FE8                     	;# 
  4995  0FE9                     	;# 
  4996  0FEA                     	;# 
  4997  0FEB                     	;# 
  4998  0FED                     	;# 
  4999  0FEE                     	;# 
  5000  0FEF                     	;# 
  5001  0000                     	;# 
  5002  0001                     	;# 
  5003  0002                     	;# 
  5004  0003                     	;# 
  5005  0004                     	;# 
  5006  0005                     	;# 
  5007  0006                     	;# 
  5008  0007                     	;# 
  5009  0008                     	;# 
  5010  0009                     	;# 
  5011  000A                     	;# 
  5012  000B                     	;# 
  5013  000C                     	;# 
  5014  000D                     	;# 
  5015  000E                     	;# 
  5016  000F                     	;# 
  5017  0010                     	;# 
  5018  0011                     	;# 
  5019  0012                     	;# 
  5020  0013                     	;# 
  5021  0014                     	;# 
  5022  0015                     	;# 
  5023  0016                     	;# 
  5024  0017                     	;# 
  5025  0018                     	;# 
  5026  0019                     	;# 
  5027  001A                     	;# 
  5028  001C                     	;# 
  5029  001C                     	;# 
  5030  001D                     	;# 
  5031  001D                     	;# 
  5032  001E                     	;# 
  5033  001F                     	;# 
  5034  008C                     	;# 
  5035  008C                     	;# 
  5036  008D                     	;# 
  5037  008E                     	;# 
  5038  008E                     	;# 
  5039  008F                     	;# 
  5040  0090                     	;# 
  5041  0090                     	;# 
  5042  0091                     	;# 
  5043  0093                     	;# 
  5044  0094                     	;# 
  5045  0095                     	;# 
  5046  0096                     	;# 
  5047  0097                     	;# 
  5048  0098                     	;# 
  5049  0099                     	;# 
  5050  009A                     	;# 
  5051  009B                     	;# 
  5052  009C                     	;# 
  5053  009D                     	;# 
  5054  009E                     	;# 
  5055  010C                     	;# 
  5056  010D                     	;# 
  5057  010E                     	;# 
  5058  010E                     	;# 
  5059  010F                     	;# 
  5060  0110                     	;# 
  5061  0110                     	;# 
  5062  0111                     	;# 
  5063  0112                     	;# 
  5064  0112                     	;# 
  5065  0113                     	;# 
  5066  0114                     	;# 
  5067  0114                     	;# 
  5068  0115                     	;# 
  5069  0116                     	;# 
  5070  0116                     	;# 
  5071  0117                     	;# 
  5072  0119                     	;# 
  5073  0119                     	;# 
  5074  0119                     	;# 
  5075  011A                     	;# 
  5076  011A                     	;# 
  5077  011A                     	;# 
  5078  011B                     	;# 
  5079  011B                     	;# 
  5080  011B                     	;# 
  5081  011B                     	;# 
  5082  011B                     	;# 
  5083  011C                     	;# 
  5084  011C                     	;# 
  5085  011C                     	;# 
  5086  011D                     	;# 
  5087  011D                     	;# 
  5088  011D                     	;# 
  5089  011E                     	;# 
  5090  011E                     	;# 
  5091  011E                     	;# 
  5092  011F                     	;# 
  5093  011F                     	;# 
  5094  011F                     	;# 
  5095  011F                     	;# 
  5096  011F                     	;# 
  5097  018C                     	;# 
  5098  018D                     	;# 
  5099  018E                     	;# 
  5100  018F                     	;# 
  5101  0190                     	;# 
  5102  0191                     	;# 
  5103  0192                     	;# 
  5104  0196                     	;# 
  5105  0197                     	;# 
  5106  0198                     	;# 
  5107  0199                     	;# 
  5108  019A                     	;# 
  5109  019B                     	;# 
  5110  019C                     	;# 
  5111  020C                     	;# 
  5112  020C                     	;# 
  5113  020D                     	;# 
  5114  020E                     	;# 
  5115  020F                     	;# 
  5116  020F                     	;# 
  5117  0210                     	;# 
  5118  0210                     	;# 
  5119  0211                     	;# 
  5120  0211                     	;# 
  5121  0212                     	;# 
  5122  0212                     	;# 
  5123  0213                     	;# 
  5124  0214                     	;# 
  5125  0215                     	;# 
  5126  0215                     	;# 
  5127  0216                     	;# 
  5128  0216                     	;# 
  5129  0217                     	;# 
  5130  0217                     	;# 
  5131  0218                     	;# 
  5132  0218                     	;# 
  5133  0219                     	;# 
  5134  021A                     	;# 
  5135  021B                     	;# 
  5136  021B                     	;# 
  5137  021C                     	;# 
  5138  021C                     	;# 
  5139  021D                     	;# 
  5140  021D                     	;# 
  5141  021E                     	;# 
  5142  021F                     	;# 
  5143  028C                     	;# 
  5144  028C                     	;# 
  5145  028D                     	;# 
  5146  028D                     	;# 
  5147  028E                     	;# 
  5148  028F                     	;# 
  5149  0290                     	;# 
  5150  0290                     	;# 
  5151  0291                     	;# 
  5152  0292                     	;# 
  5153  0292                     	;# 
  5154  0293                     	;# 
  5155  0293                     	;# 
  5156  0294                     	;# 
  5157  0295                     	;# 
  5158  0296                     	;# 
  5159  0296                     	;# 
  5160  0297                     	;# 
  5161  0298                     	;# 
  5162  0298                     	;# 
  5163  0299                     	;# 
  5164  0299                     	;# 
  5165  029A                     	;# 
  5166  029B                     	;# 
  5167  029C                     	;# 
  5168  029C                     	;# 
  5169  029D                     	;# 
  5170  030C                     	;# 
  5171  030C                     	;# 
  5172  030D                     	;# 
  5173  030E                     	;# 
  5174  030F                     	;# 
  5175  0310                     	;# 
  5176  0310                     	;# 
  5177  0311                     	;# 
  5178  0312                     	;# 
  5179  0313                     	;# 
  5180  0314                     	;# 
  5181  0314                     	;# 
  5182  0315                     	;# 
  5183  0316                     	;# 
  5184  0317                     	;# 
  5185  0318                     	;# 
  5186  0318                     	;# 
  5187  0319                     	;# 
  5188  031A                     	;# 
  5189  031B                     	;# 
  5190  031C                     	;# 
  5191  031C                     	;# 
  5192  031D                     	;# 
  5193  031E                     	;# 
  5194  031F                     	;# 
  5195  038C                     	;# 
  5196  038D                     	;# 
  5197  038E                     	;# 
  5198  0390                     	;# 
  5199  0391                     	;# 
  5200  0392                     	;# 
  5201  040C                     	;# 
  5202  040D                     	;# 
  5203  040E                     	;# 
  5204  040F                     	;# 
  5205  0410                     	;# 
  5206  0411                     	;# 
  5207  0416                     	;# 
  5208  0416                     	;# 
  5209  0417                     	;# 
  5210  0418                     	;# 
  5211  0418                     	;# 
  5212  0419                     	;# 
  5213  041A                     	;# 
  5214  041A                     	;# 
  5215  041B                     	;# 
  5216  041C                     	;# 
  5217  041C                     	;# 
  5218  041D                     	;# 
  5219  041E                     	;# 
  5220  041F                     	;# 
  5221  048C                     	;# 
  5222  048C                     	;# 
  5223  048D                     	;# 
  5224  048E                     	;# 
  5225  048F                     	;# 
  5226  048F                     	;# 
  5227  0490                     	;# 
  5228  0491                     	;# 
  5229  0492                     	;# 
  5230  0492                     	;# 
  5231  0493                     	;# 
  5232  0494                     	;# 
  5233  0495                     	;# 
  5234  0495                     	;# 
  5235  0496                     	;# 
  5236  0497                     	;# 
  5237  0498                     	;# 
  5238  0499                     	;# 
  5239  049A                     	;# 
  5240  049B                     	;# 
  5241  049C                     	;# 
  5242  049D                     	;# 
  5243  050C                     	;# 
  5244  050C                     	;# 
  5245  050D                     	;# 
  5246  050E                     	;# 
  5247  050F                     	;# 
  5248  050F                     	;# 
  5249  0510                     	;# 
  5250  0511                     	;# 
  5251  0512                     	;# 
  5252  0512                     	;# 
  5253  0513                     	;# 
  5254  0514                     	;# 
  5255  0515                     	;# 
  5256  0515                     	;# 
  5257  0516                     	;# 
  5258  0517                     	;# 
  5259  0518                     	;# 
  5260  0519                     	;# 
  5261  051A                     	;# 
  5262  051B                     	;# 
  5263  051C                     	;# 
  5264  051D                     	;# 
  5265  058C                     	;# 
  5266  058C                     	;# 
  5267  058D                     	;# 
  5268  058E                     	;# 
  5269  058F                     	;# 
  5270  058F                     	;# 
  5271  0590                     	;# 
  5272  0591                     	;# 
  5273  0592                     	;# 
  5274  0593                     	;# 
  5275  060C                     	;# 
  5276  060D                     	;# 
  5277  060E                     	;# 
  5278  060F                     	;# 
  5279  0610                     	;# 
  5280  0611                     	;# 
  5281  0612                     	;# 
  5282  0613                     	;# 
  5283  0614                     	;# 
  5284  0616                     	;# 
  5285  0617                     	;# 
  5286  0618                     	;# 
  5287  0619                     	;# 
  5288  061A                     	;# 
  5289  061B                     	;# 
  5290  061C                     	;# 
  5291  061D                     	;# 
  5292  061E                     	;# 
  5293  068C                     	;# 
  5294  068D                     	;# 
  5295  068E                     	;# 
  5296  068F                     	;# 
  5297  0690                     	;# 
  5298  0691                     	;# 
  5299  0692                     	;# 
  5300  0693                     	;# 
  5301  0694                     	;# 
  5302  070C                     	;# 
  5303  070D                     	;# 
  5304  070E                     	;# 
  5305  070F                     	;# 
  5306  0710                     	;# 
  5307  0711                     	;# 
  5308  0712                     	;# 
  5309  0713                     	;# 
  5310  0714                     	;# 
  5311  0716                     	;# 
  5312  0717                     	;# 
  5313  0718                     	;# 
  5314  0719                     	;# 
  5315  071A                     	;# 
  5316  071B                     	;# 
  5317  071C                     	;# 
  5318  071D                     	;# 
  5319  071E                     	;# 
  5320  0796                     	;# 
  5321  0797                     	;# 
  5322  0798                     	;# 
  5323  0799                     	;# 
  5324  079A                     	;# 
  5325  079B                     	;# 
  5326  080C                     	;# 
  5327  080D                     	;# 
  5328  080E                     	;# 
  5329  080F                     	;# 
  5330  0810                     	;# 
  5331  0811                     	;# 
  5332  0812                     	;# 
  5333  0813                     	;# 
  5334  0814                     	;# 
  5335  081A                     	;# 
  5336  081B                     	;# 
  5337  081C                     	;# 
  5338  081D                     	;# 
  5339  081E                     	;# 
  5340  081F                     	;# 
  5341  088C                     	;# 
  5342  088D                     	;# 
  5343  088E                     	;# 
  5344  088F                     	;# 
  5345  0890                     	;# 
  5346  0891                     	;# 
  5347  0892                     	;# 
  5348  0893                     	;# 
  5349  0895                     	;# 
  5350  0896                     	;# 
  5351  0897                     	;# 
  5352  0898                     	;# 
  5353  0899                     	;# 
  5354  089A                     	;# 
  5355  089B                     	;# 
  5356  090C                     	;# 
  5357  090E                     	;# 
  5358  090F                     	;# 
  5359  091F                     	;# 
  5360  091F                     	;# 
  5361  098F                     	;# 
  5362  098F                     	;# 
  5363  0990                     	;# 
  5364  0991                     	;# 
  5365  0992                     	;# 
  5366  0993                     	;# 
  5367  0994                     	;# 
  5368  0995                     	;# 
  5369  0996                     	;# 
  5370  0997                     	;# 
  5371  0E0F                     	;# 
  5372  0E10                     	;# 
  5373  0E11                     	;# 
  5374  0E12                     	;# 
  5375  0E13                     	;# 
  5376  0E14                     	;# 
  5377  0E15                     	;# 
  5378  0E16                     	;# 
  5379  0E17                     	;# 
  5380  0E18                     	;# 
  5381  0E19                     	;# 
  5382  0E1A                     	;# 
  5383  0E1B                     	;# 
  5384  0E1C                     	;# 
  5385  0E1D                     	;# 
  5386  0E1E                     	;# 
  5387  0E1F                     	;# 
  5388  0E20                     	;# 
  5389  0E21                     	;# 
  5390  0E22                     	;# 
  5391  0E23                     	;# 
  5392  0E24                     	;# 
  5393  0E25                     	;# 
  5394  0E26                     	;# 
  5395  0E27                     	;# 
  5396  0E28                     	;# 
  5397  0E29                     	;# 
  5398  0E2A                     	;# 
  5399  0E2B                     	;# 
  5400  0E2C                     	;# 
  5401  0E2D                     	;# 
  5402  0E2E                     	;# 
  5403  0E2F                     	;# 
  5404  0E30                     	;# 
  5405  0E31                     	;# 
  5406  0E32                     	;# 
  5407  0E33                     	;# 
  5408  0E34                     	;# 
  5409  0E35                     	;# 
  5410  0E36                     	;# 
  5411  0E37                     	;# 
  5412  0E8F                     	;# 
  5413  0E90                     	;# 
  5414  0E91                     	;# 
  5415  0E92                     	;# 
  5416  0E93                     	;# 
  5417  0E94                     	;# 
  5418  0E95                     	;# 
  5419  0E96                     	;# 
  5420  0E97                     	;# 
  5421  0E9C                     	;# 
  5422  0E9D                     	;# 
  5423  0E9E                     	;# 
  5424  0EA1                     	;# 
  5425  0EA2                     	;# 
  5426  0EA3                     	;# 
  5427  0EA4                     	;# 
  5428  0EA5                     	;# 
  5429  0EA9                     	;# 
  5430  0EAA                     	;# 
  5431  0EAB                     	;# 
  5432  0EAC                     	;# 
  5433  0EB1                     	;# 
  5434  0EB2                     	;# 
  5435  0EB3                     	;# 
  5436  0EB8                     	;# 
  5437  0EB9                     	;# 
  5438  0EBA                     	;# 
  5439  0EBB                     	;# 
  5440  0EBC                     	;# 
  5441  0EBD                     	;# 
  5442  0EBE                     	;# 
  5443  0EC3                     	;# 
  5444  0EC5                     	;# 
  5445  0EC6                     	;# 
  5446  0EC7                     	;# 
  5447  0EC8                     	;# 
  5448  0EC9                     	;# 
  5449  0ECA                     	;# 
  5450  0ECB                     	;# 
  5451  0ECC                     	;# 
  5452  0F10                     	;# 
  5453  0F11                     	;# 
  5454  0F12                     	;# 
  5455  0F13                     	;# 
  5456  0F14                     	;# 
  5457  0F15                     	;# 
  5458  0F16                     	;# 
  5459  0F17                     	;# 
  5460  0F18                     	;# 
  5461  0F19                     	;# 
  5462  0F1A                     	;# 
  5463  0F1B                     	;# 
  5464  0F1C                     	;# 
  5465  0F1D                     	;# 
  5466  0F1E                     	;# 
  5467  0F1F                     	;# 
  5468  0F20                     	;# 
  5469  0F21                     	;# 
  5470  0F22                     	;# 
  5471  0F23                     	;# 
  5472  0F24                     	;# 
  5473  0F25                     	;# 
  5474  0F26                     	;# 
  5475  0F27                     	;# 
  5476  0F28                     	;# 
  5477  0F29                     	;# 
  5478  0F2A                     	;# 
  5479  0F2B                     	;# 
  5480  0F2C                     	;# 
  5481  0F2D                     	;# 
  5482  0F2E                     	;# 
  5483  0F2F                     	;# 
  5484  0F30                     	;# 
  5485  0F31                     	;# 
  5486  0F32                     	;# 
  5487  0F38                     	;# 
  5488  0F39                     	;# 
  5489  0F3A                     	;# 
  5490  0F3B                     	;# 
  5491  0F3C                     	;# 
  5492  0F3D                     	;# 
  5493  0F3E                     	;# 
  5494  0F3F                     	;# 
  5495  0F40                     	;# 
  5496  0F41                     	;# 
  5497  0F43                     	;# 
  5498  0F44                     	;# 
  5499  0F45                     	;# 
  5500  0F46                     	;# 
  5501  0F47                     	;# 
  5502  0F48                     	;# 
  5503  0F49                     	;# 
  5504  0F4A                     	;# 
  5505  0F4B                     	;# 
  5506  0F4C                     	;# 
  5507  0F4E                     	;# 
  5508  0F4F                     	;# 
  5509  0F50                     	;# 
  5510  0F51                     	;# 
  5511  0F52                     	;# 
  5512  0F53                     	;# 
  5513  0F54                     	;# 
  5514  0F55                     	;# 
  5515  0F56                     	;# 
  5516  0F57                     	;# 
  5517  0F59                     	;# 
  5518  0F5A                     	;# 
  5519  0F5B                     	;# 
  5520  0F5C                     	;# 
  5521  0F5D                     	;# 
  5522  0F61                     	;# 
  5523  0F62                     	;# 
  5524  0F64                     	;# 
  5525  0F65                     	;# 
  5526  0F66                     	;# 
  5527  0F67                     	;# 
  5528  0F68                     	;# 
  5529  0F69                     	;# 
  5530  0F6A                     	;# 
  5531  0F6B                     	;# 
  5532  0F6C                     	;# 
  5533  0F6D                     	;# 
  5534  0FE4                     	;# 
  5535  0FE5                     	;# 
  5536  0FE6                     	;# 
  5537  0FE7                     	;# 
  5538  0FE8                     	;# 
  5539  0FE9                     	;# 
  5540  0FEA                     	;# 
  5541  0FEB                     	;# 
  5542  0FED                     	;# 
  5543  0FEE                     	;# 
  5544  0FEF                     	;# 
  5545  0000                     	;# 
  5546  0001                     	;# 
  5547  0002                     	;# 
  5548  0003                     	;# 
  5549  0004                     	;# 
  5550  0005                     	;# 
  5551  0006                     	;# 
  5552  0007                     	;# 
  5553  0008                     	;# 
  5554  0009                     	;# 
  5555  000A                     	;# 
  5556  000B                     	;# 
  5557  000C                     	;# 
  5558  000D                     	;# 
  5559  000E                     	;# 
  5560  000F                     	;# 
  5561  0010                     	;# 
  5562  0011                     	;# 
  5563  0012                     	;# 
  5564  0013                     	;# 
  5565  0014                     	;# 
  5566  0015                     	;# 
  5567  0016                     	;# 
  5568  0017                     	;# 
  5569  0018                     	;# 
  5570  0019                     	;# 
  5571  001A                     	;# 
  5572  001C                     	;# 
  5573  001C                     	;# 
  5574  001D                     	;# 
  5575  001D                     	;# 
  5576  001E                     	;# 
  5577  001F                     	;# 
  5578  008C                     	;# 
  5579  008C                     	;# 
  5580  008D                     	;# 
  5581  008E                     	;# 
  5582  008E                     	;# 
  5583  008F                     	;# 
  5584  0090                     	;# 
  5585  0090                     	;# 
  5586  0091                     	;# 
  5587  0093                     	;# 
  5588  0094                     	;# 
  5589  0095                     	;# 
  5590  0096                     	;# 
  5591  0097                     	;# 
  5592  0098                     	;# 
  5593  0099                     	;# 
  5594  009A                     	;# 
  5595  009B                     	;# 
  5596  009C                     	;# 
  5597  009D                     	;# 
  5598  009E                     	;# 
  5599  010C                     	;# 
  5600  010D                     	;# 
  5601  010E                     	;# 
  5602  010E                     	;# 
  5603  010F                     	;# 
  5604  0110                     	;# 
  5605  0110                     	;# 
  5606  0111                     	;# 
  5607  0112                     	;# 
  5608  0112                     	;# 
  5609  0113                     	;# 
  5610  0114                     	;# 
  5611  0114                     	;# 
  5612  0115                     	;# 
  5613  0116                     	;# 
  5614  0116                     	;# 
  5615  0117                     	;# 
  5616  0119                     	;# 
  5617  0119                     	;# 
  5618  0119                     	;# 
  5619  011A                     	;# 
  5620  011A                     	;# 
  5621  011A                     	;# 
  5622  011B                     	;# 
  5623  011B                     	;# 
  5624  011B                     	;# 
  5625  011B                     	;# 
  5626  011B                     	;# 
  5627  011C                     	;# 
  5628  011C                     	;# 
  5629  011C                     	;# 
  5630  011D                     	;# 
  5631  011D                     	;# 
  5632  011D                     	;# 
  5633  011E                     	;# 
  5634  011E                     	;# 
  5635  011E                     	;# 
  5636  011F                     	;# 
  5637  011F                     	;# 
  5638  011F                     	;# 
  5639  011F                     	;# 
  5640  011F                     	;# 
  5641  018C                     	;# 
  5642  018D                     	;# 
  5643  018E                     	;# 
  5644  018F                     	;# 
  5645  0190                     	;# 
  5646  0191                     	;# 
  5647  0192                     	;# 
  5648  0196                     	;# 
  5649  0197                     	;# 
  5650  0198                     	;# 
  5651  0199                     	;# 
  5652  019A                     	;# 
  5653  019B                     	;# 
  5654  019C                     	;# 
  5655  020C                     	;# 
  5656  020C                     	;# 
  5657  020D                     	;# 
  5658  020E                     	;# 
  5659  020F                     	;# 
  5660  020F                     	;# 
  5661  0210                     	;# 
  5662  0210                     	;# 
  5663  0211                     	;# 
  5664  0211                     	;# 
  5665  0212                     	;# 
  5666  0212                     	;# 
  5667  0213                     	;# 
  5668  0214                     	;# 
  5669  0215                     	;# 
  5670  0215                     	;# 
  5671  0216                     	;# 
  5672  0216                     	;# 
  5673  0217                     	;# 
  5674  0217                     	;# 
  5675  0218                     	;# 
  5676  0218                     	;# 
  5677  0219                     	;# 
  5678  021A                     	;# 
  5679  021B                     	;# 
  5680  021B                     	;# 
  5681  021C                     	;# 
  5682  021C                     	;# 
  5683  021D                     	;# 
  5684  021D                     	;# 
  5685  021E                     	;# 
  5686  021F                     	;# 
  5687  028C                     	;# 
  5688  028C                     	;# 
  5689  028D                     	;# 
  5690  028D                     	;# 
  5691  028E                     	;# 
  5692  028F                     	;# 
  5693  0290                     	;# 
  5694  0290                     	;# 
  5695  0291                     	;# 
  5696  0292                     	;# 
  5697  0292                     	;# 
  5698  0293                     	;# 
  5699  0293                     	;# 
  5700  0294                     	;# 
  5701  0295                     	;# 
  5702  0296                     	;# 
  5703  0296                     	;# 
  5704  0297                     	;# 
  5705  0298                     	;# 
  5706  0298                     	;# 
  5707  0299                     	;# 
  5708  0299                     	;# 
  5709  029A                     	;# 
  5710  029B                     	;# 
  5711  029C                     	;# 
  5712  029C                     	;# 
  5713  029D                     	;# 
  5714  030C                     	;# 
  5715  030C                     	;# 
  5716  030D                     	;# 
  5717  030E                     	;# 
  5718  030F                     	;# 
  5719  0310                     	;# 
  5720  0310                     	;# 
  5721  0311                     	;# 
  5722  0312                     	;# 
  5723  0313                     	;# 
  5724  0314                     	;# 
  5725  0314                     	;# 
  5726  0315                     	;# 
  5727  0316                     	;# 
  5728  0317                     	;# 
  5729  0318                     	;# 
  5730  0318                     	;# 
  5731  0319                     	;# 
  5732  031A                     	;# 
  5733  031B                     	;# 
  5734  031C                     	;# 
  5735  031C                     	;# 
  5736  031D                     	;# 
  5737  031E                     	;# 
  5738  031F                     	;# 
  5739  038C                     	;# 
  5740  038D                     	;# 
  5741  038E                     	;# 
  5742  0390                     	;# 
  5743  0391                     	;# 
  5744  0392                     	;# 
  5745  040C                     	;# 
  5746  040D                     	;# 
  5747  040E                     	;# 
  5748  040F                     	;# 
  5749  0410                     	;# 
  5750  0411                     	;# 
  5751  0416                     	;# 
  5752  0416                     	;# 
  5753  0417                     	;# 
  5754  0418                     	;# 
  5755  0418                     	;# 
  5756  0419                     	;# 
  5757  041A                     	;# 
  5758  041A                     	;# 
  5759  041B                     	;# 
  5760  041C                     	;# 
  5761  041C                     	;# 
  5762  041D                     	;# 
  5763  041E                     	;# 
  5764  041F                     	;# 
  5765  048C                     	;# 
  5766  048C                     	;# 
  5767  048D                     	;# 
  5768  048E                     	;# 
  5769  048F                     	;# 
  5770  048F                     	;# 
  5771  0490                     	;# 
  5772  0491                     	;# 
  5773  0492                     	;# 
  5774  0492                     	;# 
  5775  0493                     	;# 
  5776  0494                     	;# 
  5777  0495                     	;# 
  5778  0495                     	;# 
  5779  0496                     	;# 
  5780  0497                     	;# 
  5781  0498                     	;# 
  5782  0499                     	;# 
  5783  049A                     	;# 
  5784  049B                     	;# 
  5785  049C                     	;# 
  5786  049D                     	;# 
  5787  050C                     	;# 
  5788  050C                     	;# 
  5789  050D                     	;# 
  5790  050E                     	;# 
  5791  050F                     	;# 
  5792  050F                     	;# 
  5793  0510                     	;# 
  5794  0511                     	;# 
  5795  0512                     	;# 
  5796  0512                     	;# 
  5797  0513                     	;# 
  5798  0514                     	;# 
  5799  0515                     	;# 
  5800  0515                     	;# 
  5801  0516                     	;# 
  5802  0517                     	;# 
  5803  0518                     	;# 
  5804  0519                     	;# 
  5805  051A                     	;# 
  5806  051B                     	;# 
  5807  051C                     	;# 
  5808  051D                     	;# 
  5809  058C                     	;# 
  5810  058C                     	;# 
  5811  058D                     	;# 
  5812  058E                     	;# 
  5813  058F                     	;# 
  5814  058F                     	;# 
  5815  0590                     	;# 
  5816  0591                     	;# 
  5817  0592                     	;# 
  5818  0593                     	;# 
  5819  060C                     	;# 
  5820  060D                     	;# 
  5821  060E                     	;# 
  5822  060F                     	;# 
  5823  0610                     	;# 
  5824  0611                     	;# 
  5825  0612                     	;# 
  5826  0613                     	;# 
  5827  0614                     	;# 
  5828  0616                     	;# 
  5829  0617                     	;# 
  5830  0618                     	;# 
  5831  0619                     	;# 
  5832  061A                     	;# 
  5833  061B                     	;# 
  5834  061C                     	;# 
  5835  061D                     	;# 
  5836  061E                     	;# 
  5837  068C                     	;# 
  5838  068D                     	;# 
  5839  068E                     	;# 
  5840  068F                     	;# 
  5841  0690                     	;# 
  5842  0691                     	;# 
  5843  0692                     	;# 
  5844  0693                     	;# 
  5845  0694                     	;# 
  5846  070C                     	;# 
  5847  070D                     	;# 
  5848  070E                     	;# 
  5849  070F                     	;# 
  5850  0710                     	;# 
  5851  0711                     	;# 
  5852  0712                     	;# 
  5853  0713                     	;# 
  5854  0714                     	;# 
  5855  0716                     	;# 
  5856  0717                     	;# 
  5857  0718                     	;# 
  5858  0719                     	;# 
  5859  071A                     	;# 
  5860  071B                     	;# 
  5861  071C                     	;# 
  5862  071D                     	;# 
  5863  071E                     	;# 
  5864  0796                     	;# 
  5865  0797                     	;# 
  5866  0798                     	;# 
  5867  0799                     	;# 
  5868  079A                     	;# 
  5869  079B                     	;# 
  5870  080C                     	;# 
  5871  080D                     	;# 
  5872  080E                     	;# 
  5873  080F                     	;# 
  5874  0810                     	;# 
  5875  0811                     	;# 
  5876  0812                     	;# 
  5877  0813                     	;# 
  5878  0814                     	;# 
  5879  081A                     	;# 
  5880  081B                     	;# 
  5881  081C                     	;# 
  5882  081D                     	;# 
  5883  081E                     	;# 
  5884  081F                     	;# 
  5885  088C                     	;# 
  5886  088D                     	;# 
  5887  088E                     	;# 
  5888  088F                     	;# 
  5889  0890                     	;# 
  5890  0891                     	;# 
  5891  0892                     	;# 
  5892  0893                     	;# 
  5893  0895                     	;# 
  5894  0896                     	;# 
  5895  0897                     	;# 
  5896  0898                     	;# 
  5897  0899                     	;# 
  5898  089A                     	;# 
  5899  089B                     	;# 
  5900  090C                     	;# 
  5901  090E                     	;# 
  5902  090F                     	;# 
  5903  091F                     	;# 
  5904  091F                     	;# 
  5905  098F                     	;# 
  5906  098F                     	;# 
  5907  0990                     	;# 
  5908  0991                     	;# 
  5909  0992                     	;# 
  5910  0993                     	;# 
  5911  0994                     	;# 
  5912  0995                     	;# 
  5913  0996                     	;# 
  5914  0997                     	;# 
  5915  0E0F                     	;# 
  5916  0E10                     	;# 
  5917  0E11                     	;# 
  5918  0E12                     	;# 
  5919  0E13                     	;# 
  5920  0E14                     	;# 
  5921  0E15                     	;# 
  5922  0E16                     	;# 
  5923  0E17                     	;# 
  5924  0E18                     	;# 
  5925  0E19                     	;# 
  5926  0E1A                     	;# 
  5927  0E1B                     	;# 
  5928  0E1C                     	;# 
  5929  0E1D                     	;# 
  5930  0E1E                     	;# 
  5931  0E1F                     	;# 
  5932  0E20                     	;# 
  5933  0E21                     	;# 
  5934  0E22                     	;# 
  5935  0E23                     	;# 
  5936  0E24                     	;# 
  5937  0E25                     	;# 
  5938  0E26                     	;# 
  5939  0E27                     	;# 
  5940  0E28                     	;# 
  5941  0E29                     	;# 
  5942  0E2A                     	;# 
  5943  0E2B                     	;# 
  5944  0E2C                     	;# 
  5945  0E2D                     	;# 
  5946  0E2E                     	;# 
  5947  0E2F                     	;# 
  5948  0E30                     	;# 
  5949  0E31                     	;# 
  5950  0E32                     	;# 
  5951  0E33                     	;# 
  5952  0E34                     	;# 
  5953  0E35                     	;# 
  5954  0E36                     	;# 
  5955  0E37                     	;# 
  5956  0E8F                     	;# 
  5957  0E90                     	;# 
  5958  0E91                     	;# 
  5959  0E92                     	;# 
  5960  0E93                     	;# 
  5961  0E94                     	;# 
  5962  0E95                     	;# 
  5963  0E96                     	;# 
  5964  0E97                     	;# 
  5965  0E9C                     	;# 
  5966  0E9D                     	;# 
  5967  0E9E                     	;# 
  5968  0EA1                     	;# 
  5969  0EA2                     	;# 
  5970  0EA3                     	;# 
  5971  0EA4                     	;# 
  5972  0EA5                     	;# 
  5973  0EA9                     	;# 
  5974  0EAA                     	;# 
  5975  0EAB                     	;# 
  5976  0EAC                     	;# 
  5977  0EB1                     	;# 
  5978  0EB2                     	;# 
  5979  0EB3                     	;# 
  5980  0EB8                     	;# 
  5981  0EB9                     	;# 
  5982  0EBA                     	;# 
  5983  0EBB                     	;# 
  5984  0EBC                     	;# 
  5985  0EBD                     	;# 
  5986  0EBE                     	;# 
  5987  0EC3                     	;# 
  5988  0EC5                     	;# 
  5989  0EC6                     	;# 
  5990  0EC7                     	;# 
  5991  0EC8                     	;# 
  5992  0EC9                     	;# 
  5993  0ECA                     	;# 
  5994  0ECB                     	;# 
  5995  0ECC                     	;# 
  5996  0F10                     	;# 
  5997  0F11                     	;# 
  5998  0F12                     	;# 
  5999  0F13                     	;# 
  6000  0F14                     	;# 
  6001  0F15                     	;# 
  6002  0F16                     	;# 
  6003  0F17                     	;# 
  6004  0F18                     	;# 
  6005  0F19                     	;# 
  6006  0F1A                     	;# 
  6007  0F1B                     	;# 
  6008  0F1C                     	;# 
  6009  0F1D                     	;# 
  6010  0F1E                     	;# 
  6011  0F1F                     	;# 
  6012  0F20                     	;# 
  6013  0F21                     	;# 
  6014  0F22                     	;# 
  6015  0F23                     	;# 
  6016  0F24                     	;# 
  6017  0F25                     	;# 
  6018  0F26                     	;# 
  6019  0F27                     	;# 
  6020  0F28                     	;# 
  6021  0F29                     	;# 
  6022  0F2A                     	;# 
  6023  0F2B                     	;# 
  6024  0F2C                     	;# 
  6025  0F2D                     	;# 
  6026  0F2E                     	;# 
  6027  0F2F                     	;# 
  6028  0F30                     	;# 
  6029  0F31                     	;# 
  6030  0F32                     	;# 
  6031  0F38                     	;# 
  6032  0F39                     	;# 
  6033  0F3A                     	;# 
  6034  0F3B                     	;# 
  6035  0F3C                     	;# 
  6036  0F3D                     	;# 
  6037  0F3E                     	;# 
  6038  0F3F                     	;# 
  6039  0F40                     	;# 
  6040  0F41                     	;# 
  6041  0F43                     	;# 
  6042  0F44                     	;# 
  6043  0F45                     	;# 
  6044  0F46                     	;# 
  6045  0F47                     	;# 
  6046  0F48                     	;# 
  6047  0F49                     	;# 
  6048  0F4A                     	;# 
  6049  0F4B                     	;# 
  6050  0F4C                     	;# 
  6051  0F4E                     	;# 
  6052  0F4F                     	;# 
  6053  0F50                     	;# 
  6054  0F51                     	;# 
  6055  0F52                     	;# 
  6056  0F53                     	;# 
  6057  0F54                     	;# 
  6058  0F55                     	;# 
  6059  0F56                     	;# 
  6060  0F57                     	;# 
  6061  0F59                     	;# 
  6062  0F5A                     	;# 
  6063  0F5B                     	;# 
  6064  0F5C                     	;# 
  6065  0F5D                     	;# 
  6066  0F61                     	;# 
  6067  0F62                     	;# 
  6068  0F64                     	;# 
  6069  0F65                     	;# 
  6070  0F66                     	;# 
  6071  0F67                     	;# 
  6072  0F68                     	;# 
  6073  0F69                     	;# 
  6074  0F6A                     	;# 
  6075  0F6B                     	;# 
  6076  0F6C                     	;# 
  6077  0F6D                     	;# 
  6078  0FE4                     	;# 
  6079  0FE5                     	;# 
  6080  0FE6                     	;# 
  6081  0FE7                     	;# 
  6082  0FE8                     	;# 
  6083  0FE9                     	;# 
  6084  0FEA                     	;# 
  6085  0FEB                     	;# 
  6086  0FED                     	;# 
  6087  0FEE                     	;# 
  6088  0FEF                     	;# 
  6089  0000                     	;# 
  6090  0001                     	;# 
  6091  0002                     	;# 
  6092  0003                     	;# 
  6093  0004                     	;# 
  6094  0005                     	;# 
  6095  0006                     	;# 
  6096  0007                     	;# 
  6097  0008                     	;# 
  6098  0009                     	;# 
  6099  000A                     	;# 
  6100  000B                     	;# 
  6101  000C                     	;# 
  6102  000D                     	;# 
  6103  000E                     	;# 
  6104  000F                     	;# 
  6105  0010                     	;# 
  6106  0011                     	;# 
  6107  0012                     	;# 
  6108  0013                     	;# 
  6109  0014                     	;# 
  6110  0015                     	;# 
  6111  0016                     	;# 
  6112  0017                     	;# 
  6113  0018                     	;# 
  6114  0019                     	;# 
  6115  001A                     	;# 
  6116  001C                     	;# 
  6117  001C                     	;# 
  6118  001D                     	;# 
  6119  001D                     	;# 
  6120  001E                     	;# 
  6121  001F                     	;# 
  6122  008C                     	;# 
  6123  008C                     	;# 
  6124  008D                     	;# 
  6125  008E                     	;# 
  6126  008E                     	;# 
  6127  008F                     	;# 
  6128  0090                     	;# 
  6129  0090                     	;# 
  6130  0091                     	;# 
  6131  0093                     	;# 
  6132  0094                     	;# 
  6133  0095                     	;# 
  6134  0096                     	;# 
  6135  0097                     	;# 
  6136  0098                     	;# 
  6137  0099                     	;# 
  6138  009A                     	;# 
  6139  009B                     	;# 
  6140  009C                     	;# 
  6141  009D                     	;# 
  6142  009E                     	;# 
  6143  010C                     	;# 
  6144  010D                     	;# 
  6145  010E                     	;# 
  6146  010E                     	;# 
  6147  010F                     	;# 
  6148  0110                     	;# 
  6149  0110                     	;# 
  6150  0111                     	;# 
  6151  0112                     	;# 
  6152  0112                     	;# 
  6153  0113                     	;# 
  6154  0114                     	;# 
  6155  0114                     	;# 
  6156  0115                     	;# 
  6157  0116                     	;# 
  6158  0116                     	;# 
  6159  0117                     	;# 
  6160  0119                     	;# 
  6161  0119                     	;# 
  6162  0119                     	;# 
  6163  011A                     	;# 
  6164  011A                     	;# 
  6165  011A                     	;# 
  6166  011B                     	;# 
  6167  011B                     	;# 
  6168  011B                     	;# 
  6169  011B                     	;# 
  6170  011B                     	;# 
  6171  011C                     	;# 
  6172  011C                     	;# 
  6173  011C                     	;# 
  6174  011D                     	;# 
  6175  011D                     	;# 
  6176  011D                     	;# 
  6177  011E                     	;# 
  6178  011E                     	;# 
  6179  011E                     	;# 
  6180  011F                     	;# 
  6181  011F                     	;# 
  6182  011F                     	;# 
  6183  011F                     	;# 
  6184  011F                     	;# 
  6185  018C                     	;# 
  6186  018D                     	;# 
  6187  018E                     	;# 
  6188  018F                     	;# 
  6189  0190                     	;# 
  6190  0191                     	;# 
  6191  0192                     	;# 
  6192  0196                     	;# 
  6193  0197                     	;# 
  6194  0198                     	;# 
  6195  0199                     	;# 
  6196  019A                     	;# 
  6197  019B                     	;# 
  6198  019C                     	;# 
  6199  020C                     	;# 
  6200  020C                     	;# 
  6201  020D                     	;# 
  6202  020E                     	;# 
  6203  020F                     	;# 
  6204  020F                     	;# 
  6205  0210                     	;# 
  6206  0210                     	;# 
  6207  0211                     	;# 
  6208  0211                     	;# 
  6209  0212                     	;# 
  6210  0212                     	;# 
  6211  0213                     	;# 
  6212  0214                     	;# 
  6213  0215                     	;# 
  6214  0215                     	;# 
  6215  0216                     	;# 
  6216  0216                     	;# 
  6217  0217                     	;# 
  6218  0217                     	;# 
  6219  0218                     	;# 
  6220  0218                     	;# 
  6221  0219                     	;# 
  6222  021A                     	;# 
  6223  021B                     	;# 
  6224  021B                     	;# 
  6225  021C                     	;# 
  6226  021C                     	;# 
  6227  021D                     	;# 
  6228  021D                     	;# 
  6229  021E                     	;# 
  6230  021F                     	;# 
  6231  028C                     	;# 
  6232  028C                     	;# 
  6233  028D                     	;# 
  6234  028D                     	;# 
  6235  028E                     	;# 
  6236  028F                     	;# 
  6237  0290                     	;# 
  6238  0290                     	;# 
  6239  0291                     	;# 
  6240  0292                     	;# 
  6241  0292                     	;# 
  6242  0293                     	;# 
  6243  0293                     	;# 
  6244  0294                     	;# 
  6245  0295                     	;# 
  6246  0296                     	;# 
  6247  0296                     	;# 
  6248  0297                     	;# 
  6249  0298                     	;# 
  6250  0298                     	;# 
  6251  0299                     	;# 
  6252  0299                     	;# 
  6253  029A                     	;# 
  6254  029B                     	;# 
  6255  029C                     	;# 
  6256  029C                     	;# 
  6257  029D                     	;# 
  6258  030C                     	;# 
  6259  030C                     	;# 
  6260  030D                     	;# 
  6261  030E                     	;# 
  6262  030F                     	;# 
  6263  0310                     	;# 
  6264  0310                     	;# 
  6265  0311                     	;# 
  6266  0312                     	;# 
  6267  0313                     	;# 
  6268  0314                     	;# 
  6269  0314                     	;# 
  6270  0315                     	;# 
  6271  0316                     	;# 
  6272  0317                     	;# 
  6273  0318                     	;# 
  6274  0318                     	;# 
  6275  0319                     	;# 
  6276  031A                     	;# 
  6277  031B                     	;# 
  6278  031C                     	;# 
  6279  031C                     	;# 
  6280  031D                     	;# 
  6281  031E                     	;# 
  6282  031F                     	;# 
  6283  038C                     	;# 
  6284  038D                     	;# 
  6285  038E                     	;# 
  6286  0390                     	;# 
  6287  0391                     	;# 
  6288  0392                     	;# 
  6289  040C                     	;# 
  6290  040D                     	;# 
  6291  040E                     	;# 
  6292  040F                     	;# 
  6293  0410                     	;# 
  6294  0411                     	;# 
  6295  0416                     	;# 
  6296  0416                     	;# 
  6297  0417                     	;# 
  6298  0418                     	;# 
  6299  0418                     	;# 
  6300  0419                     	;# 
  6301  041A                     	;# 
  6302  041A                     	;# 
  6303  041B                     	;# 
  6304  041C                     	;# 
  6305  041C                     	;# 
  6306  041D                     	;# 
  6307  041E                     	;# 
  6308  041F                     	;# 
  6309  048C                     	;# 
  6310  048C                     	;# 
  6311  048D                     	;# 
  6312  048E                     	;# 
  6313  048F                     	;# 
  6314  048F                     	;# 
  6315  0490                     	;# 
  6316  0491                     	;# 
  6317  0492                     	;# 
  6318  0492                     	;# 
  6319  0493                     	;# 
  6320  0494                     	;# 
  6321  0495                     	;# 
  6322  0495                     	;# 
  6323  0496                     	;# 
  6324  0497                     	;# 
  6325  0498                     	;# 
  6326  0499                     	;# 
  6327  049A                     	;# 
  6328  049B                     	;# 
  6329  049C                     	;# 
  6330  049D                     	;# 
  6331  050C                     	;# 
  6332  050C                     	;# 
  6333  050D                     	;# 
  6334  050E                     	;# 
  6335  050F                     	;# 
  6336  050F                     	;# 
  6337  0510                     	;# 
  6338  0511                     	;# 
  6339  0512                     	;# 
  6340  0512                     	;# 
  6341  0513                     	;# 
  6342  0514                     	;# 
  6343  0515                     	;# 
  6344  0515                     	;# 
  6345  0516                     	;# 
  6346  0517                     	;# 
  6347  0518                     	;# 
  6348  0519                     	;# 
  6349  051A                     	;# 
  6350  051B                     	;# 
  6351  051C                     	;# 
  6352  051D                     	;# 
  6353  058C                     	;# 
  6354  058C                     	;# 
  6355  058D                     	;# 
  6356  058E                     	;# 
  6357  058F                     	;# 
  6358  058F                     	;# 
  6359  0590                     	;# 
  6360  0591                     	;# 
  6361  0592                     	;# 
  6362  0593                     	;# 
  6363  060C                     	;# 
  6364  060D                     	;# 
  6365  060E                     	;# 
  6366  060F                     	;# 
  6367  0610                     	;# 
  6368  0611                     	;# 
  6369  0612                     	;# 
  6370  0613                     	;# 
  6371  0614                     	;# 
  6372  0616                     	;# 
  6373  0617                     	;# 
  6374  0618                     	;# 
  6375  0619                     	;# 
  6376  061A                     	;# 
  6377  061B                     	;# 
  6378  061C                     	;# 
  6379  061D                     	;# 
  6380  061E                     	;# 
  6381  068C                     	;# 
  6382  068D                     	;# 
  6383  068E                     	;# 
  6384  068F                     	;# 
  6385  0690                     	;# 
  6386  0691                     	;# 
  6387  0692                     	;# 
  6388  0693                     	;# 
  6389  0694                     	;# 
  6390  070C                     	;# 
  6391  070D                     	;# 
  6392  070E                     	;# 
  6393  070F                     	;# 
  6394  0710                     	;# 
  6395  0711                     	;# 
  6396  0712                     	;# 
  6397  0713                     	;# 
  6398  0714                     	;# 
  6399  0716                     	;# 
  6400  0717                     	;# 
  6401  0718                     	;# 
  6402  0719                     	;# 
  6403  071A                     	;# 
  6404  071B                     	;# 
  6405  071C                     	;# 
  6406  071D                     	;# 
  6407  071E                     	;# 
  6408  0796                     	;# 
  6409  0797                     	;# 
  6410  0798                     	;# 
  6411  0799                     	;# 
  6412  079A                     	;# 
  6413  079B                     	;# 
  6414  080C                     	;# 
  6415  080D                     	;# 
  6416  080E                     	;# 
  6417  080F                     	;# 
  6418  0810                     	;# 
  6419  0811                     	;# 
  6420  0812                     	;# 
  6421  0813                     	;# 
  6422  0814                     	;# 
  6423  081A                     	;# 
  6424  081B                     	;# 
  6425  081C                     	;# 
  6426  081D                     	;# 
  6427  081E                     	;# 
  6428  081F                     	;# 
  6429  088C                     	;# 
  6430  088D                     	;# 
  6431  088E                     	;# 
  6432  088F                     	;# 
  6433  0890                     	;# 
  6434  0891                     	;# 
  6435  0892                     	;# 
  6436  0893                     	;# 
  6437  0895                     	;# 
  6438  0896                     	;# 
  6439  0897                     	;# 
  6440  0898                     	;# 
  6441  0899                     	;# 
  6442  089A                     	;# 
  6443  089B                     	;# 
  6444  090C                     	;# 
  6445  090E                     	;# 
  6446  090F                     	;# 
  6447  091F                     	;# 
  6448  091F                     	;# 
  6449  098F                     	;# 
  6450  098F                     	;# 
  6451  0990                     	;# 
  6452  0991                     	;# 
  6453  0992                     	;# 
  6454  0993                     	;# 
  6455  0994                     	;# 
  6456  0995                     	;# 
  6457  0996                     	;# 
  6458  0997                     	;# 
  6459  0E0F                     	;# 
  6460  0E10                     	;# 
  6461  0E11                     	;# 
  6462  0E12                     	;# 
  6463  0E13                     	;# 
  6464  0E14                     	;# 
  6465  0E15                     	;# 
  6466  0E16                     	;# 
  6467  0E17                     	;# 
  6468  0E18                     	;# 
  6469  0E19                     	;# 
  6470  0E1A                     	;# 
  6471  0E1B                     	;# 
  6472  0E1C                     	;# 
  6473  0E1D                     	;# 
  6474  0E1E                     	;# 
  6475  0E1F                     	;# 
  6476  0E20                     	;# 
  6477  0E21                     	;# 
  6478  0E22                     	;# 
  6479  0E23                     	;# 
  6480  0E24                     	;# 
  6481  0E25                     	;# 
  6482  0E26                     	;# 
  6483  0E27                     	;# 
  6484  0E28                     	;# 
  6485  0E29                     	;# 
  6486  0E2A                     	;# 
  6487  0E2B                     	;# 
  6488  0E2C                     	;# 
  6489  0E2D                     	;# 
  6490  0E2E                     	;# 
  6491  0E2F                     	;# 
  6492  0E30                     	;# 
  6493  0E31                     	;# 
  6494  0E32                     	;# 
  6495  0E33                     	;# 
  6496  0E34                     	;# 
  6497  0E35                     	;# 
  6498  0E36                     	;# 
  6499  0E37                     	;# 
  6500  0E8F                     	;# 
  6501  0E90                     	;# 
  6502  0E91                     	;# 
  6503  0E92                     	;# 
  6504  0E93                     	;# 
  6505  0E94                     	;# 
  6506  0E95                     	;# 
  6507  0E96                     	;# 
  6508  0E97                     	;# 
  6509  0E9C                     	;# 
  6510  0E9D                     	;# 
  6511  0E9E                     	;# 
  6512  0EA1                     	;# 
  6513  0EA2                     	;# 
  6514  0EA3                     	;# 
  6515  0EA4                     	;# 
  6516  0EA5                     	;# 
  6517  0EA9                     	;# 
  6518  0EAA                     	;# 
  6519  0EAB                     	;# 
  6520  0EAC                     	;# 
  6521  0EB1                     	;# 
  6522  0EB2                     	;# 
  6523  0EB3                     	;# 
  6524  0EB8                     	;# 
  6525  0EB9                     	;# 
  6526  0EBA                     	;# 
  6527  0EBB                     	;# 
  6528  0EBC                     	;# 
  6529  0EBD                     	;# 
  6530  0EBE                     	;# 
  6531  0EC3                     	;# 
  6532  0EC5                     	;# 
  6533  0EC6                     	;# 
  6534  0EC7                     	;# 
  6535  0EC8                     	;# 
  6536  0EC9                     	;# 
  6537  0ECA                     	;# 
  6538  0ECB                     	;# 
  6539  0ECC                     	;# 
  6540  0F10                     	;# 
  6541  0F11                     	;# 
  6542  0F12                     	;# 
  6543  0F13                     	;# 
  6544  0F14                     	;# 
  6545  0F15                     	;# 
  6546  0F16                     	;# 
  6547  0F17                     	;# 
  6548  0F18                     	;# 
  6549  0F19                     	;# 
  6550  0F1A                     	;# 
  6551  0F1B                     	;# 
  6552  0F1C                     	;# 
  6553  0F1D                     	;# 
  6554  0F1E                     	;# 
  6555  0F1F                     	;# 
  6556  0F20                     	;# 
  6557  0F21                     	;# 
  6558  0F22                     	;# 
  6559  0F23                     	;# 
  6560  0F24                     	;# 
  6561  0F25                     	;# 
  6562  0F26                     	;# 
  6563  0F27                     	;# 
  6564  0F28                     	;# 
  6565  0F29                     	;# 
  6566  0F2A                     	;# 
  6567  0F2B                     	;# 
  6568  0F2C                     	;# 
  6569  0F2D                     	;# 
  6570  0F2E                     	;# 
  6571  0F2F                     	;# 
  6572  0F30                     	;# 
  6573  0F31                     	;# 
  6574  0F32                     	;# 
  6575  0F38                     	;# 
  6576  0F39                     	;# 
  6577  0F3A                     	;# 
  6578  0F3B                     	;# 
  6579  0F3C                     	;# 
  6580  0F3D                     	;# 
  6581  0F3E                     	;# 
  6582  0F3F                     	;# 
  6583  0F40                     	;# 
  6584  0F41                     	;# 
  6585  0F43                     	;# 
  6586  0F44                     	;# 
  6587  0F45                     	;# 
  6588  0F46                     	;# 
  6589  0F47                     	;# 
  6590  0F48                     	;# 
  6591  0F49                     	;# 
  6592  0F4A                     	;# 
  6593  0F4B                     	;# 
  6594  0F4C                     	;# 
  6595  0F4E                     	;# 
  6596  0F4F                     	;# 
  6597  0F50                     	;# 
  6598  0F51                     	;# 
  6599  0F52                     	;# 
  6600  0F53                     	;# 
  6601  0F54                     	;# 
  6602  0F55                     	;# 
  6603  0F56                     	;# 
  6604  0F57                     	;# 
  6605  0F59                     	;# 
  6606  0F5A                     	;# 
  6607  0F5B                     	;# 
  6608  0F5C                     	;# 
  6609  0F5D                     	;# 
  6610  0F61                     	;# 
  6611  0F62                     	;# 
  6612  0F64                     	;# 
  6613  0F65                     	;# 
  6614  0F66                     	;# 
  6615  0F67                     	;# 
  6616  0F68                     	;# 
  6617  0F69                     	;# 
  6618  0F6A                     	;# 
  6619  0F6B                     	;# 
  6620  0F6C                     	;# 
  6621  0F6D                     	;# 
  6622  0FE4                     	;# 
  6623  0FE5                     	;# 
  6624  0FE6                     	;# 
  6625  0FE7                     	;# 
  6626  0FE8                     	;# 
  6627  0FE9                     	;# 
  6628  0FEA                     	;# 
  6629  0FEB                     	;# 
  6630  0FED                     	;# 
  6631  0FEE                     	;# 
  6632  0FEF                     	;# 
  6633                           
  6634 ;; Function _EUSART_is_tx_ready is unused but had its address taken
  6635  0000                     
  6636 ;; Function _EUSART_is_tx_done is unused but had its address taken
  6637  0000                     
  6638                           	psect	idataBANK1
  6639  0066                     __pidataBANK1:	
  6640                           
  6641                           ;initializer for Knock@F15440
  6642  0066  346B               	retlw	107
  6643  0067  346E               	retlw	110
  6644  0068  346F               	retlw	111
  6645  0069  3463               	retlw	99
  6646  006A  346B               	retlw	107
  6647  006B  3420               	retlw	32
  6648  006C  3431               	retlw	49
  6649  006D  3432               	retlw	50
  6650  006E  3433               	retlw	51
  6651  006F  3400               	retlw	0
  6652                           
  6653                           ;initializer for Pair@F15432
  6654  0070  3470               	retlw	112
  6655  0071  3461               	retlw	97
  6656  0072  3469               	retlw	105
  6657  0073  3472               	retlw	114
  6658  0074  3420               	retlw	32
  6659  0075  3431               	retlw	49
  6660  0076  3432               	retlw	50
  6661  0077  3433               	retlw	51
  6662  0078  3400               	retlw	0
  6663                           
  6664                           ;initializer for _failedStr
  6665  0079  3446               	retlw	70
  6666  007A  3441               	retlw	65
  6667  007B  3449               	retlw	73
  6668  007C  344C               	retlw	76
  6669  007D  3445               	retlw	69
  6670  007E  3444               	retlw	68
  6671  007F  3400               	retlw	0
  6672                           
  6673                           ;initializer for _errStr
  6674  0080  3445               	retlw	69
  6675  0081  3452               	retlw	82
  6676  0082  3452               	retlw	82
  6677  0083  3400               	retlw	0
  6678                           
  6679                           	psect	idataBANK2
  6680  00E5                     __pidataBANK2:	
  6681                           
  6682                           ;initializer for Validate@F15436
  6683  00E5  3476               	retlw	118
  6684  00E6  3461               	retlw	97
  6685  00E7  346C               	retlw	108
  6686  00E8  3469               	retlw	105
  6687  00E9  3464               	retlw	100
  6688  00EA  3461               	retlw	97
  6689  00EB  3474               	retlw	116
  6690  00EC  3465               	retlw	101
  6691  00ED  3420               	retlw	32
  6692  00EE  3431               	retlw	49
  6693  00EF  3432               	retlw	50
  6694  00F0  3433               	retlw	51
  6695  00F1  3400               	retlw	0
  6696                           
  6697                           	psect	stringtext1
  6698  11C6                     __pstringtext1:	
  6699  11C6                     _uart:	
  6700  11C6  34BC               	retlw	low _EUSART_is_rx_ready
  6701  11C7  340A               	retlw	high _EUSART_is_rx_ready
  6702  11C8  343A               	retlw	low _EUSART_Initialize
  6703  11C9  340F               	retlw	high _EUSART_Initialize
  6704  11CA  34B8               	retlw	low _EUSART_Read
  6705  11CB  3400               	retlw	high _EUSART_Read
  6706  11CC  34CF               	retlw	low _EUSART_Receive_ISR
  6707  11CD  3400               	retlw	high _EUSART_Receive_ISR
  6708  11CE  34FB               	retlw	low _EUSART_SetRxInterruptHandler
  6709  11CF  340F               	retlw	high _EUSART_SetRxInterruptHandler
  6710  11D0  34E2               	retlw	low _EUSART_SetTxInterruptHandler
  6711  11D1  340F               	retlw	high _EUSART_SetTxInterruptHandler
  6712  11D2  3400               	retlw	0
  6713  11D3  3400               	retlw	0
  6714  11D4  3400               	retlw	0
  6715  11D5  3400               	retlw	0
  6716  11D6  34A0               	retlw	low _EUSART_Transmit_ISR
  6717  11D7  3400               	retlw	high _EUSART_Transmit_ISR
  6718  11D8  3484               	retlw	low _EUSART_Write
  6719  11D9  3400               	retlw	high _EUSART_Write
  6720  11DA                     __end_of_uart:	
  6721                           
  6722                           	psect	stringtext2
  6723  127E                     __pstringtext2:	
  6724  127E                     _dpowers:	
  6725  127E  3401               	retlw	1
  6726  127F  3400               	retlw	0
  6727  1280  340A               	retlw	10
  6728  1281  3400               	retlw	0
  6729  1282  3464               	retlw	100
  6730  1283  3400               	retlw	0
  6731  1284  34E8               	retlw	232
  6732  1285  3403               	retlw	3
  6733  1286  3410               	retlw	16
  6734  1287  3427               	retlw	39
  6735  1288                     __end_of_dpowers:	
  6736                           
  6737                           	psect	stringtext3
  6738  12AE                     __pstringtext3:	
  6739  12AE                     _hexpowers:	
  6740  12AE  3401               	retlw	1
  6741  12AF  3400               	retlw	0
  6742  12B0  3410               	retlw	16
  6743  12B1  3400               	retlw	0
  6744  12B2  3400               	retlw	0
  6745  12B3  3401               	retlw	1
  6746  12B4  3400               	retlw	0
  6747  12B5  3410               	retlw	16
  6748  12B6                     __end_of_hexpowers:	
  6749                           
  6750                           	psect	stringtext4
  6751  12BE                     __pstringtext4:	
  6752  12BE                     _softRebootStr:	
  6753  12BE  3452               	retlw	82
  6754  12BF  3465               	retlw	101
  6755  12C0  3462               	retlw	98
  6756  12C1  346F               	retlw	111
  6757  12C2  346F               	retlw	111
  6758  12C3  3474               	retlw	116
  6759  12C4  3400               	retlw	0
  6760  12C5                     __end_of_softRebootStr:	
  6761                           
  6762                           	psect	stringtext5
  6763  12E8                     __pstringtext5:	
  6764  12E8                     _hardRebootStr:	
  6765  12E8  3452               	retlw	82
  6766  12E9  3445               	retlw	69
  6767  12EA  3441               	retlw	65
  6768  12EB  3444               	retlw	68
  6769  12EC  3459               	retlw	89
  6770  12ED  3400               	retlw	0
  6771  12EE                     __end_of_hardRebootStr:	
  6772                           
  6773                           	psect	stringtext6
  6774  12F4                     __pstringtext6:	
  6775  12F4                     _openStr:	
  6776  12F4  344F               	retlw	79
  6777  12F5  3450               	retlw	80
  6778  12F6  3445               	retlw	69
  6779  12F7  344E               	retlw	78
  6780  12F8  3400               	retlw	0
  6781  12F9                     __end_of_openStr:	
  6782                           
  6783                           	psect	stringtext7
  6784  12F9                     __pstringtext7:	
  6785  12F9                     _endStr:	
  6786  12F9  3445               	retlw	69
  6787  12FA  3458               	retlw	88
  6788  12FB  3449               	retlw	73
  6789  12FC  3454               	retlw	84
  6790  12FD  3400               	retlw	0
  6791  12FE                     __end_of_endStr:	
  6792                           
  6793                           	psect	stringtext8
  6794  1308                     __pstringtext8:	
  6795  1308                     _aokStr:	
  6796  1308  3441               	retlw	65
  6797  1309  344F               	retlw	79
  6798  130A  344B               	retlw	75
  6799  130B  3400               	retlw	0
  6800  130C                     __end_of_aokStr:	
  6801                           
  6802                           	psect	stringtext9
  6803  130C                     __pstringtext9:	
  6804  130C                     _cmdStr:	
  6805  130C  3443               	retlw	67
  6806  130D  344D               	retlw	77
  6807  130E  3444               	retlw	68
  6808  130F  3400               	retlw	0
  6809  1310                     __end_of_cmdStr:	
  6810                           
  6811                           	psect	nvBANK1
  6812  00E1                     __pnvBANK1:	
  6813  00E1                     _TMR2_InterruptHandler:	
  6814  00E1                     	ds	2
  6815  00E3                     _EUSART_RxDefaultInterruptHandler:	
  6816  00E3                     	ds	2
  6817  00E5                     _EUSART_TxDefaultInterruptHandler:	
  6818  00E5                     	ds	2
  6819  00E7                     _TMR4_InterruptHandler:	
  6820  00E7                     	ds	2
  6821  00E9                     _UID:	
  6822  00E9                     	ds	1
  6823  00EA                     _inCMD:	
  6824  00EA                     	ds	1
  6825  00EB                     _eusartTxBufferRemaining:	
  6826  00EB                     	ds	1
  6827  0003                     _STATUSbits	set	3
  6828  000D                     _PORTBbits	set	13
  6829  000E                     _PORTCbits	set	14
  6830  0016                     _LATAbits	set	22
  6831  000B                     _INTCONbits	set	11
  6832  0019                     _LATDbits	set	25
  6833  0014                     _TRISD	set	20
  6834  0013                     _TRISC	set	19
  6835  0012                     _TRISB	set	18
  6836  0011                     _TRISA	set	17
  6837  0015                     _TRISE	set	21
  6838  0018                     _LATC	set	24
  6839  0017                     _LATB	set	23
  6840  0016                     _LATA	set	22
  6841  0019                     _LATD	set	25
  6842  001A                     _LATE	set	26
  6843  0018                     _LATCbits	set	24
  6844  005F                     _GIE	set	95
  6845  0119                     _RC1REG	set	281
  6846  011D                     _RC1STAbits	set	285
  6847  011A                     _TX1REG	set	282
  6848  011E                     _TX1STAbits	set	286
  6849  011C                     _SP1BRGH	set	284
  6850  011B                     _SP1BRGL	set	283
  6851  011E                     _TX1STA	set	286
  6852  011D                     _RC1STA	set	285
  6853  011F                     _BAUD1CON	set	287
  6854  028E                     _T2CONbits	set	654
  6855  028C                     _T2TMR	set	652
  6856  028D                     _T2PR	set	653
  6857  0291                     _T2RST	set	657
  6858  028F                     _T2HLT	set	655
  6859  0290                     _T2CLKCON	set	656
  6860  028E                     _T2CON	set	654
  6861  0294                     _T4CONbits	set	660
  6862  0292                     _T4TMR	set	658
  6863  0293                     _T4PR	set	659
  6864  0297                     _T4RST	set	663
  6865  0295                     _T4HLT	set	661
  6866  0296                     _T4CLKCON	set	662
  6867  0294                     _T4CON	set	660
  6868  070F                     _PIR3bits	set	1807
  6869  0719                     _PIE3bits	set	1817
  6870  071A                     _PIE4bits	set	1818
  6871  0710                     _PIR4bits	set	1808
  6872  081F                     _NVMCON2	set	2079
  6873  081D                     _NVMDATH	set	2077
  6874  081C                     _NVMDATL	set	2076
  6875  081B                     _NVMADRH	set	2075
  6876  081A                     _NVMADRL	set	2074
  6877  081E                     _NVMCON1bits	set	2078
  6878  080C                     _WDTCON0bits	set	2060
  6879  080D                     _WDTCON1	set	2061
  6880  080C                     _WDTCON0	set	2060
  6881  40F1                     _WR	set	16625
  6882  0892                     _OSCTUNE	set	2194
  6883  0893                     _OSCFRQ	set	2195
  6884  0891                     _OSCEN	set	2193
  6885  088F                     _OSCCON3	set	2191
  6886  088D                     _OSCCON1	set	2189
  6887  0ECB                     _RXPPSbits	set	3787
  6888  0E8F                     _PPSLOCKbits	set	3727
  6889  0E8F                     _PPSLOCK	set	3727
  6890  0F21                     _RC1PPS	set	3873
  6891  0F5B                     _ODCOND	set	3931
  6892  0F50                     _ODCONC	set	3920
  6893  0F45                     _ODCONB	set	3909
  6894  0F3A                     _ODCONA	set	3898
  6895  0F66                     _ODCONE	set	3942
  6896  0F4F                     _WPUC	set	3919
  6897  0F39                     _WPUA	set	3897
  6898  0F44                     _WPUB	set	3908
  6899  0F65                     _WPUE	set	3941
  6900  0F5A                     _WPUD	set	3930
  6901  0F38                     _ANSELA	set	3896
  6902  0F64                     _ANSELE	set	3940
  6903  0F59                     _ANSELD	set	3929
  6904  0F43                     _ANSELB	set	3907
  6905  0F4E                     _ANSELC	set	3918
  6906                           
  6907                           	psect	stringtext10
  6908  1000                     __pstringtext10:	
  6909  1000                     STR_19:	
  6910  1000  340A               	retlw	10
  6911  1001  3420               	retlw	32	;' '
  6912  1002  3420               	retlw	32	;' '
  6913  1003  3420               	retlw	32	;' '
  6914  1004  3420               	retlw	32	;' '
  6915  1005  3420               	retlw	32	;' '
  6916  1006  3420               	retlw	32	;' '
  6917  1007  3420               	retlw	32	;' '
  6918  1008  3420               	retlw	32	;' '
  6919  1009  3420               	retlw	32	;' '
  6920  100A  3420               	retlw	32	;' '
  6921  100B  3420               	retlw	32	;' '
  6922  100C  347C               	retlw	124	;'|'
  6923  100D  3420               	retlw	32	;' '
  6924  100E  347C               	retlw	124	;'|'
  6925  100F  340A               	retlw	10
  6926  1010  3420               	retlw	32	;' '
  6927  1011  3420               	retlw	32	;' '
  6928  1012  3420               	retlw	32	;' '
  6929  1013  3420               	retlw	32	;' '
  6930  1014  3420               	retlw	32	;' '
  6931  1015  3420               	retlw	32	;' '
  6932  1016  3420               	retlw	32	;' '
  6933  1017  3420               	retlw	32	;' '
  6934  1018  3420               	retlw	32	;' '
  6935  1019  3420               	retlw	32	;' '
  6936  101A  3420               	retlw	32	;' '
  6937  101B  347C               	retlw	124	;'|'
  6938  101C  3420               	retlw	32	;' '
  6939  101D  347C               	retlw	124	;'|'
  6940  101E  340A               	retlw	10
  6941  101F  3420               	retlw	32	;' '
  6942  1020  3420               	retlw	32	;' '
  6943  1021  3420               	retlw	32	;' '
  6944  1022  342D               	retlw	45	;'-'
  6945  1023  342D               	retlw	45	;'-'
  6946  1024  342D               	retlw	45	;'-'
  6947  1025  342D               	retlw	45	;'-'
  6948  1026  342D               	retlw	45	;'-'
  6949  1027  342D               	retlw	45	;'-'
  6950  1028  342D               	retlw	45	;'-'
  6951  1029  342D               	retlw	45	;'-'
  6952  102A  342D               	retlw	45	;'-'
  6953  102B  342D               	retlw	45	;'-'
  6954  102C  342D               	retlw	45	;'-'
  6955  102D  342D               	retlw	45	;'-'
  6956  102E  342D               	retlw	45	;'-'
  6957  102F  342D               	retlw	45	;'-'
  6958  1030  342D               	retlw	45	;'-'
  6959  1031  342D               	retlw	45	;'-'
  6960  1032  342D               	retlw	45	;'-'
  6961  1033  342D               	retlw	45	;'-'
  6962  1034  342D               	retlw	45	;'-'
  6963  1035  340A               	retlw	10
  6964  1036  3420               	retlw	32	;' '
  6965  1037  3420               	retlw	32	;' '
  6966  1038  3420               	retlw	32	;' '
  6967  1039  342D               	retlw	45	;'-'
  6968  103A  342D               	retlw	45	;'-'
  6969  103B  342D               	retlw	45	;'-'
  6970  103C  342D               	retlw	45	;'-'
  6971  103D  342D               	retlw	45	;'-'
  6972  103E  342D               	retlw	45	;'-'
  6973  103F  342D               	retlw	45	;'-'
  6974  1040  342D               	retlw	45	;'-'
  6975  1041  342D               	retlw	45	;'-'
  6976  1042  342D               	retlw	45	;'-'
  6977  1043  342D               	retlw	45	;'-'
  6978  1044  342D               	retlw	45	;'-'
  6979  1045  342D               	retlw	45	;'-'
  6980  1046  342D               	retlw	45	;'-'
  6981  1047  342D               	retlw	45	;'-'
  6982  1048  342D               	retlw	45	;'-'
  6983  1049  342D               	retlw	45	;'-'
  6984  104A  342D               	retlw	45	;'-'
  6985  104B  342D               	retlw	45	;'-'
  6986  104C  340A               	retlw	10
  6987  104D  3420               	retlw	32	;' '
  6988  104E  3420               	retlw	32	;' '
  6989  104F  3420               	retlw	32	;' '
  6990  1050  3420               	retlw	32	;' '
  6991  1051  347C               	retlw	124	;'|'
  6992  1052  3420               	retlw	32	;' '
  6993  1053  3420               	retlw	32	;' '
  6994  1054  345F               	retlw	95	;'_'
  6995  1055  345F               	retlw	95	;'_'
  6996  1056  345F               	retlw	95	;'_'
  6997  1057  3420               	retlw	32	;' '
  6998  1058  3420               	retlw	32	;' '
  6999  1059  347C               	retlw	124	;'|'
  7000  105A  3420               	retlw	32	;' '
  7001  105B  3420               	retlw	32	;' '
  7002  105C  345F               	retlw	95	;'_'
  7003  105D  345F               	retlw	95	;'_'
  7004  105E  345F               	retlw	95	;'_'
  7005  105F  3420               	retlw	32	;' '
  7006  1060  3420               	retlw	32	;' '
  7007  1061  347C               	retlw	124	;'|'
  7008  1062  340A               	retlw	10
  7009  1063  3420               	retlw	32	;' '
  7010  1064  3420               	retlw	32	;' '
  7011  1065  3420               	retlw	32	;' '
  7012  1066  3420               	retlw	32	;' '
  7013  1067  347C               	retlw	124	;'|'
  7014  1068  3420               	retlw	32	;' '
  7015  1069  347C               	retlw	124	;'|'
  7016  106A  3420               	retlw	32	;' '
  7017  106B  347C               	retlw	124	;'|'
  7018  106C  3420               	retlw	32	;' '
  7019  106D  347C               	retlw	124	;'|'
  7020  106E  3420               	retlw	32	;' '
  7021  106F  347C               	retlw	124	;'|'
  7022  1070  3420               	retlw	32	;' '
  7023  1071  347C               	retlw	124	;'|'
  7024  1072  3420               	retlw	32	;' '
  7025  1073  347C               	retlw	124	;'|'
  7026  1074  3420               	retlw	32	;' '
  7027  1075  347C               	retlw	124	;'|'
  7028  1076  3420               	retlw	32	;' '
  7029  1077  347C               	retlw	124	;'|'
  7030  1078  340A               	retlw	10
  7031  1079  3420               	retlw	32	;' '
  7032  107A  3420               	retlw	32	;' '
  7033  107B  3420               	retlw	32	;' '
  7034  107C  3420               	retlw	32	;' '
  7035  107D  347C               	retlw	124	;'|'
  7036  107E  3420               	retlw	32	;' '
  7037  107F  347C               	retlw	124	;'|'
  7038  1080  342D               	retlw	45	;'-'
  7039  1081  342B               	retlw	43	;'+'
  7040  1082  342D               	retlw	45	;'-'
  7041  1083  347C               	retlw	124	;'|'
  7042  1084  3420               	retlw	32	;' '
  7043  1085  347C               	retlw	124	;'|'
  7044  1086  3420               	retlw	32	;' '
  7045  1087  347C               	retlw	124	;'|'
  7046  1088  342D               	retlw	45	;'-'
  7047  1089  342B               	retlw	43	;'+'
  7048  108A  342D               	retlw	45	;'-'
  7049  108B  347C               	retlw	124	;'|'
  7050  108C  3420               	retlw	32	;' '
  7051  108D  347C               	retlw	124	;'|'
  7052  108E  340A               	retlw	10
  7053  108F  3420               	retlw	32	;' '
  7054  1090  3420               	retlw	32	;' '
  7055  1091  3420               	retlw	32	;' '
  7056  1092  3420               	retlw	32	;' '
  7057  1093  347C               	retlw	124	;'|'
  7058  1094  3420               	retlw	32	;' '
  7059  1095  347C               	retlw	124	;'|'
  7060  1096  345F               	retlw	95	;'_'
  7061  1097  347C               	retlw	124	;'|'
  7062  1098  345F               	retlw	95	;'_'
  7063  1099  347C               	retlw	124	;'|'
  7064  109A  3420               	retlw	32	;' '
  7065  109B  347C               	retlw	124	;'|'
  7066  109C  3420               	retlw	32	;' '
  7067  109D  347C               	retlw	124	;'|'
  7068  109E  345F               	retlw	95	;'_'
  7069  109F  347C               	retlw	124	;'|'
  7070  10A0  345F               	retlw	95	;'_'
  7071  10A1  347C               	retlw	124	;'|'
  7072  10A2  3420               	retlw	32	;' '
  7073  10A3  347C               	retlw	124	;'|'
  7074  10A4  340A               	retlw	10
  7075  10A5  3420               	retlw	32	;' '
  7076  10A6  3420               	retlw	32	;' '
  7077  10A7  3420               	retlw	32	;' '
  7078  10A8  3420               	retlw	32	;' '
  7079  10A9  347C               	retlw	124	;'|'
  7080  10AA  3420               	retlw	32	;' '
  7081  10AB  3420               	retlw	32	;' '
  7082  10AC  345F               	retlw	95	;'_'
  7083  10AD  345F               	retlw	95	;'_'
  7084  10AE  345F               	retlw	95	;'_'
  7085  10AF  3420               	retlw	32	;' '
  7086  10B0  3420               	retlw	32	;' '
  7087  10B1  347C               	retlw	124	;'|'
  7088  10B2  3420               	retlw	32	;' '
  7089  10B3  3420               	retlw	32	;' '
  7090  10B4  345F               	retlw	95	;'_'
  7091  10B5  345F               	retlw	95	;'_'
  7092  10B6  345F               	retlw	95	;'_'
  7093  10B7  3420               	retlw	32	;' '
  7094  10B8  3420               	retlw	32	;' '
  7095  10B9  347C               	retlw	124	;'|'
  7096  10BA  340A               	retlw	10
  7097  10BB  3420               	retlw	32	;' '
  7098  10BC  3420               	retlw	32	;' '
  7099  10BD  3420               	retlw	32	;' '
  7100  10BE  3420               	retlw	32	;' '
  7101  10BF  347C               	retlw	124	;'|'
  7102  10C0  3420               	retlw	32	;' '
  7103  10C1  347C               	retlw	124	;'|'
  7104  10C2  3420               	retlw	32	;' '
  7105  10C3  3420               	retlw	32	;' '
  7106  10C4  3420               	retlw	32	;' '
  7107  10C5  347C               	retlw	124	;'|'
  7108  10C6  3420               	retlw	32	;' '
  7109  10C7  347C               	retlw	124	;'|'
  7110  10C8  3420               	retlw	32	;' '
  7111  10C9  347C               	retlw	124	;'|'
  7112  10CA  3420               	retlw	32	;' '
  7113  10CB  3420               	retlw	32	;' '
  7114  10CC  3420               	retlw	32	;' '
  7115  10CD  347C               	retlw	124	;'|'
  7116  10CE  3420               	retlw	32	;' '
  7117  10CF  347C               	retlw	124	;'|'
  7118  10D0  340A               	retlw	10
  7119  10D1  3420               	retlw	32	;' '
  7120  10D2  3420               	retlw	32	;' '
  7121  10D3  3420               	retlw	32	;' '
  7122  10D4  3420               	retlw	32	;' '
  7123  10D5  347C               	retlw	124	;'|'
  7124  10D6  3420               	retlw	32	;' '
  7125  10D7  347C               	retlw	124	;'|'
  7126  10D8  3420               	retlw	32	;' '
  7127  10D9  3420               	retlw	32	;' '
  7128  10DA  3420               	retlw	32	;' '
  7129  10DB  347C               	retlw	124	;'|'
  7130  10DC  3420               	retlw	32	;' '
  7131  10DD  347C               	retlw	124	;'|'
  7132  10DE  3420               	retlw	32	;' '
  7133  10DF  347C               	retlw	124	;'|'
  7134  10E0  3420               	retlw	32	;' '
  7135  10E1  3420               	retlw	32	;' '
  7136  10E2  3420               	retlw	32	;' '
  7137  10E3  347C               	retlw	124	;'|'
  7138  10E4  3420               	retlw	32	;' '
  7139  10E5  347C               	retlw	124	;'|'
  7140  10E6  340A               	retlw	10
  7141  10E7  3420               	retlw	32	;' '
  7142  10E8  3420               	retlw	32	;' '
  7143  10E9  3420               	retlw	32	;' '
  7144  10EA  3420               	retlw	32	;' '
  7145  10EB  347C               	retlw	124	;'|'
  7146  10EC  3420               	retlw	32	;' '
  7147  10ED  347C               	retlw	124	;'|'
  7148  10EE  345F               	retlw	95	;'_'
  7149  10EF  345F               	retlw	95	;'_'
  7150  10F0  345F               	retlw	95	;'_'
  7151  10F1  347C               	retlw	124	;'|'
  7152  10F2  3420               	retlw	32	;' '
  7153  10F3  347C               	retlw	124	;'|'
  7154  10F4  3420               	retlw	32	;' '
  7155  10F5  347C               	retlw	124	;'|'
  7156  10F6  345F               	retlw	95	;'_'
  7157  10F7  345F               	retlw	95	;'_'
  7158  10F8  345F               	retlw	95	;'_'
  7159  10F9  347C               	retlw	124	;'|'
  7160  10FA  3420               	retlw	32	;' '
  7161  10FB  347C               	retlw	124	;'|'
  7162  10FC  340A               	retlw	10
  7163  10FD  3420               	retlw	32	;' '
  7164  10FE  3420               	retlw	32	;' '
  7165  10FF  3420               	retlw	32	;' '
  7166  1100  3420               	retlw	32	;' '
  7167  1101  347C               	retlw	124	;'|'
  7168  1102  3420               	retlw	32	;' '
  7169  1103  3420               	retlw	32	;' '
  7170  1104  345F               	retlw	95	;'_'
  7171  1105  345F               	retlw	95	;'_'
  7172  1106  345F               	retlw	95	;'_'
  7173  1107  3420               	retlw	32	;' '
  7174  1108  3420               	retlw	32	;' '
  7175  1109  347C               	retlw	124	;'|'
  7176  110A  3420               	retlw	32	;' '
  7177  110B  3420               	retlw	32	;' '
  7178  110C  345F               	retlw	95	;'_'
  7179  110D  345F               	retlw	95	;'_'
  7180  110E  345F               	retlw	95	;'_'
  7181  110F  3420               	retlw	32	;' '
  7182  1110  3420               	retlw	32	;' '
  7183  1111  347C               	retlw	124	;'|'
  7184  1112  340A               	retlw	10
  7185  1113  3420               	retlw	32	;' '
  7186  1114  3420               	retlw	32	;' '
  7187  1115  3420               	retlw	32	;' '
  7188  1116  3420               	retlw	32	;' '
  7189  1117  347C               	retlw	124	;'|'
  7190  1118  3420               	retlw	32	;' '
  7191  1119  347C               	retlw	124	;'|'
  7192  111A  3420               	retlw	32	;' '
  7193  111B  3420               	retlw	32	;' '
  7194  111C  3420               	retlw	32	;' '
  7195  111D  347C               	retlw	124	;'|'
  7196  111E  3420               	retlw	32	;' '
  7197  111F  347C               	retlw	124	;'|'
  7198  1120  3420               	retlw	32	;' '
  7199  1121  347C               	retlw	124	;'|'
  7200  1122  3420               	retlw	32	;' '
  7201  1123  3420               	retlw	32	;' '
  7202  1124  3420               	retlw	32	;' '
  7203  1125  347C               	retlw	124	;'|'
  7204  1126  3420               	retlw	32	;' '
  7205  1127  347C               	retlw	124	;'|'
  7206  1128  340A               	retlw	10
  7207  1129  3420               	retlw	32	;' '
  7208  112A  3420               	retlw	32	;' '
  7209  112B  3420               	retlw	32	;' '
  7210  112C  3420               	retlw	32	;' '
  7211  112D  347C               	retlw	124	;'|'
  7212  112E  3420               	retlw	32	;' '
  7213  112F  347C               	retlw	124	;'|'
  7214  1130  3420               	retlw	32	;' '
  7215  1131  3420               	retlw	32	;' '
  7216  1132  3420               	retlw	32	;' '
  7217  1133  347C               	retlw	124	;'|'
  7218  1134  3420               	retlw	32	;' '
  7219  1135  347C               	retlw	124	;'|'
  7220  1136  3420               	retlw	32	;' '
  7221  1137  347C               	retlw	124	;'|'
  7222  1138  3420               	retlw	32	;' '
  7223  1139  3420               	retlw	32	;' '
  7224  113A  3420               	retlw	32	;' '
  7225  113B  347C               	retlw	124	;'|'
  7226  113C  3420               	retlw	32	;' '
  7227  113D  347C               	retlw	124	;'|'
  7228  113E  340A               	retlw	10
  7229  113F  3420               	retlw	32	;' '
  7230  1140  3420               	retlw	32	;' '
  7231  1141  3420               	retlw	32	;' '
  7232  1142  3420               	retlw	32	;' '
  7233  1143  347C               	retlw	124	;'|'
  7234  1144  3420               	retlw	32	;' '
  7235  1145  347C               	retlw	124	;'|'
  7236  1146  345F               	retlw	95	;'_'
  7237  1147  345F               	retlw	95	;'_'
  7238  1148  345F               	retlw	95	;'_'
  7239  1149  347C               	retlw	124	;'|'
  7240  114A  3420               	retlw	32	;' '
  7241  114B  347C               	retlw	124	;'|'
  7242  114C  3420               	retlw	32	;' '
  7243  114D  347C               	retlw	124	;'|'
  7244  114E  345F               	retlw	95	;'_'
  7245  114F  345F               	retlw	95	;'_'
  7246  1150  345F               	retlw	95	;'_'
  7247  1151  347C               	retlw	124	;'|'
  7248  1152  3420               	retlw	32	;' '
  7249  1153  347C               	retlw	124	;'|'
  7250  1154  340A               	retlw	10
  7251  1155  3420               	retlw	32	;' '
  7252  1156  3420               	retlw	32	;' '
  7253  1157  3420               	retlw	32	;' '
  7254  1158  3420               	retlw	32	;' '
  7255  1159  347C               	retlw	124	;'|'
  7256  115A  3420               	retlw	32	;' '
  7257  115B  3420               	retlw	32	;' '
  7258  115C  3420               	retlw	32	;' '
  7259  115D  3420               	retlw	32	;' '
  7260  115E  3420               	retlw	32	;' '
  7261  115F  3420               	retlw	32	;' '
  7262  1160  3420               	retlw	32	;' '
  7263  1161  347C               	retlw	124	;'|'
  7264  1162  3420               	retlw	32	;' '
  7265  1163  3420               	retlw	32	;' '
  7266  1164  3420               	retlw	32	;' '
  7267  1165  3420               	retlw	32	;' '
  7268  1166  3420               	retlw	32	;' '
  7269  1167  3420               	retlw	32	;' '
  7270  1168  3420               	retlw	32	;' '
  7271  1169  347C               	retlw	124	;'|'
  7272  116A  340A               	retlw	10
  7273  116B  3420               	retlw	32	;' '
  7274  116C  3420               	retlw	32	;' '
  7275  116D  3420               	retlw	32	;' '
  7276  116E  343D               	retlw	61	;'='
  7277  116F  343D               	retlw	61	;'='
  7278  1170  343D               	retlw	61	;'='
  7279  1171  343D               	retlw	61	;'='
  7280  1172  343D               	retlw	61	;'='
  7281  1173  343D               	retlw	61	;'='
  7282  1174  343D               	retlw	61	;'='
  7283  1175  343D               	retlw	61	;'='
  7284  1176  343D               	retlw	61	;'='
  7285  1177  343D               	retlw	61	;'='
  7286  1178  343D               	retlw	61	;'='
  7287  1179  343D               	retlw	61	;'='
  7288  117A  343D               	retlw	61	;'='
  7289  117B  343D               	retlw	61	;'='
  7290  117C  343D               	retlw	61	;'='
  7291  117D  343D               	retlw	61	;'='
  7292  117E  343D               	retlw	61	;'='
  7293  117F  343D               	retlw	61	;'='
  7294  1180  343D               	retlw	61	;'='
  7295  1181  340A               	retlw	10
  7296  1182  3400               	retlw	0
  7297                           
  7298                           	psect	stringtext11
  7299  1183                     __pstringtext11:	
  7300  1183                     STR_8:	
  7301  1183  3473               	retlw	115	;'s'
  7302  1184  3465               	retlw	101	;'e'
  7303  1185  3474               	retlw	116	;'t'
  7304  1186  3420               	retlw	32	;' '
  7305  1187  3477               	retlw	119	;'w'
  7306  1188  346C               	retlw	108	;'l'
  7307  1189  3461               	retlw	97	;'a'
  7308  118A  346E               	retlw	110	;'n'
  7309  118B  3420               	retlw	32	;' '
  7310  118C  3470               	retlw	112	;'p'
  7311  118D  3461               	retlw	97	;'a'
  7312  118E  3473               	retlw	115	;'s'
  7313  118F  3473               	retlw	115	;'s'
  7314  1190  3470               	retlw	112	;'p'
  7315  1191  3468               	retlw	104	;'h'
  7316  1192  3472               	retlw	114	;'r'
  7317  1193  3461               	retlw	97	;'a'
  7318  1194  3473               	retlw	115	;'s'
  7319  1195  3465               	retlw	101	;'e'
  7320  1196  3420               	retlw	32	;' '
  7321  1197  3425               	retlw	37	;'%'
  7322  1198  3473               	retlw	115	;'s'
  7323  1199  340D               	retlw	13
  7324  119A  340A               	retlw	10
  7325  119B  3400               	retlw	0
  7326                           
  7327                           	psect	stringtext12
  7328  119C                     __pstringtext12:	
  7329  119C                     STR_11:	
  7330  119C  3473               	retlw	115	;'s'
  7331  119D  3465               	retlw	101	;'e'
  7332  119E  3474               	retlw	116	;'t'
  7333  119F  3420               	retlw	32	;' '
  7334  11A0  3469               	retlw	105	;'i'
  7335  11A1  3470               	retlw	112	;'p'
  7336  11A2  3420               	retlw	32	;' '
  7337  11A3  3470               	retlw	112	;'p'
  7338  11A4  3472               	retlw	114	;'r'
  7339  11A5  346F               	retlw	111	;'o'
  7340  11A6  3474               	retlw	116	;'t'
  7341  11A7  346F               	retlw	111	;'o'
  7342  11A8  3463               	retlw	99	;'c'
  7343  11A9  346F               	retlw	111	;'o'
  7344  11AA  346C               	retlw	108	;'l'
  7345  11AB  3420               	retlw	32	;' '
  7346  11AC  3430               	retlw	48	;'0'
  7347  11AD  3438               	retlw	56	;'8'
  7348  11AE  340D               	retlw	13
  7349  11AF  340A               	retlw	10
  7350  11B0  3400               	retlw	0
  7351                           
  7352                           	psect	stringtext13
  7353  11B1                     __pstringtext13:	
  7354  11B1                     STR_6:	
  7355  11B1  3473               	retlw	115	;'s'
  7356  11B2  3465               	retlw	101	;'e'
  7357  11B3  3474               	retlw	116	;'t'
  7358  11B4  3420               	retlw	32	;' '
  7359  11B5  3475               	retlw	117	;'u'
  7360  11B6  3461               	retlw	97	;'a'
  7361  11B7  3472               	retlw	114	;'r'
  7362  11B8  3474               	retlw	116	;'t'
  7363  11B9  3420               	retlw	32	;' '
  7364  11BA  346D               	retlw	109	;'m'
  7365  11BB  346F               	retlw	111	;'o'
  7366  11BC  3464               	retlw	100	;'d'
  7367  11BD  3465               	retlw	101	;'e'
  7368  11BE  3420               	retlw	32	;' '
  7369  11BF  3430               	retlw	48	;'0'
  7370  11C0  3478               	retlw	120	;'x'
  7371  11C1  3431               	retlw	49	;'1'
  7372  11C2  3431               	retlw	49	;'1'
  7373  11C3  340D               	retlw	13
  7374  11C4  340A               	retlw	10
  7375  11C5  3400               	retlw	0
  7376                           
  7377                           	psect	stringtext14
  7378  11DA                     __pstringtext14:	
  7379  11DA                     STR_9:	
  7380  11DA  3473               	retlw	115	;'s'
  7381  11DB  3465               	retlw	101	;'e'
  7382  11DC  3474               	retlw	116	;'t'
  7383  11DD  3420               	retlw	32	;' '
  7384  11DE  3477               	retlw	119	;'w'
  7385  11DF  346C               	retlw	108	;'l'
  7386  11E0  3461               	retlw	97	;'a'
  7387  11E1  346E               	retlw	110	;'n'
  7388  11E2  3420               	retlw	32	;' '
  7389  11E3  3473               	retlw	115	;'s'
  7390  11E4  3473               	retlw	115	;'s'
  7391  11E5  3469               	retlw	105	;'i'
  7392  11E6  3464               	retlw	100	;'d'
  7393  11E7  3420               	retlw	32	;' '
  7394  11E8  3425               	retlw	37	;'%'
  7395  11E9  3473               	retlw	115	;'s'
  7396  11EA  340D               	retlw	13
  7397  11EB  340A               	retlw	10
  7398  11EC  3400               	retlw	0
  7399                           
  7400                           	psect	stringtext15
  7401  11ED                     __pstringtext15:	
  7402  11ED                     STR_10:	
  7403  11ED  3473               	retlw	115	;'s'
  7404  11EE  3465               	retlw	101	;'e'
  7405  11EF  3474               	retlw	116	;'t'
  7406  11F0  3420               	retlw	32	;' '
  7407  11F1  3477               	retlw	119	;'w'
  7408  11F2  346C               	retlw	108	;'l'
  7409  11F3  3461               	retlw	97	;'a'
  7410  11F4  346E               	retlw	110	;'n'
  7411  11F5  3420               	retlw	32	;' '
  7412  11F6  346A               	retlw	106	;'j'
  7413  11F7  346F               	retlw	111	;'o'
  7414  11F8  3469               	retlw	105	;'i'
  7415  11F9  346E               	retlw	110	;'n'
  7416  11FA  3420               	retlw	32	;' '
  7417  11FB  3431               	retlw	49	;'1'
  7418  11FC  340D               	retlw	13
  7419  11FD  340A               	retlw	10
  7420  11FE  3400               	retlw	0
  7421                           
  7422                           	psect	stringtext16
  7423  11FF                     __pstringtext16:	
  7424  11FF                     STR_37:	
  7425  11FF  3430               	retlw	48	;'0'
  7426  1200  3431               	retlw	49	;'1'
  7427  1201  3432               	retlw	50	;'2'
  7428  1202  3433               	retlw	51	;'3'
  7429  1203  3434               	retlw	52	;'4'
  7430  1204  3435               	retlw	53	;'5'
  7431  1205  3436               	retlw	54	;'6'
  7432  1206  3437               	retlw	55	;'7'
  7433  1207  3438               	retlw	56	;'8'
  7434  1208  3439               	retlw	57	;'9'
  7435  1209  3461               	retlw	97	;'a'
  7436  120A  3462               	retlw	98	;'b'
  7437  120B  3463               	retlw	99	;'c'
  7438  120C  3464               	retlw	100	;'d'
  7439  120D  3465               	retlw	101	;'e'
  7440  120E  3466               	retlw	102	;'f'
  7441  120F  3400               	retlw	0
  7442                           
  7443                           	psect	stringtext17
  7444  1210                     __pstringtext17:	
  7445  1210                     STR_7:	
  7446  1210  3473               	retlw	115	;'s'
  7447  1211  3465               	retlw	101	;'e'
  7448  1212  3474               	retlw	116	;'t'
  7449  1213  3420               	retlw	32	;' '
  7450  1214  3469               	retlw	105	;'i'
  7451  1215  3470               	retlw	112	;'p'
  7452  1216  3420               	retlw	32	;' '
  7453  1217  3464               	retlw	100	;'d'
  7454  1218  3468               	retlw	104	;'h'
  7455  1219  3463               	retlw	99	;'c'
  7456  121A  3470               	retlw	112	;'p'
  7457  121B  3420               	retlw	32	;' '
  7458  121C  3431               	retlw	49	;'1'
  7459  121D  340D               	retlw	13
  7460  121E  340A               	retlw	10
  7461  121F  3400               	retlw	0
  7462                           
  7463                           	psect	stringtext18
  7464  1220                     __pstringtext18:	
  7465  1220                     STR_5:	
  7466  1220  3466               	retlw	102	;'f'
  7467  1221  3461               	retlw	97	;'a'
  7468  1222  3463               	retlw	99	;'c'
  7469  1223  3474               	retlw	116	;'t'
  7470  1224  346F               	retlw	111	;'o'
  7471  1225  3472               	retlw	114	;'r'
  7472  1226  3479               	retlw	121	;'y'
  7473  1227  3420               	retlw	32	;' '
  7474  1228  3452               	retlw	82	;'R'
  7475  1229  3445               	retlw	69	;'E'
  7476  122A  3453               	retlw	83	;'S'
  7477  122B  3445               	retlw	69	;'E'
  7478  122C  3454               	retlw	84	;'T'
  7479  122D  340D               	retlw	13
  7480  122E  340A               	retlw	10
  7481  122F  3400               	retlw	0
  7482                           
  7483                           	psect	stringtext19
  7484  1230                     __pstringtext19:	
  7485  1230                     STR_34:	
  7486  1230  3443               	retlw	67	;'C'
  7487  1231  3434               	retlw	52	;'4'
  7488  1232  342D               	retlw	45	;'-'
  7489  1233  3432               	retlw	50	;'2'
  7490  1234  342D               	retlw	45	;'-'
  7491  1235  3435               	retlw	53	;'5'
  7492  1236  3434               	retlw	52	;'4'
  7493  1237  3433               	retlw	51	;'3'
  7494  1238  345F               	retlw	95	;'_'
  7495  1239  3457               	retlw	87	;'W'
  7496  123A  344C               	retlw	76	;'L'
  7497  123B  3441               	retlw	65	;'A'
  7498  123C  344E               	retlw	78	;'N'
  7499  123D  3400               	retlw	0
  7500                           
  7501                           	psect	stringtext20
  7502  123E                     __pstringtext20:	
  7503  123E                     STR_26:	
  7504  123E  3476               	retlw	118	;'v'
  7505  123F  3461               	retlw	97	;'a'
  7506  1240  346C               	retlw	108	;'l'
  7507  1241  3469               	retlw	105	;'i'
  7508  1242  3464               	retlw	100	;'d'
  7509  1243  3461               	retlw	97	;'a'
  7510  1244  3474               	retlw	116	;'t'
  7511  1245  3465               	retlw	101	;'e'
  7512  1246  3420               	retlw	32	;' '
  7513  1247  3425               	retlw	37	;'%'
  7514  1248  3430               	retlw	48	;'0'
  7515  1249  3433               	retlw	51	;'3'
  7516  124A  3464               	retlw	100	;'d'
  7517  124B  3400               	retlw	0
  7518                           
  7519                           	psect	stringtext21
  7520  124C                     __pstringtext21:	
  7521  124C                     STR_15:	
  7522  124C  344B               	retlw	75	;'K'
  7523  124D  346E               	retlw	110	;'n'
  7524  124E  346F               	retlw	111	;'o'
  7525  124F  3463               	retlw	99	;'c'
  7526  1250  346B               	retlw	107	;'k'
  7527  1251  3420               	retlw	32	;' '
  7528  1252  344B               	retlw	75	;'K'
  7529  1253  346E               	retlw	110	;'n'
  7530  1254  346F               	retlw	111	;'o'
  7531  1255  3463               	retlw	99	;'c'
  7532  1256  346B               	retlw	107	;'k'
  7533  1257  340D               	retlw	13
  7534  1258  340A               	retlw	10
  7535  1259  3400               	retlw	0
  7536                           
  7537                           	psect	stringtext22
  7538  125A                     __pstringtext22:	
  7539  125A                     STR_13:	
  7540  125A  346F               	retlw	111	;'o'
  7541  125B  3470               	retlw	112	;'p'
  7542  125C  3465               	retlw	101	;'e'
  7543  125D  346E               	retlw	110	;'n'
  7544  125E  3420               	retlw	32	;' '
  7545  125F  3425               	retlw	37	;'%'
  7546  1260  3473               	retlw	115	;'s'
  7547  1261  3420               	retlw	32	;' '
  7548  1262  3425               	retlw	37	;'%'
  7549  1263  3473               	retlw	115	;'s'
  7550  1264  340D               	retlw	13
  7551  1265  340A               	retlw	10
  7552  1266  3400               	retlw	0
  7553                           
  7554                           	psect	stringtext23
  7555  1267                     __pstringtext23:	
  7556  1267                     STR_22:	
  7557  1267  3431               	retlw	49	;'1'
  7558  1268  3439               	retlw	57	;'9'
  7559  1269  3432               	retlw	50	;'2'
  7560  126A  342E               	retlw	46	;'.'
  7561  126B  3431               	retlw	49	;'1'
  7562  126C  3436               	retlw	54	;'6'
  7563  126D  3438               	retlw	56	;'8'
  7564  126E  342E               	retlw	46	;'.'
  7565  126F  3431               	retlw	49	;'1'
  7566  1270  342E               	retlw	46	;'.'
  7567  1271  3437               	retlw	55	;'7'
  7568  1272  3400               	retlw	0
  7569                           
  7570                           	psect	stringtext24
  7571  1273                     __pstringtext24:	
  7572  1273                     STR_27:	
  7573  1273  346B               	retlw	107	;'k'
  7574  1274  346E               	retlw	110	;'n'
  7575  1275  346F               	retlw	111	;'o'
  7576  1276  3463               	retlw	99	;'c'
  7577  1277  346B               	retlw	107	;'k'
  7578  1278  3420               	retlw	32	;' '
  7579  1279  3425               	retlw	37	;'%'
  7580  127A  3430               	retlw	48	;'0'
  7581  127B  3433               	retlw	51	;'3'
  7582  127C  3464               	retlw	100	;'d'
  7583  127D  3400               	retlw	0
  7584                           
  7585                           	psect	stringtext25
  7586  1288                     __pstringtext25:	
  7587  1288                     STR_35:	
  7588  1288  3448               	retlw	72	;'H'
  7589  1289  3440               	retlw	64	;'@'
  7590  128A  3463               	retlw	99	;'c'
  7591  128B  346B               	retlw	107	;'k'
  7592  128C  3465               	retlw	101	;'e'
  7593  128D  3472               	retlw	114	;'r'
  7594  128E  3431               	retlw	49	;'1'
  7595  128F  3430               	retlw	48	;'0'
  7596  1290  3431               	retlw	49	;'1'
  7597  1291  3400               	retlw	0
  7598                           
  7599                           	psect	stringtext26
  7600  1292                     __pstringtext26:	
  7601  1292                     STR_25:	
  7602  1292  3470               	retlw	112	;'p'
  7603  1293  3461               	retlw	97	;'a'
  7604  1294  3469               	retlw	105	;'i'
  7605  1295  3472               	retlw	114	;'r'
  7606  1296  3420               	retlw	32	;' '
  7607  1297  3425               	retlw	37	;'%'
  7608  1298  3430               	retlw	48	;'0'
  7609  1299  3433               	retlw	51	;'3'
  7610  129A  3464               	retlw	100	;'d'
  7611  129B  3400               	retlw	0
  7612                           
  7613                           	psect	stringtext27
  7614  129C                     __pstringtext27:	
  7615  129C                     STR_17:	
  7616  129C  3444               	retlw	68	;'D'
  7617  129D  346F               	retlw	111	;'o'
  7618  129E  3463               	retlw	99	;'c'
  7619  129F  3474               	retlw	116	;'t'
  7620  12A0  346F               	retlw	111	;'o'
  7621  12A1  3472               	retlw	114	;'r'
  7622  12A2  340D               	retlw	13
  7623  12A3  340A               	retlw	10
  7624  12A4  3400               	retlw	0
  7625                           
  7626                           	psect	stringtext28
  7627  12A5                     __pstringtext28:	
  7628  12A5                     STR_3:	
  7629  12A5  3472               	retlw	114	;'r'
  7630  12A6  3465               	retlw	101	;'e'
  7631  12A7  3462               	retlw	98	;'b'
  7632  12A8  346F               	retlw	111	;'o'
  7633  12A9  346F               	retlw	111	;'o'
  7634  12AA  3474               	retlw	116	;'t'
  7635  12AB  340D               	retlw	13
  7636  12AC  340A               	retlw	10
  7637  12AD  3400               	retlw	0
  7638                           
  7639                           	psect	stringtext29
  7640  12B6                     __pstringtext29:	
  7641  12B6                     STR_14:	
  7642  12B6  3450               	retlw	80	;'P'
  7643  12B7  3472               	retlw	114	;'r'
  7644  12B8  346F               	retlw	111	;'o'
  7645  12B9  3463               	retlw	99	;'c'
  7646  12BA  3465               	retlw	101	;'e'
  7647  12BB  3465               	retlw	101	;'e'
  7648  12BC  3464               	retlw	100	;'d'
  7649  12BD  3400               	retlw	0
  7650                           
  7651                           	psect	stringtext30
  7652  12C5                     __pstringtext30:	
  7653  12C5                     STR_36:	
  7654  12C5  3428               	retlw	40	;'('
  7655  12C6  346E               	retlw	110	;'n'
  7656  12C7  3475               	retlw	117	;'u'
  7657  12C8  346C               	retlw	108	;'l'
  7658  12C9  346C               	retlw	108	;'l'
  7659  12CA  3429               	retlw	41	;')'
  7660  12CB  3400               	retlw	0
  7661                           
  7662                           	psect	stringtext31
  7663  12CC                     __pstringtext31:	
  7664  12CC                     STR_21:	
  7665  12CC  3453               	retlw	83	;'S'
  7666  12CD  3474               	retlw	116	;'t'
  7667  12CE  3461               	retlw	97	;'a'
  7668  12CF  3474               	retlw	116	;'t'
  7669  12D0  343A               	retlw	58	;':'
  7670  12D1  3420               	retlw	32	;' '
  7671  12D2  3400               	retlw	0
  7672                           
  7673                           	psect	stringtext32
  7674  12D3                     __pstringtext32:	
  7675  12D3                     STR_16:	
  7676  12D3  3474               	retlw	116	;'t'
  7677  12D4  3468               	retlw	104	;'h'
  7678  12D5  3465               	retlw	101	;'e'
  7679  12D6  3472               	retlw	114	;'r'
  7680  12D7  3465               	retlw	101	;'e'
  7681  12D8  343F               	retlw	63	;'?'
  7682  12D9  3400               	retlw	0
  7683                           
  7684                           	psect	stringtext33
  7685  12DA                     __pstringtext33:	
  7686  12DA                     STR_4:	
  7687  12DA  3473               	retlw	115	;'s'
  7688  12DB  3461               	retlw	97	;'a'
  7689  12DC  3476               	retlw	118	;'v'
  7690  12DD  3465               	retlw	101	;'e'
  7691  12DE  340D               	retlw	13
  7692  12DF  340A               	retlw	10
  7693  12E0  3400               	retlw	0
  7694                           
  7695                           	psect	stringtext34
  7696  12E1                     __pstringtext34:	
  7697  12E1                     STR_2:	
  7698  12E1  3465               	retlw	101	;'e'
  7699  12E2  3478               	retlw	120	;'x'
  7700  12E3  3469               	retlw	105	;'i'
  7701  12E4  3474               	retlw	116	;'t'
  7702  12E5  340D               	retlw	13
  7703  12E6  340A               	retlw	10
  7704  12E7  3400               	retlw	0
  7705                           
  7706                           	psect	stringtext35
  7707  12EE                     __pstringtext35:	
  7708  12EE                     STR_12:	
  7709  12EE  3449               	retlw	73	;'I'
  7710  12EF  3446               	retlw	70	;'F'
  7711  12F0  343D               	retlw	61	;'='
  7712  12F1  3455               	retlw	85	;'U'
  7713  12F2  3450               	retlw	80	;'P'
  7714  12F3  3400               	retlw	0
  7715                           
  7716                           	psect	stringtext36
  7717  12FE                     __pstringtext36:	
  7718  12FE                     STR_23:	
  7719  12FE  3431               	retlw	49	;'1'
  7720  12FF  3433               	retlw	51	;'3'
  7721  1300  3433               	retlw	51	;'3'
  7722  1301  3435               	retlw	53	;'5'
  7723  1302  3400               	retlw	0
  7724                           
  7725                           	psect	stringtext37
  7726  1303                     __pstringtext37:	
  7727  1303                     STR_18:	
  7728  1303  3477               	retlw	119	;'w'
  7729  1304  3468               	retlw	104	;'h'
  7730  1305  346F               	retlw	111	;'o'
  7731  1306  343F               	retlw	63	;'?'
  7732  1307  3400               	retlw	0
  7733                           
  7734                           	psect	stringtext38
  7735  1310                     __pstringtext38:	
  7736  1310                     STR_1:	
  7737  1310  3424               	retlw	36	;'$'
  7738  1311  3424               	retlw	36	;'$'
  7739  1312  3424               	retlw	36	;'$'
  7740  1313  3400               	retlw	0
  7741                           
  7742                           	psect	stringtext39
  7743  0000                     __pstringtext39:	
  7744  11ED                     
  7745                           ; #config settings
  7746  0000                     
  7747                           	psect	cinit
  7748  0826                     start_initialization:	
  7749  0826                     __initialization:	
  7750                           
  7751                           ; Initialize objects allocated to BANK1
  7752  0826  3066               	movlw	low __pidataBANK1
  7753  0827  0084               	movwf	4
  7754  0828  3080               	movlw	(high __pidataBANK1)| (0+128)
  7755  0829  0085               	movwf	5
  7756  082A  30A0               	movlw	low __pdataBANK1
  7757  082B  0086               	movwf	6
  7758  082C  3000               	movlw	high __pdataBANK1
  7759  082D  0087               	movwf	7
  7760  082E  301E               	movlw	30
  7761  082F  3181  2114  3188   	fcall	init_ram
  7762                           
  7763                           ; Initialize objects allocated to BANK2
  7764  0832  30E5               	movlw	low __pidataBANK2
  7765  0833  0084               	movwf	4
  7766  0834  3080               	movlw	(high __pidataBANK2)| (0+128)
  7767  0835  0085               	movwf	5
  7768  0836  3020               	movlw	low __pdataBANK2
  7769  0837  0086               	movwf	6
  7770  0838  3001               	movlw	high __pdataBANK2
  7771  0839  0087               	movwf	7
  7772  083A  300D               	movlw	13
  7773  083B  3181  2114  3188   	fcall	init_ram
  7774  083E  30BE               	movlw	low __pbssBANK1
  7775                           
  7776                           ; Clear objects allocated to COMMON
  7777  083F  01FC               	clrf	__pbssCOMMON& (0+127)
  7778                           
  7779                           ; Clear objects allocated to BANK0
  7780  0840  01EE               	clrf	__pbssBANK0& (0+127)
  7781  0841  01EF               	clrf	(__pbssBANK0+1)& (0+127)
  7782                           
  7783                           ; Clear objects allocated to BANK1
  7784  0842  0084               	movwf	4
  7785  0843  3000               	movlw	high __pbssBANK1
  7786  0844  0085               	movwf	5
  7787  0845  3015               	movlw	21
  7788  0846  3181  211A  3188   	fcall	clear_ram0
  7789  0849                     end_of_initialization:	
  7790                           ;End of C runtime variable initialization code
  7791                           
  7792  0849                     __end_of__initialization:	
  7793  0849  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  7794  084A  0020               	movlb	0
  7795  084B  2973               	ljmp	_main	;jump to C main() function
  7796  084C                     __ptext33:	
  7797 ;; *************** function _WiFly_EnterCMDMode *****************
  7798 ;; Defined at:
  7799 ;;		line 97 in file "mcc_generated_files/WiFly.c"
  7800 ;; Parameters:    Size  Location     Type
  7801 ;;		None
  7802 ;; Auto vars:     Size  Location     Type
  7803 ;;		None
  7804 ;; Return value:  Size  Location     Type
  7805 ;;                  1    wreg      void 
  7806 ;; Registers used:
  7807 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7808 ;; Tracked objects:
  7809 ;;		On entry : 1F/1
  7810 ;;		On exit  : 1F/1
  7811 ;;		Unchanged: 0/0
  7812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7815 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7816 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7817 ;;Total ram usage:        2 bytes
  7818 ;; Hardware stack levels used:    1
  7819 ;; Hardware stack levels required when called:    7
  7820 ;; This function calls:
  7821 ;;		_Clear_RX_Buffer
  7822 ;;		_WiFly_CheckRecv
  7823 ;;		_WiFly_Send
  7824 ;; This function is called by:
  7825 ;;		_WiFly_CheckInCMD
  7826 ;; This function uses a non-reentrant model
  7827 ;;
  7828                           
  7829                           
  7830                           ;psect for function _WiFly_EnterCMDMode
  7831  084C                     _WiFly_EnterCMDMode:	
  7832  084C                     l3556:	
  7833                           ;incstack = 0
  7834                           ; Regs used in _WiFly_EnterCMDMode: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7835                           
  7836                           
  7837                           ;WiFly.c: 98: Clear_RX_Buffer();
  7838  084C  22E4  3188         	fcall	_Clear_RX_Buffer
  7839                           
  7840                           ;WiFly.c: 99: _delay((unsigned long)((275)*(32000000/4000.0)));
  7841  084E  300C               	movlw	12
  7842  084F  00FA               	movwf	??_WiFly_EnterCMDMode+1
  7843  0850  302A               	movlw	42
  7844  0851  00F9               	movwf	??_WiFly_EnterCMDMode
  7845  0852  301A               	movlw	26
  7846  0853                     u3577:	
  7847  0853  0B89               	decfsz	9,f
  7848  0854  2853               	goto	u3577
  7849  0855  0BF9               	decfsz	??_WiFly_EnterCMDMode,f
  7850  0856  2853               	goto	u3577
  7851  0857  0BFA               	decfsz	??_WiFly_EnterCMDMode+1,f
  7852  0858  2853               	goto	u3577
  7853  0859  3200               	nop2
  7854                           
  7855                           ;WiFly.c: 100: WiFly_Send("$$$");
  7856  085A  3010               	movlw	low (STR_1| (0+32768))
  7857  085B  00F2               	movwf	WiFly_Send@command
  7858  085C  3093               	movlw	high (STR_1| (0+32768))
  7859  085D  00F3               	movwf	WiFly_Send@command+1
  7860  085E  2698  3188         	fcall	_WiFly_Send
  7861                           
  7862                           ;WiFly.c: 101: WiFly_CheckRecv(cmdStr);
  7863  0860  300C               	movlw	low (_cmdStr| (0+32768))
  7864  0861  00F6               	movwf	WiFly_CheckRecv@chkString
  7865  0862  3093               	movlw	high (_cmdStr| (0+32768))
  7866  0863  00F7               	movwf	WiFly_CheckRecv@chkString+1
  7867  0864  20E1  3188         	fcall	_WiFly_CheckRecv
  7868                           
  7869                           ;WiFly.c: 102: _delay((unsigned long)((275)*(32000000/4000.0)));
  7870  0866  300C               	movlw	12
  7871  0867  00FA               	movwf	??_WiFly_EnterCMDMode+1
  7872  0868  302A               	movlw	42
  7873  0869  00F9               	movwf	??_WiFly_EnterCMDMode
  7874  086A  301A               	movlw	26
  7875  086B                     u3587:	
  7876  086B  0B89               	decfsz	9,f
  7877  086C  286B               	goto	u3587
  7878  086D  0BF9               	decfsz	??_WiFly_EnterCMDMode,f
  7879  086E  286B               	goto	u3587
  7880  086F  0BFA               	decfsz	??_WiFly_EnterCMDMode+1,f
  7881  0870  286B               	goto	u3587
  7882  0871  3200               	nop2
  7883                           
  7884                           ;WiFly.c: 103: inCMD = 1;
  7885  0872  0021               	movlb	1	; select bank1
  7886  0873  01EA               	clrf	_inCMD^(0+128)
  7887  0874  0AEA               	incf	_inCMD^(0+128),f
  7888  0875  0008               	return
  7889  0876                     __end_of_WiFly_EnterCMDMode:	
  7890  0876                     __ptext4:	
  7891 ;; *************** function _WiFly_FactoryReset *****************
  7892 ;; Defined at:
  7893 ;;		line 155 in file "mcc_generated_files/WiFly.c"
  7894 ;; Parameters:    Size  Location     Type
  7895 ;;		None
  7896 ;; Auto vars:     Size  Location     Type
  7897 ;;		None
  7898 ;; Return value:  Size  Location     Type
  7899 ;;                  1    wreg      void 
  7900 ;; Registers used:
  7901 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7902 ;; Tracked objects:
  7903 ;;		On entry : 1E/1
  7904 ;;		On exit  : 1F/1
  7905 ;;		Unchanged: 0/0
  7906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7909 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7910 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7911 ;;Total ram usage:        2 bytes
  7912 ;; Hardware stack levels used:    1
  7913 ;; Hardware stack levels required when called:   11
  7914 ;; This function calls:
  7915 ;;		_WiFly_CheckRecv
  7916 ;;		_WiFly_RebootCMD
  7917 ;;		_WiFly_SaveConfig
  7918 ;;		_WiFly_SendCMD
  7919 ;;		_WiFly_SendString
  7920 ;; This function is called by:
  7921 ;;		_connect_network
  7922 ;;		_main
  7923 ;; This function uses a non-reentrant model
  7924 ;;
  7925                           
  7926                           
  7927                           ;psect for function _WiFly_FactoryReset
  7928  0876                     _WiFly_FactoryReset:	
  7929                           
  7930                           ;incstack = 0
  7931                           ; Regs used in _WiFly_FactoryReset: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7932                           ;WiFly.c: 157: do { LATDbits.LATD2 = 0; } while(0);
  7933  0876  0020               	movlb	0	; select bank0
  7934  0877  1119               	bcf	25,2	;volatile
  7935                           
  7936                           ;WiFly.c: 158: inCMD = 0;
  7937  0878  0021               	movlb	1	; select bank1
  7938  0879  3003               	movlw	3
  7939  087A  01EA               	clrf	_inCMD^(0+128)
  7940                           
  7941                           ;WiFly.c: 159: _delay((unsigned long)((50)*(32000000/4000.0)));
  7942  087B  0020               	movlb	0	; select bank0
  7943  087C  00A7               	movwf	??_WiFly_FactoryReset+1
  7944  087D  3008               	movlw	8
  7945  087E  00A6               	movwf	??_WiFly_FactoryReset
  7946  087F  3077               	movlw	119
  7947  0880                     u3557:	
  7948  0880  0B89               	decfsz	9,f
  7949  0881  2880               	goto	u3557
  7950  0882  0BA6               	decfsz	??_WiFly_FactoryReset,f
  7951  0883  2880               	goto	u3557
  7952  0884  0BA7               	decfsz	??_WiFly_FactoryReset+1,f
  7953  0885  2880               	goto	u3557
  7954  0886  0020               	movlb	0	; select bank0
  7955  0887  1519               	bsf	25,2	;volatile
  7956                           
  7957                           ;WiFly.c: 161: WiFly_CheckRecv(hardRebootStr);
  7958  0888  27D8  3188         	fcall	PL30	;call to abstracted procedure
  7959  088A  20E1  3188         	fcall	_WiFly_CheckRecv
  7960                           
  7961                           ;WiFly.c: 163: WiFly_SendString("factory RESET\r\n");
  7962  088C  3020               	movlw	low (STR_5| (0+32768))
  7963  088D  00F5               	movwf	WiFly_SendString@sendString
  7964  088E  3092               	movlw	high (STR_5| (0+32768))
  7965  088F  00F6               	movwf	WiFly_SendString@sendString+1
  7966  0890  2685  3188         	fcall	_WiFly_SendString
  7967                           
  7968                           ;WiFly.c: 164: WiFly_RebootCMD();
  7969  0892  209C  3188         	fcall	_WiFly_RebootCMD
  7970                           
  7971                           ;WiFly.c: 165: WiFly_SendCMD("set uart mode 0x11\r\n");
  7972  0894  30B1               	movlw	low (STR_6| (0+32768))
  7973  0895  0020               	movlb	0	; select bank0
  7974  0896  00A4               	movwf	WiFly_SendCMD@cmd
  7975  0897  3091               	movlw	high (STR_6| (0+32768))
  7976  0898  00A5               	movwf	WiFly_SendCMD@cmd+1
  7977  0899  268C  3188         	fcall	_WiFly_SendCMD
  7978                           
  7979                           ;WiFly.c: 166: WiFly_SaveConfig();
  7980  089B  2EB2               	ljmp	l3958
  7981  089C                     __end_of_WiFly_FactoryReset:	
  7982  089C                     __ptext7:	
  7983 ;; *************** function _WiFly_RebootCMD *****************
  7984 ;; Defined at:
  7985 ;;		line 140 in file "mcc_generated_files/WiFly.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;		None
  7988 ;; Auto vars:     Size  Location     Type
  7989 ;;		None
  7990 ;; Return value:  Size  Location     Type
  7991 ;;                  1    wreg      void 
  7992 ;; Registers used:
  7993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7994 ;; Tracked objects:
  7995 ;;		On entry : 0/0
  7996 ;;		On exit  : 1F/1
  7997 ;;		Unchanged: 0/0
  7998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8000 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8002 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8003 ;;Total ram usage:        0 bytes
  8004 ;; Hardware stack levels used:    1
  8005 ;; Hardware stack levels required when called:    9
  8006 ;; This function calls:
  8007 ;;		_WiFly_CheckInCMD
  8008 ;;		_WiFly_CheckRecv
  8009 ;;		_WiFly_SendString
  8010 ;; This function is called by:
  8011 ;;		_WiFly_SaveConfig
  8012 ;;		_WiFly_FactoryReset
  8013 ;; This function uses a non-reentrant model
  8014 ;;
  8015                           
  8016                           
  8017                           ;psect for function _WiFly_RebootCMD
  8018  089C                     _WiFly_RebootCMD:	
  8019  089C                     l3868:	
  8020                           ;incstack = 0
  8021                           ; Regs used in _WiFly_RebootCMD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8022                           
  8023                           
  8024                           ;WiFly.c: 142: WiFly_CheckInCMD();
  8025  089C  23B4  3188         	fcall	_WiFly_CheckInCMD
  8026                           
  8027                           ;WiFly.c: 143: WiFly_SendString("reboot\r\n");
  8028  089E  30A5               	movlw	low (STR_3| (0+32768))
  8029  089F  00F5               	movwf	WiFly_SendString@sendString
  8030  08A0  3092               	movlw	high (STR_3| (0+32768))
  8031  08A1  00F6               	movwf	WiFly_SendString@sendString+1
  8032  08A2  2685  3188         	fcall	_WiFly_SendString
  8033                           
  8034                           ;WiFly.c: 144: WiFly_CheckRecv(softRebootStr);
  8035  08A4  30BE               	movlw	low (_softRebootStr| (0+32768))
  8036  08A5  00F6               	movwf	WiFly_CheckRecv@chkString
  8037  08A6  3092               	movlw	high (_softRebootStr| (0+32768))
  8038  08A7  00F7               	movwf	WiFly_CheckRecv@chkString+1
  8039  08A8  20E1  3188         	fcall	_WiFly_CheckRecv
  8040                           
  8041                           ;WiFly.c: 145: WiFly_CheckRecv(hardRebootStr);
  8042  08AA  27D8  3188         	fcall	PL30	;call to abstracted procedure
  8043  08AC  20E1               	fcall	_WiFly_CheckRecv
  8044                           
  8045                           ;WiFly.c: 146: inCMD = 0;
  8046  08AD  0021               	movlb	1	; select bank1
  8047  08AE  01EA               	clrf	_inCMD^(0+128)
  8048  08AF  0008               	return
  8049  08B0                     __end_of_WiFly_RebootCMD:	
  8050  08B0                     __ptext2:	
  8051 ;; *************** function _connect_network *****************
  8052 ;; Defined at:
  8053 ;;		line 263 in file "main.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;  ssid            2   70[BANK0 ] PTR const unsigned char 
  8056 ;;		 -> STR_34(14), 
  8057 ;;  passwd          2   72[BANK0 ] PTR const unsigned char 
  8058 ;;		 -> STR_35(10), 
  8059 ;; Auto vars:     Size  Location     Type
  8060 ;;		None
  8061 ;; Return value:  Size  Location     Type
  8062 ;;                  1    wreg      void 
  8063 ;; Registers used:
  8064 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8065 ;; Tracked objects:
  8066 ;;		On entry : 1F/0
  8067 ;;		On exit  : 1F/0
  8068 ;;		Unchanged: 0/0
  8069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8070 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8073 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8074 ;;Total ram usage:        4 bytes
  8075 ;; Hardware stack levels used:    1
  8076 ;; Hardware stack levels required when called:   12
  8077 ;; This function calls:
  8078 ;;		_WiFly_CheckRecv
  8079 ;;		_WiFly_FactoryReset
  8080 ;;		_WiFly_SaveConfig
  8081 ;;		_WiFly_SendCMD
  8082 ;;		_WiFly_SendCMD_SingleArg
  8083 ;;		_WiFly_SendString
  8084 ;; This function is called by:
  8085 ;;		_main
  8086 ;; This function uses a non-reentrant model
  8087 ;;
  8088                           
  8089                           
  8090                           ;psect for function _connect_network
  8091  08B0                     _connect_network:	
  8092                           
  8093                           ;incstack = 0
  8094                           ; Regs used in _connect_network: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8095                           ;main.c: 265: do { LATDbits.LATD3 = 1; } while(0);
  8096  08B0  1599               	bsf	25,3	;volatile
  8097                           
  8098                           ;main.c: 266: WiFly_FactoryReset();
  8099  08B1  2076  3188         	fcall	_WiFly_FactoryReset
  8100                           
  8101                           ;main.c: 268: WiFly_SendCMD("set ip dhcp 1\r\n");
  8102  08B3  3010               	movlw	low (STR_7| (0+32768))
  8103  08B4  0020               	movlb	0	; select bank0
  8104  08B5  00A4               	movwf	WiFly_SendCMD@cmd
  8105  08B6  3092               	movlw	high (STR_7| (0+32768))
  8106  08B7  00A5               	movwf	WiFly_SendCMD@cmd+1
  8107  08B8  268C  3188         	fcall	_WiFly_SendCMD
  8108                           
  8109                           ;main.c: 269: WiFly_SendCMD_SingleArg("set wlan passphrase %s\r\n", passwd);
  8110  08BA  3083               	movlw	low (STR_8| (0+32768))
  8111  08BB  00BA               	movwf	WiFly_SendCMD_SingleArg@cmdFormat
  8112  08BC  3091               	movlw	high (STR_8| (0+32768))
  8113  08BD  00BB               	movwf	WiFly_SendCMD_SingleArg@cmdFormat+1
  8114  08BE  0869               	movf	connect_network@passwd+1,w
  8115  08BF  00BD               	movwf	WiFly_SendCMD_SingleArg@arg+1
  8116  08C0  0868               	movf	connect_network@passwd,w
  8117  08C1  00BC               	movwf	WiFly_SendCMD_SingleArg@arg
  8118  08C2  2117  3188         	fcall	_WiFly_SendCMD_SingleArg
  8119                           
  8120                           ;main.c: 270: WiFly_SendCMD_SingleArg("set wlan ssid %s\r\n", ssid);
  8121  08C4  30DA               	movlw	low (STR_9| (0+32768))
  8122  08C5  00BA               	movwf	WiFly_SendCMD_SingleArg@cmdFormat
  8123  08C6  3091               	movlw	high (STR_9| (0+32768))
  8124  08C7  00BB               	movwf	WiFly_SendCMD_SingleArg@cmdFormat+1
  8125  08C8  0867               	movf	connect_network@ssid+1,w
  8126  08C9  00BD               	movwf	WiFly_SendCMD_SingleArg@arg+1
  8127  08CA  0866               	movf	connect_network@ssid,w
  8128  08CB  00BC               	movwf	WiFly_SendCMD_SingleArg@arg
  8129  08CC  2117  3188         	fcall	_WiFly_SendCMD_SingleArg
  8130                           
  8131                           ;main.c: 271: WiFly_SendCMD("set wlan join 1\r\n");
  8132  08CE  30ED               	movlw	low (STR_10| (0+32768))
  8133  08CF  00A4               	movwf	WiFly_SendCMD@cmd
  8134  08D0  3091               	movlw	high (STR_10| (0+32768))
  8135  08D1  00A5               	movwf	WiFly_SendCMD@cmd+1
  8136  08D2  268C  3188         	fcall	_WiFly_SendCMD
  8137                           
  8138                           ;main.c: 272: WiFly_SendString("set ip protocol 08\r\n");
  8139  08D4  309C               	movlw	low (STR_11| (0+32768))
  8140  08D5  00F5               	movwf	WiFly_SendString@sendString
  8141  08D6  3091               	movlw	high (STR_11| (0+32768))
  8142  08D7  00F6               	movwf	WiFly_SendString@sendString+1
  8143  08D8  2685  3188         	fcall	_WiFly_SendString
  8144                           
  8145                           ;main.c: 273: WiFly_SaveConfig();
  8146  08DA  26B2  3188         	fcall	_WiFly_SaveConfig
  8147                           
  8148                           ;main.c: 274: WiFly_CheckRecv("IF=UP");
  8149  08DC  30EE               	movlw	low (STR_12| (0+32768))
  8150  08DD  00F6               	movwf	WiFly_CheckRecv@chkString
  8151  08DE  3092               	movlw	high (STR_12| (0+32768))
  8152  08DF  00F7               	movwf	WiFly_CheckRecv@chkString+1
  8153  08E0  28E1               	ljmp	l3542
  8154  08E1                     __end_of_connect_network:	
  8155  08E1                     __ptext34:	
  8156 ;; *************** function _WiFly_CheckRecv *****************
  8157 ;; Defined at:
  8158 ;;		line 79 in file "mcc_generated_files/WiFly.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;  chkString       2    6[COMMON] PTR const unsigned char 
  8161 ;;		 -> STR_33(6), openStr(5), STR_12(6), hardRebootStr(6), 
  8162 ;;		 -> softRebootStr(7), aokStr(4), endStr(5), cmdStr(4), 
  8163 ;; Auto vars:     Size  Location     Type
  8164 ;;  i               2    2[BANK0 ] unsigned int 
  8165 ;;  length          2    0[BANK0 ] unsigned int 
  8166 ;; Return value:  Size  Location     Type
  8167 ;;                  1    wreg      void 
  8168 ;; Registers used:
  8169 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8170 ;; Tracked objects:
  8171 ;;		On entry : 0/1
  8172 ;;		On exit  : 1F/0
  8173 ;;		Unchanged: 0/0
  8174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8176 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8177 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8178 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8179 ;;Total ram usage:        7 bytes
  8180 ;; Hardware stack levels used:    1
  8181 ;; Hardware stack levels required when called:    6
  8182 ;; This function calls:
  8183 ;;		_EUSART_Read
  8184 ;;		_EUSART_is_rx_ready
  8185 ;;		_strlen
  8186 ;; This function is called by:
  8187 ;;		_WiFly_EnterCMDMode
  8188 ;;		_WiFly_SendCMD_SingleArg
  8189 ;;		_WiFly_SendCMD
  8190 ;;		_WiFly_RebootCMD
  8191 ;;		_WiFly_FactoryReset
  8192 ;;		_connect_network
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           
  8196                           
  8197                           ;psect for function _WiFly_CheckRecv
  8198  08E1                     _WiFly_CheckRecv:	
  8199  08E1                     l3542:	
  8200                           ;incstack = 0
  8201                           ; Regs used in _WiFly_CheckRecv: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8202                           
  8203                           
  8204                           ;WiFly.c: 80: size_t length = strlen(chkString);
  8205  08E1  0877               	movf	WiFly_CheckRecv@chkString+1,w
  8206  08E2  00F2               	movwf	strlen@s+1
  8207  08E3  0876               	movf	WiFly_CheckRecv@chkString,w
  8208  08E4  00F1               	movwf	strlen@s
  8209  08E5  2367  3188         	fcall	_strlen
  8210  08E7  0872               	movf	?_strlen+1,w
  8211  08E8  0020               	movlb	0	; select bank0
  8212  08E9  00A1               	movwf	WiFly_CheckRecv@length+1
  8213  08EA  0871               	movf	?_strlen,w
  8214  08EB  00A0               	movwf	WiFly_CheckRecv@length
  8215                           
  8216                           ;WiFly.c: 81: size_t i = 0;
  8217  08EC  01A2               	clrf	WiFly_CheckRecv@i
  8218  08ED  01A3               	clrf	WiFly_CheckRecv@i+1
  8219                           
  8220                           ;WiFly.c: 83: while (i < length) {
  8221  08EE  290D               	goto	l3554
  8222  08EF                     l3546:	
  8223                           
  8224                           ;WiFly.c: 85: if (uart[WiFly].Read() == chkString[i]) {
  8225  08EF  0876               	movf	WiFly_CheckRecv@chkString,w
  8226  08F0  0020               	movlb	0	; select bank0
  8227  08F1  0722               	addwf	WiFly_CheckRecv@i,w
  8228  08F2  0084               	movwf	4
  8229  08F3  0877               	movf	WiFly_CheckRecv@chkString+1,w
  8230  08F4  3D23               	addwfc	WiFly_CheckRecv@i+1,w
  8231  08F5  0085               	movwf	5
  8232  08F6  0800               	movf	0,w	;code access
  8233  08F7  00F8               	movwf	??_WiFly_CheckRecv
  8234  08F8  27C6               	fcall	PL22	;call to abstracted procedure
  8235  08F9  008A               	movwf	10
  8236  08FA  3F00               	moviw [0]fsr0
  8237  08FB  000A               	callw
  8238  08FC  3188               	pagesel	$
  8239  08FD  0678               	xorwf	??_WiFly_CheckRecv,w
  8240  08FE  1D03               	skipz
  8241  08FF  2905               	goto	l3550
  8242                           
  8243                           ;WiFly.c: 86: i++;
  8244  0900  0020               	movlb	0	; select bank0
  8245  0901  0AA2               	incf	WiFly_CheckRecv@i,f
  8246  0902  1903               	skipnz
  8247  0903  0AA3               	incf	WiFly_CheckRecv@i+1,f
  8248                           
  8249                           ;WiFly.c: 87: } else {
  8250  0904  2908               	goto	l3552
  8251  0905                     l3550:	
  8252                           
  8253                           ;WiFly.c: 88: i = 0;
  8254  0905  0020               	movlb	0	; select bank0
  8255  0906  01A2               	clrf	WiFly_CheckRecv@i
  8256  0907  01A3               	clrf	WiFly_CheckRecv@i+1
  8257  0908                     l3552:	
  8258  0908  22BC  3188         	fcall	_EUSART_is_rx_ready
  8259  090A  3A00               	xorlw	0
  8260  090B  1D03               	skipz
  8261  090C  28EF               	goto	l3546
  8262  090D                     l3554:	
  8263  090D  0020               	movlb	0	; select bank0
  8264  090E  0821               	movf	WiFly_CheckRecv@length+1,w
  8265  090F  0223               	subwf	WiFly_CheckRecv@i+1,w
  8266  0910  1D03               	skipz
  8267  0911  2914               	goto	u2735
  8268  0912  0820               	movf	WiFly_CheckRecv@length,w
  8269  0913  0222               	subwf	WiFly_CheckRecv@i,w
  8270  0914                     u2735:	
  8271  0914  1803               	btfsc	3,0
  8272  0915  0008               	return
  8273  0916  2908               	goto	l3552
  8274  0917                     __end_of_WiFly_CheckRecv:	
  8275  0917                     __ptext3:	
  8276 ;; *************** function _WiFly_SendCMD_SingleArg *****************
  8277 ;; Defined at:
  8278 ;;		line 115 in file "mcc_generated_files/WiFly.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  cmdFormat       2   26[BANK0 ] PTR const unsigned char 
  8281 ;;		 -> STR_30(19), STR_29(25), STR_9(19), STR_8(25), 
  8282 ;;  arg             2   28[BANK0 ] PTR const unsigned char 
  8283 ;;		 -> STR_35(10), STR_34(14), 
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;  txBuffer       40   30[BANK0 ] unsigned char [40]
  8286 ;; Return value:  Size  Location     Type
  8287 ;;                  1    wreg      void 
  8288 ;; Registers used:
  8289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8290 ;; Tracked objects:
  8291 ;;		On entry : 1F/0
  8292 ;;		On exit  : 1F/0
  8293 ;;		Unchanged: 0/0
  8294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8295 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8296 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8298 ;;      Totals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8299 ;;Total ram usage:       44 bytes
  8300 ;; Hardware stack levels used:    1
  8301 ;; Hardware stack levels required when called:    9
  8302 ;; This function calls:
  8303 ;;		_Clear_RX_Buffer
  8304 ;;		_WiFly_CheckInCMD
  8305 ;;		_WiFly_CheckRecv
  8306 ;;		_WiFly_Send
  8307 ;;		_sprintf
  8308 ;; This function is called by:
  8309 ;;		_connect_network
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           
  8314                           ;psect for function _WiFly_SendCMD_SingleArg
  8315  0917                     _WiFly_SendCMD_SingleArg:	
  8316                           
  8317                           ;WiFly.c: 116: WiFly_CheckInCMD();
  8318                           
  8319                           ;incstack = 0
  8320                           ; Regs used in _WiFly_SendCMD_SingleArg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8321  0917  23B4  3188         	fcall	_WiFly_CheckInCMD
  8322                           
  8323                           ;WiFly.c: 117: Clear_RX_Buffer();
  8324  0919  22E4  3188         	fcall	_Clear_RX_Buffer
  8325                           
  8326                           ;WiFly.c: 118: char txBuffer[40];
  8327                           ;WiFly.c: 119: sprintf(txBuffer, cmdFormat, arg);
  8328  091B  0020               	movlb	0	; select bank0
  8329  091C  083B               	movf	WiFly_SendCMD_SingleArg@cmdFormat+1,w
  8330  091D  00A2               	movwf	sprintf@f+1
  8331  091E  083A               	movf	WiFly_SendCMD_SingleArg@cmdFormat,w
  8332  091F  00A1               	movwf	sprintf@f
  8333  0920  083D               	movf	WiFly_SendCMD_SingleArg@arg+1,w
  8334  0921  00A4               	movwf	(low ((?_sprintf| 0+2))+1)
  8335  0922  083C               	movf	WiFly_SendCMD_SingleArg@arg,w
  8336  0923  00A3               	movwf	low ((?_sprintf| 0+2))
  8337  0924  303E               	movlw	(low (WiFly_SendCMD_SingleArg@txBuffer| 0))& (0+255)
  8338  0925  2434  3188         	fcall	_sprintf
  8339                           
  8340                           ;WiFly.c: 120: WiFly_Send(txBuffer);
  8341  0927  303E               	movlw	low WiFly_SendCMD_SingleArg@txBuffer
  8342  0928  00F2               	movwf	WiFly_Send@command
  8343  0929  3000               	movlw	high WiFly_SendCMD_SingleArg@txBuffer
  8344  092A  00F3               	movwf	WiFly_Send@command+1
  8345  092B  2698  3188         	fcall	_WiFly_Send
  8346                           
  8347                           ;WiFly.c: 121: WiFly_CheckRecv(aokStr);
  8348  092D  27DD  3188         	fcall	PL32	;call to abstracted procedure
  8349  092F  28E1               	ljmp	l3542
  8350  0930                     __end_of_WiFly_SendCMD_SingleArg:	
  8351  0930                     __ptext22:	
  8352 ;; *************** function _Knock *****************
  8353 ;; Defined at:
  8354 ;;		line 241 in file "main.c"
  8355 ;; Parameters:    Size  Location     Type
  8356 ;;		None
  8357 ;; Auto vars:     Size  Location     Type
  8358 ;;  knockString    10    2[BANK1 ] unsigned char [10]
  8359 ;;  returnVal       1   12[BANK1 ] unsigned char 
  8360 ;; Return value:  Size  Location     Type
  8361 ;;                  1    wreg      unsigned char 
  8362 ;; Registers used:
  8363 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8364 ;; Tracked objects:
  8365 ;;		On entry : 1F/0
  8366 ;;		On exit  : 1F/10
  8367 ;;		Unchanged: 0/0
  8368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8370 ;;      Locals:         0       0      11       0       0       0       0       0       0       0       0       0       
      +0       0
  8371 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0
  8372 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0
  8373 ;;Total ram usage:       13 bytes
  8374 ;; Hardware stack levels used:    1
  8375 ;; Hardware stack levels required when called:   12
  8376 ;; This function calls:
  8377 ;;		_RELAY_RL1_Disengage
  8378 ;;		_RELAY_RL1_Engage
  8379 ;;		_TMR4_StopTimer
  8380 ;;		_get_response
  8381 ;;		_goto_mode
  8382 ;;		_send_message
  8383 ;;		_sprintf
  8384 ;; This function is called by:
  8385 ;;		_main
  8386 ;; This function uses a non-reentrant model
  8387 ;;
  8388                           
  8389                           
  8390                           ;psect for function _Knock
  8391  0930                     _Knock:	
  8392                           
  8393                           ;main.c: 242: RELAY_RL1_Engage();
  8394                           
  8395                           ;incstack = 0
  8396                           ; Regs used in _Knock: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8397  0930  22BA  3188         	fcall	_RELAY_RL1_Engage
  8398                           
  8399                           ;main.c: 243: uint8_t returnVal;
  8400                           ;main.c: 244: TMR4_StopTimer();
  8401  0932  2290  3188         	fcall	_TMR4_StopTimer
  8402                           
  8403                           ;main.c: 245: char knockString[] = "knock 123";
  8404  0934  30A0               	movlw	low Knock@F15440
  8405  0935  0086               	movwf	6
  8406  0936  3000               	movlw	high Knock@F15440
  8407  0937  0087               	movwf	7
  8408  0938  30D5               	movlw	low Knock@knockString
  8409  0939  0084               	movwf	4
  8410  093A  3000               	movlw	high Knock@knockString
  8411  093B  0085               	movwf	5
  8412  093C  300A               	movlw	10
  8413  093D  0021               	movlb	1	; select bank1
  8414  093E  00D3               	movwf	??_Knock^(0+128)
  8415  093F                     u3480:	
  8416  093F  0016               	moviw fsr1++
  8417  0940  001A               	movwi fsr0++
  8418  0941  0BD3               	decfsz	??_Knock^(0+128),f
  8419  0942  293F               	goto	u3480
  8420                           
  8421                           ;main.c: 246: sprintf(knockString, "knock %03d", UID);
  8422  0943  3073               	movlw	low (STR_27| (0+32768))
  8423  0944  0020               	movlb	0	; select bank0
  8424  0945  00A1               	movwf	sprintf@f
  8425  0946  3092               	movlw	high (STR_27| (0+32768))
  8426  0947  27C0  3188         	fcall	PL20	;call to abstracted procedure
  8427  0949  30D5               	movlw	(low (Knock@knockString| 0))& (0+255)
  8428  094A  01A4               	clrf	?_sprintf+3
  8429  094B  2434  3188         	fcall	_sprintf
  8430  094D                     l4142:	
  8431                           
  8432                           ;main.c: 248: send_message(knockString);
  8433  094D  30D5               	movlw	(low (Knock@knockString| 0))& (0+255)
  8434  094E  2271  3188         	fcall	_send_message
  8435                           
  8436                           ;main.c: 249: returnVal = get_response();
  8437  0950  224C  3188         	fcall	_get_response
  8438  0952  0021               	movlb	1	; select bank1
  8439  0953  00DF               	movwf	Knock@returnVal^(0+128)
  8440                           
  8441                           ;main.c: 250: if (returnVal == SUCCESS) {
  8442  0954  085F               	movf	Knock@returnVal^(0+128),w
  8443  0955  1D03               	btfss	3,2
  8444  0956  2959               	goto	l4150
  8445                           
  8446                           ;main.c: 251: goto_mode(PAIRED);
  8447  0957  3001               	movlw	1
  8448  0958  295A               	goto	L2
  8449  0959                     l4150:	
  8450                           ;main.c: 252: } else {
  8451                           
  8452                           
  8453                           ;main.c: 253: goto_mode(UNPAIRED);
  8454  0959  3002               	movlw	2
  8455  095A                     L2:	
  8456  095A  21F9  3188         	fcall	_goto_mode
  8457                           
  8458                           ;main.c: 254: }
  8459                           ;main.c: 255: } while ((returnVal == TX_ERROR));
  8460  095C  3002               	movlw	2
  8461  095D  0021               	movlb	1	; select bank1
  8462  095E  065F               	xorwf	Knock@returnVal^(0+128),w
  8463  095F  1903               	btfsc	3,2
  8464  0960  294D               	goto	l4142
  8465                           
  8466                           ;main.c: 256: WDTCON0bits.SWDTEN = 0;
  8467  0961  0030               	movlb	16	; select bank16
  8468  0962  100C               	bcf	12,0	;volatile
  8469                           
  8470                           ;main.c: 257: _delay((unsigned long)((1000)*(32000000/4000.0)));
  8471  0963  3029               	movlw	41
  8472  0964  0021               	movlb	1	; select bank1
  8473  0965  00D4               	movwf	(??_Knock^(0+128)+1)
  8474  0966  3096               	movlw	150
  8475  0967  00D3               	movwf	??_Knock^(0+128)
  8476  0968  307F               	movlw	127
  8477  0969                     u3567:	
  8478  0969  0B89               	decfsz	9,f
  8479  096A  2969               	goto	u3567
  8480  096B  0BD3               	decfsz	??_Knock^(0+128),f
  8481  096C  2969               	goto	u3567
  8482  096D  0BD4               	decfsz	(??_Knock^(0+128)+1),f
  8483  096E  2969               	goto	u3567
  8484                           
  8485                           ;main.c: 258: RELAY_RL1_Disengage();
  8486  096F  2726               	fcall	_RELAY_RL1_Disengage
  8487                           
  8488                           ;main.c: 259: WDTCON0bits.SWDTEN = 1;
  8489  0970  0030               	movlb	16	; select bank16
  8490  0971  140C               	bsf	12,0	;volatile
  8491  0972  0008               	return
  8492  0973                     __end_of_Knock:	
  8493  0973                     __pmaintext:	
  8494 ;;
  8495 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  8496 ;;
  8497 ;; *************** function _main *****************
  8498 ;; Defined at:
  8499 ;;		line 286 in file "main.c"
  8500 ;; Parameters:    Size  Location     Type
  8501 ;;		None
  8502 ;; Auto vars:     Size  Location     Type
  8503 ;;		None
  8504 ;; Return value:  Size  Location     Type
  8505 ;;                  1    wreg      void 
  8506 ;; Registers used:
  8507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8508 ;; Tracked objects:
  8509 ;;		On entry : B1F/0
  8510 ;;		On exit  : 1F/1
  8511 ;;		Unchanged: 0/0
  8512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8517 ;;Total ram usage:        0 bytes
  8518 ;; Hardware stack levels required when called:   13
  8519 ;; This function calls:
  8520 ;;		_Knock
  8521 ;;		_Pair
  8522 ;;		_SYSTEM_Initialize
  8523 ;;		_TMR2_SetInterruptHandler
  8524 ;;		_TMR2_StartTimer
  8525 ;;		_TMR4_SetInterruptHandler
  8526 ;;		_TMR4_StopTimer
  8527 ;;		_Validate
  8528 ;;		_WiFly_FactoryReset
  8529 ;;		_connect_network
  8530 ;;		_eeprom_read
  8531 ;; This function is called by:
  8532 ;;		Startup code after reset
  8533 ;; This function uses a non-reentrant model
  8534 ;;
  8535                           
  8536                           
  8537                           ;psect for function _main
  8538  0973                     _main:	
  8539                           
  8540                           ;main.c: 287: WDTCON0bits.SWDTEN = 0;
  8541                           
  8542                           ;incstack = 0
  8543                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8544  0973  0030               	movlb	16	; select bank16
  8545  0974  100C               	bcf	12,0	;volatile
  8546                           
  8547                           ;main.c: 289: SYSTEM_Initialize();
  8548  0975  23E1  3188         	fcall	_SYSTEM_Initialize
  8549                           
  8550                           ;main.c: 291: TMR2_SetInterruptHandler(blink);
  8551  0977  3036               	movlw	low _blink
  8552  0978  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  8553  0979  3000               	movlw	high _blink
  8554  097A  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  8555  097B  23D5  3188         	fcall	_TMR2_SetInterruptHandler
  8556                           
  8557                           ;main.c: 292: TMR4_SetInterruptHandler(setFlag);
  8558  097D  300A               	movlw	low _setFlag
  8559  097E  00F1               	movwf	TMR4_SetInterruptHandler@InterruptHandler
  8560  097F  3001               	movlw	high _setFlag
  8561  0980  00F2               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
  8562  0981  23DB  3188         	fcall	_TMR4_SetInterruptHandler
  8563                           
  8564                           ;main.c: 298: (INTCONbits.GIE = 1);
  8565  0983  178B               	bsf	11,7	;volatile
  8566                           
  8567                           ;main.c: 301: (INTCONbits.PEIE = 1);
  8568  0984  170B               	bsf	11,6	;volatile
  8569                           
  8570                           ;main.c: 303: T2PR = 10;
  8571  0985  300A               	movlw	10
  8572  0986  0025               	movlb	5	; select bank5
  8573  0987  008D               	movwf	13	;volatile
  8574                           
  8575                           ;main.c: 305: TMR2_StartTimer();
  8576  0988  22B9  3188         	fcall	_TMR2_StartTimer
  8577                           
  8578                           ;main.c: 306: TMR4_StopTimer();
  8579  098A  2290  3188         	fcall	_TMR4_StopTimer
  8580                           
  8581                           ;main.c: 308: UID = eeprom_read(1);
  8582  098C  3001               	movlw	1
  8583  098D  2717  3188         	fcall	_eeprom_read
  8584  098F  0021               	movlb	1	; select bank1
  8585  0990  00E9               	movwf	_UID^(0+128)
  8586                           
  8587                           ;main.c: 310: WiFly_FactoryReset();
  8588  0991  2076  3188         	fcall	_WiFly_FactoryReset
  8589                           
  8590                           ;main.c: 312: connect_network("C4-2-543_WLAN", "H@cker101");
  8591  0993  3030               	movlw	low (STR_34| (0+32768))
  8592  0994  0020               	movlb	0	; select bank0
  8593  0995  00E6               	movwf	connect_network@ssid
  8594  0996  3092               	movlw	high (STR_34| (0+32768))
  8595  0997  00E7               	movwf	connect_network@ssid+1
  8596  0998  3088               	movlw	low (STR_35| (0+32768))
  8597  0999  00E8               	movwf	connect_network@passwd
  8598  099A  3092               	movlw	high (STR_35| (0+32768))
  8599  099B  00E9               	movwf	connect_network@passwd+1
  8600  099C  20B0  3188         	fcall	_connect_network
  8601                           
  8602                           ;main.c: 314: if (UID == 0xFF) {
  8603  099E  0021               	movlb	1	; select bank1
  8604  099F  0F69               	incfsz	_UID^(0+128),w
  8605  09A0  29A6               	goto	l4184
  8606                           
  8607                           ;main.c: 315: mode = UNPAIRED;
  8608  09A1  3002               	movlw	2
  8609  09A2  00D0               	movwf	_mode^(0+128)
  8610                           
  8611                           ;main.c: 316: Pair();
  8612  09A3  21C7  3188         	fcall	_Pair
  8613                           
  8614                           ;main.c: 317: } else {
  8615  09A5  29A8               	goto	l4186
  8616  09A6                     l4184:	
  8617                           
  8618                           ;main.c: 318: Validate();
  8619  09A6  221C  3188         	fcall	_Validate
  8620  09A8                     l4186:	
  8621                           
  8622                           ;main.c: 319: }
  8623                           ;main.c: 321: WDTCON0bits.SWDTEN = 1;
  8624  09A8  0030               	movlb	16	; select bank16
  8625  09A9  140C               	bsf	12,0	;volatile
  8626                           
  8627                           ;main.c: 325: switch (mode) {
  8628  09AA  29BB               	goto	l838
  8629  09AB                     l840:	
  8630                           ;main.c: 326: case UNPAIRED:
  8631                           
  8632                           
  8633                           ;main.c: 327: if (PORTCbits.RC5 == 0) {
  8634  09AB  0020               	movlb	0	; select bank0
  8635  09AC  1A8E               	btfsc	14,5	;volatile
  8636  09AD  29BB               	goto	l838
  8637                           
  8638                           ;main.c: 328: Pair();
  8639  09AE  21C7  3188         	fcall	_Pair
  8640  09B0  29BB               	goto	l838
  8641  09B1                     l4190:	
  8642                           
  8643                           ;main.c: 332: if (pingTime) {
  8644  09B1  084F               	movf	_pingTime^(0+128),w
  8645  09B2  1903               	btfsc	3,2
  8646  09B3  29B6               	goto	l4194
  8647                           
  8648                           ;main.c: 333: Validate();
  8649  09B4  221C  3188         	fcall	_Validate
  8650  09B6                     l4194:	
  8651                           
  8652                           ;main.c: 334: }
  8653                           ;main.c: 335: if (PORTBbits.RB4 == 0) {
  8654  09B6  0020               	movlb	0	; select bank0
  8655  09B7  1A0D               	btfsc	13,4	;volatile
  8656  09B8  29BB               	goto	l838
  8657                           
  8658                           ;main.c: 336: Knock();
  8659  09B9  2130  3188         	fcall	_Knock
  8660  09BB                     l838:	
  8661                           ;main.c: 323: while (1) {
  8662                           
  8663  09BB  0064               	clrwdt	;# 
  8664  09BC  0021               	movlb	1	; select bank1
  8665  09BD  0850               	movf	_mode^(0+128),w
  8666                           
  8667                           ; Switch size 1, requested type "space"
  8668                           ; Number of cases is 2, Range of values is 1 to 2
  8669                           ; switch strategies available:
  8670                           ; Name         Instructions Cycles
  8671                           ; simple_byte            7     4 (average)
  8672                           ; direct_byte           13     9 (fixed)
  8673                           ; jumptable            263     9 (fixed)
  8674                           ;	Chosen strategy is simple_byte
  8675  09BE  3A01               	xorlw	1	; case 1
  8676  09BF  1903               	skipnz
  8677  09C0  29B1               	goto	l4190
  8678  09C1  3A03               	xorlw	3	; case 2
  8679  09C2  1903               	skipnz
  8680  09C3  29AB               	goto	l840
  8681  09C4  29BB               	goto	l838
  8682  09C5  3180  2834         	ljmp	start
  8683  09C7                     __end_of_main:	
  8684  09C7                     __ptext20:	
  8685 ;; *************** function _Pair *****************
  8686 ;; Defined at:
  8687 ;;		line 206 in file "main.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;		None
  8690 ;; Auto vars:     Size  Location     Type
  8691 ;;  pairString      9    0[BANK1 ] unsigned char [9]
  8692 ;;  returnVal       1    9[BANK1 ] unsigned char 
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  1    wreg      unsigned char 
  8695 ;; Registers used:
  8696 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8697 ;; Tracked objects:
  8698 ;;		On entry : 1E/1
  8699 ;;		On exit  : 1A/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8703 ;;      Locals:         0       0      10       0       0       0       0       0       0       0       0       0       
      +0       0
  8704 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8705 ;;      Totals:         0       1      10       0       0       0       0       0       0       0       0       0       
      +0       0
  8706 ;;Total ram usage:       11 bytes
  8707 ;; Hardware stack levels used:    1
  8708 ;; Hardware stack levels required when called:   12
  8709 ;; This function calls:
  8710 ;;		_WiFly_ReadChar
  8711 ;;		_eeprom_write
  8712 ;;		_get_response
  8713 ;;		_goto_mode
  8714 ;;		_send_message
  8715 ;;		_sprintf
  8716 ;; This function is called by:
  8717 ;;		_main
  8718 ;; This function uses a non-reentrant model
  8719 ;;
  8720                           
  8721                           
  8722                           ;psect for function _Pair
  8723  09C7                     _Pair:	
  8724                           
  8725                           ;main.c: 207: uint8_t returnVal;
  8726                           ;main.c: 208: char pairString[] = "pair 123";
  8727                           
  8728                           ;incstack = 0
  8729                           ; Regs used in _Pair: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8730  09C7  30AA               	movlw	low Pair@F15432
  8731  09C8  0086               	movwf	6
  8732  09C9  3000               	movlw	high Pair@F15432
  8733  09CA  0087               	movwf	7
  8734  09CB  30D3               	movlw	low Pair@pairString
  8735  09CC  0084               	movwf	4
  8736  09CD  3000               	movlw	high Pair@pairString
  8737  09CE  0085               	movwf	5
  8738  09CF  3009               	movlw	9
  8739  09D0  0020               	movlb	0	; select bank0
  8740  09D1  00ED               	movwf	??_Pair
  8741  09D2                     u3420:	
  8742  09D2  0016               	moviw fsr1++
  8743  09D3  001A               	movwi fsr0++
  8744  09D4  0BED               	decfsz	??_Pair,f
  8745  09D5  29D2               	goto	u3420
  8746                           
  8747                           ;main.c: 209: sprintf(pairString, "pair %03d", UID);
  8748  09D6  3092               	movlw	low (STR_25| (0+32768))
  8749  09D7  00A1               	movwf	sprintf@f
  8750  09D8  3092               	movlw	high (STR_25| (0+32768))
  8751  09D9  27C0  3188         	fcall	PL20	;call to abstracted procedure
  8752  09DB  30D3               	movlw	(low (Pair@pairString| 0))& (0+255)
  8753  09DC  01A4               	clrf	?_sprintf+3
  8754  09DD  2434  3188         	fcall	_sprintf
  8755                           
  8756                           ;main.c: 210: send_message(pairString);
  8757  09DF  30D3               	movlw	(low (Pair@pairString| 0))& (0+255)
  8758  09E0  2271  3188         	fcall	_send_message
  8759                           
  8760                           ;main.c: 211: goto_mode(PAIRING);
  8761  09E2  3003               	movlw	3
  8762  09E3  21F9  3188         	fcall	_goto_mode
  8763                           
  8764                           ;main.c: 212: returnVal = get_response();
  8765  09E5  224C  3188         	fcall	_get_response
  8766  09E7  0021               	movlb	1	; select bank1
  8767  09E8  00DC               	movwf	Pair@returnVal^(0+128)
  8768                           
  8769                           ;main.c: 213: if (returnVal == SUCCESS) {
  8770  09E9  085C               	movf	Pair@returnVal^(0+128),w
  8771  09EA  1D03               	btfss	3,2
  8772  09EB  29F7               	goto	l4108
  8773                           
  8774                           ;main.c: 214: UID = WiFly_ReadChar();
  8775  09EC  2264  3188         	fcall	_WiFly_ReadChar
  8776  09EE  0021               	movlb	1	; select bank1
  8777  09EF  00E9               	movwf	_UID^(0+128)
  8778                           
  8779                           ;main.c: 215: eeprom_write(1, UID);
  8780  09F0  0869               	movf	_UID^(0+128),w
  8781  09F1  00F1               	movwf	eeprom_write@value
  8782  09F2  3001               	movlw	1
  8783  09F3  23B9  3188         	fcall	_eeprom_write
  8784                           
  8785                           ;main.c: 216: goto_mode(PAIRED);
  8786  09F5  3001               	movlw	1
  8787  09F6  29F9               	ljmp	_goto_mode
  8788  09F7                     l4108:	
  8789                           ;main.c: 217: } else {
  8790                           
  8791                           
  8792                           ;main.c: 218: goto_mode(UNPAIRED);
  8793  09F7  3002               	movlw	2
  8794  09F8  29F9               	ljmp	_goto_mode
  8795  09F9                     __end_of_Pair:	
  8796  09F9                     __ptext41:	
  8797 ;; *************** function _goto_mode *****************
  8798 ;; Defined at:
  8799 ;;		line 96 in file "main.c"
  8800 ;; Parameters:    Size  Location     Type
  8801 ;;  target          1    wreg     unsigned char 
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;  target          1    2[COMMON] unsigned char 
  8804 ;; Return value:  Size  Location     Type
  8805 ;;                  1    wreg      void 
  8806 ;; Registers used:
  8807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8808 ;; Tracked objects:
  8809 ;;		On entry : 0/1
  8810 ;;		On exit  : 1A/0
  8811 ;;		Unchanged: 0/0
  8812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8814 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8816 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8817 ;;Total ram usage:        1 bytes
  8818 ;; Hardware stack levels used:    1
  8819 ;; Hardware stack levels required when called:    7
  8820 ;; This function calls:
  8821 ;;		_ClearIndicators
  8822 ;;		_SetIndication
  8823 ;;		_TMR2_StartTimer
  8824 ;;		_TMR2_StopTimer
  8825 ;;		_TMR4_StartTimer
  8826 ;;		_TMR4_StopTimer
  8827 ;; This function is called by:
  8828 ;;		_get_response
  8829 ;;		_send_message
  8830 ;;		_Pair
  8831 ;;		_Validate
  8832 ;;		_Knock
  8833 ;; This function uses a non-reentrant model
  8834 ;;
  8835                           
  8836                           
  8837                           ;psect for function _goto_mode
  8838  09F9                     _goto_mode:	
  8839                           
  8840                           ;incstack = 0
  8841                           ; Regs used in _goto_mode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8842                           ;goto_mode@target stored from wreg
  8843  09F9  00F2               	movwf	goto_mode@target
  8844                           
  8845                           ;main.c: 97: mode = target;
  8846  09FA  0021               	movlb	1	; select bank1
  8847  09FB  00D0               	movwf	_mode^(0+128)
  8848                           
  8849                           ; Switch size 1, requested type "space"
  8850                           ; Number of cases is 4, Range of values is 1 to 4
  8851                           ; switch strategies available:
  8852                           ; Name         Instructions Cycles
  8853                           ; simple_byte           13     7 (average)
  8854                           ; direct_byte           17     9 (fixed)
  8855                           ; jumptable            263     9 (fixed)
  8856                           ;	Chosen strategy is simple_byte
  8857                           
  8858                           ;main.c: 116: break;
  8859                           
  8860                           ;main.c: 98: switch (mode) {
  8861  09FC  3A01               	xorlw	1	; case 1
  8862  09FD  1903               	skipnz
  8863  09FE  2A09               	goto	l3962
  8864  09FF  3A03               	xorlw	3	; case 2
  8865  0A00  1903               	skipnz
  8866  0A01  2A15               	goto	l3976
  8867  0A02  3A01               	xorlw	1	; case 3
  8868  0A03  1903               	skipnz
  8869  0A04  2A13               	goto	l3972
  8870  0A05  3A07               	xorlw	7	; case 4
  8871  0A06  1903               	skipnz
  8872  0A07  2A0F               	goto	l3968
  8873  0A08  2A1A               	goto	l749
  8874  0A09                     l3962:	
  8875                           
  8876                           ;main.c: 100: TMR2_StopTimer();
  8877  0A09  221B  3188         	fcall	_TMR2_StopTimer
  8878                           
  8879                           ;main.c: 101: SetIndication(1);
  8880  0A0B  3001               	movlw	1
  8881  0A0C  22BF  3188         	fcall	_SetIndication
  8882                           
  8883                           ;main.c: 102: TMR4_StartTimer();
  8884  0A0E  2F0E               	ljmp	l3588
  8885  0A0F                     l3968:	
  8886                           ;main.c: 103: break;
  8887                           
  8888                           
  8889                           ;main.c: 105: T2PR = 40;
  8890  0A0F  3028               	movlw	40
  8891  0A10                     L10:	
  8892  0A10  0025               	movlb	5	; select bank5
  8893  0A11  008D               	movwf	13	;volatile
  8894                           
  8895                           ;main.c: 106: TMR2_StartTimer();
  8896  0A12  2F31               	ljmp	l3592
  8897  0A13                     l3972:	
  8898                           ;main.c: 107: break;
  8899                           
  8900                           
  8901                           ;main.c: 109: T2PR = 10;
  8902  0A13  300A               	movlw	10
  8903  0A14  2A10               	goto	L10
  8904  0A15                     l3976:	
  8905                           
  8906                           ;main.c: 113: TMR2_StopTimer();
  8907  0A15  221B  3188         	fcall	_TMR2_StopTimer
  8908                           
  8909                           ;main.c: 114: TMR4_StopTimer();
  8910  0A17  2290  3188         	fcall	_TMR4_StopTimer
  8911                           
  8912                           ;main.c: 115: ClearIndicators();
  8913  0A19  2F29               	ljmp	l3872
  8914  0A1A                     l749:	
  8915  0A1A  0008               	return
  8916  0A1B                     __end_of_goto_mode:	
  8917  0A1B                     __ptext46:	
  8918 ;; *************** function _TMR2_StopTimer *****************
  8919 ;; Defined at:
  8920 ;;		line 127 in file "mcc_generated_files/tmr2.c"
  8921 ;; Parameters:    Size  Location     Type
  8922 ;;		None
  8923 ;; Auto vars:     Size  Location     Type
  8924 ;;		None
  8925 ;; Return value:  Size  Location     Type
  8926 ;;                  1    wreg      void 
  8927 ;; Registers used:
  8928 ;;		status,2, status,0, pclath, cstack
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/1
  8931 ;;		On exit  : 1F/5
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8938 ;;Total ram usage:        0 bytes
  8939 ;; Hardware stack levels used:    1
  8940 ;; Hardware stack levels required when called:    6
  8941 ;; This function calls:
  8942 ;;		_TMR2_Stop
  8943 ;; This function is called by:
  8944 ;;		_goto_mode
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           
  8948                           
  8949                           ;psect for function _TMR2_StopTimer
  8950  0A1B                     _TMR2_StopTimer:	
  8951                           
  8952                           ;tmr2.c: 129: TMR2_Stop();
  8953                           
  8954                           ;incstack = 0
  8955                           ; Regs used in _TMR2_StopTimer: [status,2+status,0+pclath+cstack]
  8956  0A1B  2F34               	ljmp	l3594
  8957  0A1C                     __end_of_TMR2_StopTimer:	
  8958  0A1C                     __ptext8:	
  8959 ;; *************** function _Validate *****************
  8960 ;; Defined at:
  8961 ;;		line 223 in file "main.c"
  8962 ;; Parameters:    Size  Location     Type
  8963 ;;		None
  8964 ;; Auto vars:     Size  Location     Type
  8965 ;;  valString      13    0[BANK1 ] unsigned char [13]
  8966 ;;  returnVal       1   13[BANK1 ] unsigned char 
  8967 ;; Return value:  Size  Location     Type
  8968 ;;                  1    wreg      unsigned char 
  8969 ;; Registers used:
  8970 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8971 ;; Tracked objects:
  8972 ;;		On entry : 1F/1
  8973 ;;		On exit  : 1F/5
  8974 ;;		Unchanged: 0/0
  8975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8976 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8977 ;;      Locals:         0       0      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8978 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8979 ;;      Totals:         0       1      14       0       0       0       0       0       0       0       0       0       
      +0       0
  8980 ;;Total ram usage:       15 bytes
  8981 ;; Hardware stack levels used:    1
  8982 ;; Hardware stack levels required when called:   12
  8983 ;; This function calls:
  8984 ;;		_TMR4_StartTimer
  8985 ;;		_get_response
  8986 ;;		_goto_mode
  8987 ;;		_send_message
  8988 ;;		_sprintf
  8989 ;; This function is called by:
  8990 ;;		_main
  8991 ;; This function uses a non-reentrant model
  8992 ;;
  8993                           
  8994                           
  8995                           ;psect for function _Validate
  8996  0A1C                     _Validate:	
  8997  0A1C  3020               	movlw	low Validate@F15436
  8998                           
  8999                           ;main.c: 224: uint8_t returnVal;
  9000                           ;main.c: 225: pingTime = 0;
  9001                           
  9002                           ;incstack = 0
  9003                           ; Regs used in _Validate: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9004  0A1D  01CF               	clrf	_pingTime^(0+128)
  9005                           
  9006                           ;main.c: 226: char valString[] = "validate 123";
  9007  0A1E  0086               	movwf	6
  9008  0A1F  3001               	movlw	high Validate@F15436
  9009  0A20  0087               	movwf	7
  9010  0A21  30D3               	movlw	low Validate@valString
  9011  0A22  0084               	movwf	4
  9012  0A23  3000               	movlw	high Validate@valString
  9013  0A24  0085               	movwf	5
  9014  0A25  300D               	movlw	13
  9015  0A26  0020               	movlb	0	; select bank0
  9016  0A27  00ED               	movwf	??_Validate
  9017  0A28                     u3440:	
  9018  0A28  0016               	moviw fsr1++
  9019  0A29  001A               	movwi fsr0++
  9020  0A2A  0BED               	decfsz	??_Validate,f
  9021  0A2B  2A28               	goto	u3440
  9022                           
  9023                           ;main.c: 227: sprintf(valString, "validate %03d", UID);
  9024  0A2C  303E               	movlw	low (STR_26| (0+32768))
  9025  0A2D  00A1               	movwf	sprintf@f
  9026  0A2E  3092               	movlw	high (STR_26| (0+32768))
  9027  0A2F  27C0  3188         	fcall	PL20	;call to abstracted procedure
  9028  0A31  30D3               	movlw	(low (Validate@valString| 0))& (0+255)
  9029  0A32  01A4               	clrf	?_sprintf+3
  9030  0A33  2434  3188         	fcall	_sprintf
  9031  0A35                     l4118:	
  9032                           
  9033                           ;main.c: 229: send_message(valString);
  9034  0A35  30D3               	movlw	(low (Validate@valString| 0))& (0+255)
  9035  0A36  2271  3188         	fcall	_send_message
  9036                           
  9037                           ;main.c: 230: returnVal = get_response();
  9038  0A38  224C  3188         	fcall	_get_response
  9039  0A3A  0021               	movlb	1	; select bank1
  9040  0A3B  00E0               	movwf	Validate@returnVal^(0+128)
  9041                           
  9042                           ;main.c: 231: if (returnVal == SUCCESS) {
  9043  0A3C  0860               	movf	Validate@returnVal^(0+128),w
  9044  0A3D  1D03               	btfss	3,2
  9045  0A3E  2A41               	goto	l4126
  9046                           
  9047                           ;main.c: 232: goto_mode(PAIRED);
  9048  0A3F  3001               	movlw	1
  9049  0A40  2A44               	goto	L1
  9050  0A41                     l4126:	
  9051                           ;main.c: 233: } else if (returnVal == FAILED) {
  9052                           
  9053  0A41  0B60               	decfsz	Validate@returnVal^(0+128),w
  9054  0A42  2A46               	goto	l4130
  9055                           
  9056                           ;main.c: 234: goto_mode(UNPAIRED);
  9057  0A43  3002               	movlw	2
  9058  0A44                     L1:	
  9059  0A44  21F9  3188         	fcall	_goto_mode
  9060  0A46                     l4130:	
  9061                           
  9062                           ;main.c: 235: }
  9063                           ;main.c: 236: } while (returnVal == TX_ERROR);
  9064  0A46  3002               	movlw	2
  9065  0A47  0021               	movlb	1	; select bank1
  9066  0A48  0660               	xorwf	Validate@returnVal^(0+128),w
  9067  0A49  1903               	btfsc	3,2
  9068  0A4A  2A35               	goto	l4118
  9069                           
  9070                           ;main.c: 237: TMR4_StartTimer();
  9071  0A4B  2F0E               	ljmp	l3588
  9072  0A4C                     __end_of_Validate:	
  9073  0A4C                     __ptext40:	
  9074 ;; *************** function _get_response *****************
  9075 ;; Defined at:
  9076 ;;		line 181 in file "main.c"
  9077 ;; Parameters:    Size  Location     Type
  9078 ;;		None
  9079 ;; Auto vars:     Size  Location     Type
  9080 ;;  status          1    9[COMMON] unsigned char 
  9081 ;; Return value:  Size  Location     Type
  9082 ;;                  1    wreg      unsigned char 
  9083 ;; Registers used:
  9084 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9085 ;; Tracked objects:
  9086 ;;		On entry : 0/0
  9087 ;;		On exit  : 10/0
  9088 ;;		Unchanged: 0/0
  9089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9091 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9093 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9094 ;;Total ram usage:        1 bytes
  9095 ;; Hardware stack levels used:    1
  9096 ;; Hardware stack levels required when called:    8
  9097 ;; This function calls:
  9098 ;;		_WaitResponse
  9099 ;;		_WiFly_ReadChar
  9100 ;;		_goto_mode
  9101 ;; This function is called by:
  9102 ;;		_Pair
  9103 ;;		_Validate
  9104 ;;		_Knock
  9105 ;; This function uses a non-reentrant model
  9106 ;;
  9107                           
  9108                           
  9109                           ;psect for function _get_response
  9110  0A4C                     _get_response:	
  9111  0A4C                     l783:	
  9112                           ;incstack = 0
  9113                           ; Regs used in _get_response: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9114                           ;main.c: 182: while (1) {
  9115                           
  9116                           
  9117                           ;main.c: 183: WaitResponse("Stat: ");
  9118  0A4C  30CC               	movlw	low (STR_21| (0+32768))
  9119  0A4D  00F6               	movwf	WaitResponse@chkString
  9120  0A4E  3092               	movlw	high (STR_21| (0+32768))
  9121  0A4F  00F7               	movwf	WaitResponse@chkString+1
  9122  0A50  2291  3188         	fcall	_WaitResponse
  9123                           
  9124                           ;main.c: 184: uint8_t status = WiFly_ReadChar();
  9125  0A52  2264  3188         	fcall	_WiFly_ReadChar
  9126  0A54  00F9               	movwf	get_response@status
  9127                           
  9128                           ;main.c: 185: if (status == 'Y') {
  9129  0A55  3A59               	xorlw	89
  9130  0A56  1D03               	btfss	3,2
  9131  0A57  2A5B               	goto	l4060
  9132                           
  9133                           ;main.c: 186: goto_mode(PAIRED);
  9134  0A58  3001               	movlw	1
  9135  0A59  21F9               	fcall	_goto_mode
  9136                           
  9137                           ;main.c: 187: return SUCCESS;
  9138  0A5A  3400               	retlw	0
  9139  0A5B                     l4060:	
  9140  0A5B  304E               	movlw	78
  9141  0A5C  0679               	xorwf	get_response@status,w
  9142  0A5D  1903               	btfsc	3,2
  9143                           
  9144                           ;main.c: 189: return FAILED;
  9145  0A5E  3401               	retlw	1
  9146  0A5F  3045               	movlw	69
  9147  0A60  0679               	xorwf	get_response@status,w
  9148  0A61  1903               	btfsc	3,2
  9149                           
  9150                           ;main.c: 191: return TX_ERROR;
  9151  0A62  3402               	retlw	2
  9152  0A63  2A4C               	goto	l783
  9153  0A64                     __end_of_get_response:	
  9154  0A64                     __ptext54:	
  9155 ;; *************** function _WiFly_ReadChar *****************
  9156 ;; Defined at:
  9157 ;;		line 72 in file "mcc_generated_files/WiFly.c"
  9158 ;; Parameters:    Size  Location     Type
  9159 ;;		None
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;		None
  9162 ;; Return value:  Size  Location     Type
  9163 ;;                  1    wreg      unsigned char 
  9164 ;; Registers used:
  9165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9166 ;; Tracked objects:
  9167 ;;		On entry : 0/1
  9168 ;;		On exit  : 1F/E
  9169 ;;		Unchanged: 0/0
  9170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9174 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9175 ;;Total ram usage:        0 bytes
  9176 ;; Hardware stack levels used:    1
  9177 ;; Hardware stack levels required when called:    6
  9178 ;; This function calls:
  9179 ;;		_EUSART_Read
  9180 ;;		_EUSART_is_rx_ready
  9181 ;; This function is called by:
  9182 ;;		_CheckResponse
  9183 ;;		_WaitResponse
  9184 ;;		_get_response
  9185 ;;		_Pair
  9186 ;; This function uses a non-reentrant model
  9187 ;;
  9188                           
  9189                           
  9190                           ;psect for function _WiFly_ReadChar
  9191  0A64                     _WiFly_ReadChar:	
  9192  0A64                     l3604:	
  9193                           ;WiFly.c: 73: while (!EUSART_is_rx_ready()) {
  9194                           
  9195                           ;incstack = 0
  9196                           ; Regs used in _WiFly_ReadChar: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9197                           
  9198  0A64  22BC  3188         	fcall	_EUSART_is_rx_ready
  9199  0A66  3A00               	xorlw	0
  9200  0A67  1D03               	btfss	3,2
  9201  0A68  2A6B               	goto	l3606
  9202                           
  9203                           ;WiFly.c: 74: __nop();
  9204  0A69  0000               	nop
  9205  0A6A  2A64               	goto	l3604
  9206  0A6B                     l3606:	
  9207                           
  9208                           ;WiFly.c: 75: }
  9209                           ;WiFly.c: 76: return uart[WiFly].Read();
  9210  0A6B  27C6               	fcall	PL22	;call to abstracted procedure
  9211  0A6C  008A               	movwf	10
  9212  0A6D  3F00               	moviw [0]fsr0
  9213  0A6E  000A               	callw
  9214  0A6F  3188               	pagesel	$
  9215  0A70  0008               	return
  9216  0A71                     __end_of_WiFly_ReadChar:	
  9217  0A71                     __ptext23:	
  9218 ;; *************** function _send_message *****************
  9219 ;; Defined at:
  9220 ;;		line 197 in file "main.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;  message         1    wreg     PTR const unsigned char 
  9223 ;;		 -> Knock@knockString(10), Validate@valString(13), Pair@pairString(9), 
  9224 ;; Auto vars:     Size  Location     Type
  9225 ;;  message         1   76[BANK0 ] PTR const unsigned char 
  9226 ;;		 -> Knock@knockString(10), Validate@valString(13), Pair@pairString(9), 
  9227 ;; Return value:  Size  Location     Type
  9228 ;;                  1    wreg      void 
  9229 ;; Registers used:
  9230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9231 ;; Tracked objects:
  9232 ;;		On entry : 1E/0
  9233 ;;		On exit  : 0/0
  9234 ;;		Unchanged: 0/0
  9235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9237 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9239 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9240 ;;Total ram usage:        1 bytes
  9241 ;; Hardware stack levels used:    1
  9242 ;; Hardware stack levels required when called:   11
  9243 ;; This function calls:
  9244 ;;		_Clear_RX_Buffer
  9245 ;;		_WaitResponse
  9246 ;;		_WiFly_SendString
  9247 ;;		_connect_socket
  9248 ;;		_goto_mode
  9249 ;; This function is called by:
  9250 ;;		_Pair
  9251 ;;		_Validate
  9252 ;;		_Knock
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           
  9257                           ;psect for function _send_message
  9258  0A71                     _send_message:	
  9259                           
  9260                           ;incstack = 0
  9261                           ; Regs used in _send_message: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9262                           ;send_message@message stored from wreg
  9263  0A71  0020               	movlb	0	; select bank0
  9264  0A72  00EC               	movwf	send_message@message
  9265                           
  9266                           ;main.c: 198: goto_mode(DISCONNECTED);
  9267  0A73  3004               	movlw	4
  9268  0A74  21F9  3188         	fcall	_goto_mode
  9269                           
  9270                           ;main.c: 199: connect_socket("192.168.1.7", "1335");
  9271  0A76  3067               	movlw	low (STR_22| (0+32768))
  9272  0A77  0020               	movlb	0	; select bank0
  9273  0A78  00E8               	movwf	connect_socket@addr
  9274  0A79  3092               	movlw	high (STR_22| (0+32768))
  9275  0A7A  00E9               	movwf	connect_socket@addr+1
  9276  0A7B  30FE               	movlw	low (STR_23| (0+32768))
  9277  0A7C  00EA               	movwf	connect_socket@port
  9278  0A7D  3092               	movlw	high (STR_23| (0+32768))
  9279  0A7E  00EB               	movwf	connect_socket@port+1
  9280  0A7F  237D  3188         	fcall	_connect_socket
  9281                           
  9282                           ;main.c: 200: Clear_RX_Buffer();
  9283  0A81  22E4  3188         	fcall	_Clear_RX_Buffer
  9284                           
  9285                           ;main.c: 201: WaitResponse("Proceed");
  9286  0A83  30B6               	movlw	low (STR_14| (0+32768))
  9287  0A84  00F6               	movwf	WaitResponse@chkString
  9288  0A85  3092               	movlw	high (STR_14| (0+32768))
  9289  0A86  00F7               	movwf	WaitResponse@chkString+1
  9290  0A87  2291  3188         	fcall	_WaitResponse
  9291  0A89  0064               	clrwdt	;# 
  9292                           
  9293                           ;main.c: 203: WiFly_SendString(message);
  9294  0A8A  0020               	movlb	0	; select bank0
  9295  0A8B  086C               	movf	send_message@message,w
  9296  0A8C  00F5               	movwf	WiFly_SendString@sendString
  9297  0A8D  3000               	movlw	0
  9298  0A8E  01F6               	clrf	WiFly_SendString@sendString+1
  9299  0A8F  2E85               	ljmp	l3600
  9300  0A90                     __end_of_send_message:	
  9301  0A90                     __ptext42:	
  9302 ;; *************** function _TMR4_StopTimer *****************
  9303 ;; Defined at:
  9304 ;;		line 127 in file "mcc_generated_files/tmr4.c"
  9305 ;; Parameters:    Size  Location     Type
  9306 ;;		None
  9307 ;; Auto vars:     Size  Location     Type
  9308 ;;		None
  9309 ;; Return value:  Size  Location     Type
  9310 ;;                  1    wreg      void 
  9311 ;; Registers used:
  9312 ;;		status,2, status,0, pclath, cstack
  9313 ;; Tracked objects:
  9314 ;;		On entry : 1A/5
  9315 ;;		On exit  : 1F/5
  9316 ;;		Unchanged: 0/0
  9317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9322 ;;Total ram usage:        0 bytes
  9323 ;; Hardware stack levels used:    1
  9324 ;; Hardware stack levels required when called:    6
  9325 ;; This function calls:
  9326 ;;		_TMR4_Stop
  9327 ;; This function is called by:
  9328 ;;		_goto_mode
  9329 ;;		_Knock
  9330 ;;		_main
  9331 ;; This function uses a non-reentrant model
  9332 ;;
  9333                           
  9334                           
  9335                           ;psect for function _TMR4_StopTimer
  9336  0A90                     _TMR4_StopTimer:	
  9337                           
  9338                           ;tmr4.c: 129: TMR4_Stop();
  9339                           
  9340                           ;incstack = 0
  9341                           ; Regs used in _TMR4_StopTimer: [status,2+status,0+pclath+cstack]
  9342  0A90  2F37               	ljmp	l3590
  9343  0A91                     __end_of_TMR4_StopTimer:	
  9344  0A91                     __ptext52:	
  9345 ;; *************** function _WaitResponse *****************
  9346 ;; Defined at:
  9347 ;;		line 167 in file "main.c"
  9348 ;; Parameters:    Size  Location     Type
  9349 ;;  chkString       2    6[COMMON] PTR const unsigned char 
  9350 ;;		 -> STR_24(8), STR_21(7), 
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;  i               2    2[BANK0 ] unsigned int 
  9353 ;;  length          2    0[BANK0 ] unsigned int 
  9354 ;; Return value:  Size  Location     Type
  9355 ;;                  1    wreg      void 
  9356 ;; Registers used:
  9357 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9358 ;; Tracked objects:
  9359 ;;		On entry : 0/1
  9360 ;;		On exit  : 1F/0
  9361 ;;		Unchanged: 0/0
  9362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9363 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9364 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9365 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9366 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9367 ;;Total ram usage:        7 bytes
  9368 ;; Hardware stack levels used:    1
  9369 ;; Hardware stack levels required when called:    7
  9370 ;; This function calls:
  9371 ;;		_WiFly_ReadChar
  9372 ;;		_strlen
  9373 ;; This function is called by:
  9374 ;;		_get_response
  9375 ;;		_send_message
  9376 ;; This function uses a non-reentrant model
  9377 ;;
  9378                           
  9379                           
  9380                           ;psect for function _WaitResponse
  9381  0A91                     _WaitResponse:	
  9382                           
  9383                           ;main.c: 168: size_t length = strlen(chkString);
  9384                           
  9385                           ;incstack = 0
  9386                           ; Regs used in _WaitResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9387  0A91  0877               	movf	WaitResponse@chkString+1,w
  9388  0A92  00F2               	movwf	strlen@s+1
  9389  0A93  0876               	movf	WaitResponse@chkString,w
  9390  0A94  00F1               	movwf	strlen@s
  9391  0A95  2367  3188         	fcall	_strlen
  9392  0A97  0872               	movf	?_strlen+1,w
  9393  0A98  0020               	movlb	0	; select bank0
  9394  0A99  00A1               	movwf	WaitResponse@length+1
  9395  0A9A  0871               	movf	?_strlen,w
  9396  0A9B  00A0               	movwf	WaitResponse@length
  9397  0A9C                     l3988:	
  9398                           
  9399                           ;main.c: 169: size_t i = 0;
  9400  0A9C  0020               	movlb	0	; select bank0
  9401  0A9D  01A2               	clrf	WaitResponse@i
  9402  0A9E  01A3               	clrf	WaitResponse@i+1
  9403  0A9F                     l3996:	
  9404                           ;main.c: 174: } else {
  9405                           
  9406                           ;main.c: 171: while (i < length) {
  9407                           
  9408  0A9F  0821               	movf	WaitResponse@length+1,w
  9409  0AA0  0223               	subwf	WaitResponse@i+1,w
  9410  0AA1  1D03               	skipz
  9411  0AA2  2AA5               	goto	u3385
  9412  0AA3  0820               	movf	WaitResponse@length,w
  9413  0AA4  0222               	subwf	WaitResponse@i,w
  9414  0AA5                     u3385:	
  9415  0AA5  1803               	btfsc	3,0
  9416  0AA6  0008               	return
  9417                           
  9418                           ;main.c: 172: if (WiFly_ReadChar() == chkString[i]) {
  9419  0AA7  0876               	movf	WaitResponse@chkString,w
  9420  0AA8  0722               	addwf	WaitResponse@i,w
  9421  0AA9  0084               	movwf	4
  9422  0AAA  0877               	movf	WaitResponse@chkString+1,w
  9423  0AAB  3D23               	addwfc	WaitResponse@i+1,w
  9424  0AAC  0085               	movwf	5
  9425  0AAD  0800               	movf	0,w	;code access
  9426  0AAE  00F8               	movwf	??_WaitResponse
  9427  0AAF  2264  3188         	fcall	_WiFly_ReadChar
  9428  0AB1  0678               	xorwf	??_WaitResponse,w
  9429  0AB2  1D03               	skipz
  9430  0AB3  2A9C               	goto	l3988
  9431                           
  9432                           ;main.c: 173: i++;
  9433  0AB4  0020               	movlb	0	; select bank0
  9434  0AB5  0AA2               	incf	WaitResponse@i,f
  9435  0AB6  1903               	skipnz
  9436  0AB7  0AA3               	incf	WaitResponse@i+1,f
  9437  0AB8  2A9F               	goto	l3996
  9438  0AB9                     __end_of_WaitResponse:	
  9439  0AB9                     __ptext48:	
  9440 ;; *************** function _TMR2_StartTimer *****************
  9441 ;; Defined at:
  9442 ;;		line 116 in file "mcc_generated_files/tmr2.c"
  9443 ;; Parameters:    Size  Location     Type
  9444 ;;		None
  9445 ;; Auto vars:     Size  Location     Type
  9446 ;;		None
  9447 ;; Return value:  Size  Location     Type
  9448 ;;                  1    wreg      void 
  9449 ;; Registers used:
  9450 ;;		status,2, status,0, pclath, cstack
  9451 ;; Tracked objects:
  9452 ;;		On entry : 0/5
  9453 ;;		On exit  : 1F/5
  9454 ;;		Unchanged: 0/0
  9455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9460 ;;Total ram usage:        0 bytes
  9461 ;; Hardware stack levels used:    1
  9462 ;; Hardware stack levels required when called:    6
  9463 ;; This function calls:
  9464 ;;		_TMR2_Start
  9465 ;; This function is called by:
  9466 ;;		_goto_mode
  9467 ;;		_main
  9468 ;; This function uses a non-reentrant model
  9469 ;;
  9470                           
  9471                           
  9472                           ;psect for function _TMR2_StartTimer
  9473  0AB9                     _TMR2_StartTimer:	
  9474                           
  9475                           ;tmr2.c: 118: TMR2_Start();
  9476                           
  9477                           ;incstack = 0
  9478                           ; Regs used in _TMR2_StartTimer: [status,2+status,0+pclath+cstack]
  9479  0AB9  2F31               	ljmp	l3592
  9480  0ABA                     __end_of_TMR2_StartTimer:	
  9481  0ABA                     __ptext57:	
  9482 ;; *************** function _RELAY_RL1_Engage *****************
  9483 ;; Defined at:
  9484 ;;		line 26 in file "mcc_generated_files/Relay_app.c"
  9485 ;; Parameters:    Size  Location     Type
  9486 ;;		None
  9487 ;; Auto vars:     Size  Location     Type
  9488 ;;		None
  9489 ;; Return value:  Size  Location     Type
  9490 ;;                  1    wreg      void 
  9491 ;; Registers used:
  9492 ;;		None
  9493 ;; Tracked objects:
  9494 ;;		On entry : 1F/0
  9495 ;;		On exit  : 1F/0
  9496 ;;		Unchanged: 0/0
  9497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9502 ;;Total ram usage:        0 bytes
  9503 ;; Hardware stack levels used:    1
  9504 ;; Hardware stack levels required when called:    5
  9505 ;; This function calls:
  9506 ;;		Nothing
  9507 ;; This function is called by:
  9508 ;;		_Knock
  9509 ;; This function uses a non-reentrant model
  9510 ;;
  9511                           
  9512                           
  9513                           ;psect for function _RELAY_RL1_Engage
  9514  0ABA                     _RELAY_RL1_Engage:	
  9515                           
  9516                           ;incstack = 0
  9517                           ; Regs used in _RELAY_RL1_Engage: []
  9518                           ;Relay_app.c: 27: do { LATCbits.LATC2 = 1; } while(0);
  9519  0ABA  1518               	bsf	24,2	;volatile
  9520  0ABB  0008               	return
  9521  0ABC                     __end_of_RELAY_RL1_Engage:	
  9522  0ABC                     __ptext55:	
  9523 ;; *************** function _EUSART_is_rx_ready *****************
  9524 ;; Defined at:
  9525 ;;		line 120 in file "mcc_generated_files/eusart.c"
  9526 ;; Parameters:    Size  Location     Type
  9527 ;;		None
  9528 ;; Auto vars:     Size  Location     Type
  9529 ;;		None
  9530 ;; Return value:  Size  Location     Type
  9531 ;;                  1    wreg      unsigned char 
  9532 ;; Registers used:
  9533 ;;		wreg
  9534 ;; Tracked objects:
  9535 ;;		On entry : 0/0
  9536 ;;		On exit  : 1F/1
  9537 ;;		Unchanged: 0/0
  9538 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9543 ;;Total ram usage:        0 bytes
  9544 ;; Hardware stack levels used:    1
  9545 ;; Hardware stack levels required when called:    5
  9546 ;; This function calls:
  9547 ;;		Nothing
  9548 ;; This function is called by:
  9549 ;;		_Clear_RX_Buffer
  9550 ;;		_WiFly_ReadChar
  9551 ;;		_WiFly_CheckRecv
  9552 ;; This function uses a non-reentrant model
  9553 ;;
  9554                           
  9555                           
  9556                           ;psect for function _EUSART_is_rx_ready
  9557  0ABC                     _EUSART_is_rx_ready:	
  9558                           
  9559                           ;eusart.c: 122: return eusartRxCount;
  9560                           
  9561                           ;incstack = 0
  9562                           ; Regs used in _EUSART_is_rx_ready: [wreg]
  9563  0ABC  0021               	movlb	1	; select bank1
  9564  0ABD  0851               	movf	_eusartRxCount^(0+128),w	;volatile
  9565  0ABE  0008               	return
  9566  0ABF                     __end_of_EUSART_is_rx_ready:	
  9567  0ABF                     __ptext50:	
  9568 ;; *************** function _SetIndication *****************
  9569 ;; Defined at:
  9570 ;;		line 79 in file "main.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;  set             1    wreg     unsigned char 
  9573 ;; Auto vars:     Size  Location     Type
  9574 ;;  set             1    1[COMMON] unsigned char 
  9575 ;; Return value:  Size  Location     Type
  9576 ;;                  1    wreg      void 
  9577 ;; Registers used:
  9578 ;;		wreg, status,0
  9579 ;; Tracked objects:
  9580 ;;		On entry : 1F/5
  9581 ;;		On exit  : 1E/0
  9582 ;;		Unchanged: 0/0
  9583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9585 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9587 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9588 ;;Total ram usage:        1 bytes
  9589 ;; Hardware stack levels used:    1
  9590 ;; Hardware stack levels required when called:    5
  9591 ;; This function calls:
  9592 ;;		Nothing
  9593 ;; This function is called by:
  9594 ;;		_goto_mode
  9595 ;; This function uses a non-reentrant model
  9596 ;;
  9597                           
  9598                           
  9599                           ;psect for function _SetIndication
  9600  0ABF                     _SetIndication:	
  9601                           
  9602                           ;incstack = 0
  9603                           ; Regs used in _SetIndication: [wreg+status,0]
  9604                           ;SetIndication@set stored from wreg
  9605  0ABF  00F1               	movwf	SetIndication@set
  9606                           
  9607                           ;main.c: 80: indStatus = set;
  9608  0AC0  0871               	movf	SetIndication@set,w
  9609  0AC1  0021               	movlb	1	; select bank1
  9610  0AC2  00CE               	movwf	_indStatus^(0+128)
  9611                           
  9612                           ;main.c: 82: if (UID & 1) {
  9613  0AC3  1C69               	btfss	_UID^(0+128),0
  9614  0AC4  2ACB               	goto	l3888
  9615                           
  9616                           ;main.c: 83: LATAbits.LATA4 = set;
  9617  0AC5  0C71               	rrf	SetIndication@set,w
  9618  0AC6  0020               	movlb	0	; select bank0
  9619  0AC7  1C03               	skipc
  9620  0AC8  1216               	bcf	22,4	;volatile
  9621  0AC9  1803               	skipnc
  9622  0ACA  1616               	bsf	22,4	;volatile
  9623  0ACB                     l3888:	
  9624                           
  9625                           ;main.c: 84: }
  9626                           ;main.c: 85: if (UID & 1 << 1) {
  9627  0ACB  0021               	movlb	1	; select bank1
  9628  0ACC  1CE9               	btfss	_UID^(0+128),1
  9629  0ACD  2AD4               	goto	l3892
  9630                           
  9631                           ;main.c: 86: LATAbits.LATA5 = set;
  9632  0ACE  0C71               	rrf	SetIndication@set,w
  9633  0ACF  0020               	movlb	0	; select bank0
  9634  0AD0  1C03               	skipc
  9635  0AD1  1296               	bcf	22,5	;volatile
  9636  0AD2  1803               	skipnc
  9637  0AD3  1696               	bsf	22,5	;volatile
  9638  0AD4                     l3892:	
  9639                           
  9640                           ;main.c: 87: }
  9641                           ;main.c: 88: if (UID & 1 << 2) {
  9642  0AD4  0021               	movlb	1	; select bank1
  9643  0AD5  1D69               	btfss	_UID^(0+128),2
  9644  0AD6  2ADD               	goto	l3896
  9645                           
  9646                           ;main.c: 89: LATAbits.LATA6 = set;
  9647  0AD7  0C71               	rrf	SetIndication@set,w
  9648  0AD8  0020               	movlb	0	; select bank0
  9649  0AD9  1C03               	skipc
  9650  0ADA  1316               	bcf	22,6	;volatile
  9651  0ADB  1803               	skipnc
  9652  0ADC  1716               	bsf	22,6	;volatile
  9653  0ADD                     l3896:	
  9654                           
  9655                           ;main.c: 90: }
  9656                           ;main.c: 91: if (UID & 1 << 3) {
  9657  0ADD  0021               	movlb	1	; select bank1
  9658  0ADE  1DE9               	btfss	_UID^(0+128),3
  9659  0ADF  0008               	return
  9660                           
  9661                           ;main.c: 92: LATAbits.LATA7 = set;
  9662  0AE0  0C71               	rrf	SetIndication@set,w
  9663  0AE1  3180  2860         	ljmp	PL24	;call to abstracted procedure
  9664  0AE3                     __end_of_SetIndication:	
  9665  0AE3                     __ptext44:	
  9666 ;; *************** function _TMR4_StartTimer *****************
  9667 ;; Defined at:
  9668 ;;		line 116 in file "mcc_generated_files/tmr4.c"
  9669 ;; Parameters:    Size  Location     Type
  9670 ;;		None
  9671 ;; Auto vars:     Size  Location     Type
  9672 ;;		None
  9673 ;; Return value:  Size  Location     Type
  9674 ;;                  1    wreg      void 
  9675 ;; Registers used:
  9676 ;;		status,2, status,0, pclath, cstack
  9677 ;; Tracked objects:
  9678 ;;		On entry : 1E/1
  9679 ;;		On exit  : 1F/5
  9680 ;;		Unchanged: 0/0
  9681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9686 ;;Total ram usage:        0 bytes
  9687 ;; Hardware stack levels used:    1
  9688 ;; Hardware stack levels required when called:    6
  9689 ;; This function calls:
  9690 ;;		_TMR4_Start
  9691 ;; This function is called by:
  9692 ;;		_goto_mode
  9693 ;;		_Validate
  9694 ;; This function uses a non-reentrant model
  9695 ;;
  9696                           
  9697                           
  9698                           ;psect for function _TMR4_StartTimer
  9699  0AE3                     _TMR4_StartTimer:	
  9700                           
  9701                           ;tmr4.c: 118: TMR4_Start();
  9702                           
  9703                           ;incstack = 0
  9704                           ; Regs used in _TMR4_StartTimer: [status,2+status,0+pclath+cstack]
  9705  0AE3  2F0E               	ljmp	l3588
  9706  0AE4                     __end_of_TMR4_StartTimer:	
  9707  0AE4                     __ptext39:	
  9708 ;; *************** function _Clear_RX_Buffer *****************
  9709 ;; Defined at:
  9710 ;;		line 55 in file "mcc_generated_files/WiFly.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;		None
  9713 ;; Auto vars:     Size  Location     Type
  9714 ;;		None
  9715 ;; Return value:  Size  Location     Type
  9716 ;;                  1    wreg      void 
  9717 ;; Registers used:
  9718 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9719 ;; Tracked objects:
  9720 ;;		On entry : 0/1
  9721 ;;		On exit  : 1F/1
  9722 ;;		Unchanged: 0/0
  9723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9724 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9727 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9728 ;;Total ram usage:        0 bytes
  9729 ;; Hardware stack levels used:    1
  9730 ;; Hardware stack levels required when called:    6
  9731 ;; This function calls:
  9732 ;;		_EUSART_Read
  9733 ;;		_EUSART_is_rx_ready
  9734 ;; This function is called by:
  9735 ;;		_WiFly_SendString
  9736 ;;		_WiFly_EnterCMDMode
  9737 ;;		_WiFly_SendCMD_SingleArg
  9738 ;;		_WiFly_SendCMD_DoubleArg
  9739 ;;		_send_message
  9740 ;; This function uses a non-reentrant model
  9741 ;;
  9742                           
  9743                           
  9744                           ;psect for function _Clear_RX_Buffer
  9745  0AE4                     _Clear_RX_Buffer:	
  9746  0AE4                     l3540:	
  9747                           ;WiFly.c: 56: while (EUSART_is_rx_ready()) {
  9748                           
  9749                           ;incstack = 0
  9750                           ; Regs used in _Clear_RX_Buffer: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9751                           
  9752  0AE4  22BC  3188         	fcall	_EUSART_is_rx_ready
  9753  0AE6  3A00               	xorlw	0
  9754  0AE7  1903               	btfsc	3,2
  9755  0AE8  0008               	return
  9756                           
  9757                           ;WiFly.c: 57: uart[WiFly].Read();
  9758  0AE9  27C6               	fcall	PL22	;call to abstracted procedure
  9759  0AEA  008A               	movwf	10
  9760  0AEB  3F00               	moviw [0]fsr0
  9761  0AEC  000A               	callw
  9762  0AED  3188               	pagesel	$
  9763  0AEE  2AE4               	goto	l3540
  9764  0AEF                     __end_of_Clear_RX_Buffer:	
  9765  0AEF                     __ptext35:	
  9766 ;; *************** function _CheckResponse *****************
  9767 ;; Defined at:
  9768 ;;		line 120 in file "main.c"
  9769 ;; Parameters:    Size  Location     Type
  9770 ;;  chkString1      2    6[COMMON] PTR const unsigned char 
  9771 ;;		 -> openStr(5), 
  9772 ;;  chkString2      1    8[COMMON] PTR const unsigned char 
  9773 ;;		 -> failedStr(7), 
  9774 ;;  chkString3      1    9[COMMON] PTR const unsigned char 
  9775 ;;		 -> errStr(4), 
  9776 ;; Auto vars:     Size  Location     Type
  9777 ;;  input           1    8[BANK0 ] unsigned char 
  9778 ;;  i2              2   11[BANK0 ] unsigned int 
  9779 ;;  i1              2    9[BANK0 ] unsigned int 
  9780 ;;  i3              2    6[BANK0 ] unsigned int 
  9781 ;;  length2         2    4[BANK0 ] unsigned int 
  9782 ;;  length1         2    2[BANK0 ] unsigned int 
  9783 ;;  length3         2    0[BANK0 ] unsigned int 
  9784 ;; Return value:  Size  Location     Type
  9785 ;;                  1    wreg      unsigned char 
  9786 ;; Registers used:
  9787 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9788 ;; Tracked objects:
  9789 ;;		On entry : 0/0
  9790 ;;		On exit  : 1F/0
  9791 ;;		Unchanged: 0/0
  9792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9793 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9794 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9795 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9796 ;;      Totals:         5      13       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9797 ;;Total ram usage:       18 bytes
  9798 ;; Hardware stack levels used:    1
  9799 ;; Hardware stack levels required when called:    7
  9800 ;; This function calls:
  9801 ;;		_WiFly_ReadChar
  9802 ;;		_strlen
  9803 ;; This function is called by:
  9804 ;;		_connect_socket
  9805 ;; This function uses a non-reentrant model
  9806 ;;
  9807                           
  9808                           
  9809                           ;psect for function _CheckResponse
  9810  0AEF                     _CheckResponse:	
  9811                           
  9812                           ;main.c: 121: size_t length1 = strlen(chkString1);
  9813                           
  9814                           ;incstack = 0
  9815                           ; Regs used in _CheckResponse: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9816  0AEF  0877               	movf	CheckResponse@chkString1+1,w
  9817  0AF0  00F2               	movwf	strlen@s+1
  9818  0AF1  0876               	movf	CheckResponse@chkString1,w
  9819  0AF2  00F1               	movwf	strlen@s
  9820  0AF3  2367  3188         	fcall	_strlen
  9821  0AF5  0872               	movf	?_strlen+1,w
  9822  0AF6  0020               	movlb	0	; select bank0
  9823  0AF7  00A3               	movwf	CheckResponse@length1+1
  9824  0AF8  0871               	movf	?_strlen,w
  9825  0AF9  00A2               	movwf	CheckResponse@length1
  9826                           
  9827                           ;main.c: 122: size_t i1 = 0;
  9828  0AFA  01A9               	clrf	CheckResponse@i1
  9829  0AFB  01AA               	clrf	CheckResponse@i1+1
  9830                           
  9831                           ;main.c: 123: size_t length2 = strlen(chkString2);
  9832  0AFC  0878               	movf	CheckResponse@chkString2,w
  9833  0AFD  00F1               	movwf	strlen@s
  9834  0AFE  01F2               	clrf	strlen@s+1
  9835  0AFF  2367  3188         	fcall	_strlen
  9836  0B01  0872               	movf	?_strlen+1,w
  9837  0B02  0020               	movlb	0	; select bank0
  9838  0B03  00A5               	movwf	CheckResponse@length2+1
  9839  0B04  0871               	movf	?_strlen,w
  9840  0B05  00A4               	movwf	CheckResponse@length2
  9841                           
  9842                           ;main.c: 124: size_t i2 = 0;
  9843  0B06  01AB               	clrf	CheckResponse@i2
  9844  0B07  01AC               	clrf	CheckResponse@i2+1
  9845                           
  9846                           ;main.c: 125: size_t length3 = strlen(chkString3);
  9847  0B08  0879               	movf	CheckResponse@chkString3,w
  9848  0B09  00F1               	movwf	strlen@s
  9849  0B0A  01F2               	clrf	strlen@s+1
  9850  0B0B  2367  3188         	fcall	_strlen
  9851  0B0D  0872               	movf	?_strlen+1,w
  9852  0B0E  0020               	movlb	0	; select bank0
  9853  0B0F  00A1               	movwf	CheckResponse@length3+1
  9854  0B10  0871               	movf	?_strlen,w
  9855  0B11  00A0               	movwf	CheckResponse@length3
  9856  0B12                     l3908:	
  9857                           
  9858                           ;main.c: 126: size_t i3 = 0;
  9859  0B12  01A6               	clrf	CheckResponse@i3
  9860  0B13  01A7               	clrf	CheckResponse@i3+1
  9861                           
  9862                           ;main.c: 128: while (i1 < length1 && i2 < length2 && i3 < length3) {
  9863  0B14  2B3E               	goto	l3930
  9864  0B15                     l3910:	
  9865                           
  9866                           ;main.c: 129: char input = WiFly_ReadChar();
  9867  0B15  2264  3188         	fcall	_WiFly_ReadChar
  9868  0B17  0020               	movlb	0	; select bank0
  9869  0B18  00A8               	movwf	CheckResponse@input
  9870                           
  9871                           ;main.c: 130: if (input == chkString1[i1]) {
  9872  0B19  0876               	movf	CheckResponse@chkString1,w
  9873  0B1A  0729               	addwf	CheckResponse@i1,w
  9874  0B1B  0084               	movwf	4
  9875  0B1C  0877               	movf	CheckResponse@chkString1+1,w
  9876  0B1D  3D2A               	addwfc	CheckResponse@i1+1,w
  9877  0B1E  0085               	movwf	5
  9878  0B1F  0800               	movf	0,w	;code access
  9879  0B20  0628               	xorwf	CheckResponse@input,w
  9880  0B21  1D03               	skipz
  9881  0B22  2B27               	goto	l3916
  9882                           
  9883                           ;main.c: 131: i1++;
  9884  0B23  0AA9               	incf	CheckResponse@i1,f
  9885  0B24  1903               	skipnz
  9886  0B25  0AAA               	incf	CheckResponse@i1+1,f
  9887                           
  9888                           ;main.c: 132: } else {
  9889  0B26  2B29               	goto	l3918
  9890  0B27                     l3916:	
  9891                           
  9892                           ;main.c: 133: i1 = 0;
  9893  0B27  01A9               	clrf	CheckResponse@i1
  9894  0B28  01AA               	clrf	CheckResponse@i1+1
  9895  0B29                     l3918:	
  9896                           
  9897                           ;main.c: 134: }
  9898                           ;main.c: 136: if (input == chkString2[i2]) {
  9899  0B29  082B               	movf	CheckResponse@i2,w
  9900  0B2A  0778               	addwf	CheckResponse@chkString2,w
  9901  0B2B  27CC  3188         	fcall	PL26	;call to abstracted procedure
  9902  0B2D  1D03               	skipz
  9903  0B2E  2B33               	goto	l3922
  9904                           
  9905                           ;main.c: 137: i2++;
  9906  0B2F  0AAB               	incf	CheckResponse@i2,f
  9907  0B30  1903               	skipnz
  9908  0B31  0AAC               	incf	CheckResponse@i2+1,f
  9909                           
  9910                           ;main.c: 138: } else {
  9911  0B32  2B35               	goto	l3924
  9912  0B33                     l3922:	
  9913                           
  9914                           ;main.c: 139: i2 = 0;
  9915  0B33  01AB               	clrf	CheckResponse@i2
  9916  0B34  01AC               	clrf	CheckResponse@i2+1
  9917  0B35                     l3924:	
  9918                           
  9919                           ;main.c: 140: }
  9920                           ;main.c: 142: if (input == chkString3[i3]) {
  9921  0B35  0826               	movf	CheckResponse@i3,w
  9922  0B36  0779               	addwf	CheckResponse@chkString3,w
  9923  0B37  27CC  3188         	fcall	PL26	;call to abstracted procedure
  9924  0B39  1D03               	skipz
  9925  0B3A  2B12               	goto	l3908
  9926                           
  9927                           ;main.c: 143: i3++;
  9928  0B3B  0AA6               	incf	CheckResponse@i3,f
  9929  0B3C  1903               	skipnz
  9930  0B3D  0AA7               	incf	CheckResponse@i3+1,f
  9931  0B3E                     l3930:	
  9932                           ;main.c: 144: } else {
  9933                           
  9934  0B3E  0823               	movf	CheckResponse@length1+1,w
  9935  0B3F  022A               	subwf	CheckResponse@i1+1,w
  9936  0B40  1D03               	skipz
  9937  0B41  2B44               	goto	u3315
  9938  0B42  0822               	movf	CheckResponse@length1,w
  9939  0B43  0229               	subwf	CheckResponse@i1,w
  9940  0B44                     u3315:	
  9941  0B44  1803               	skipnc
  9942  0B45  2B56               	goto	l3936
  9943  0B46  0825               	movf	CheckResponse@length2+1,w
  9944  0B47  022C               	subwf	CheckResponse@i2+1,w
  9945  0B48  1D03               	skipz
  9946  0B49  2B4C               	goto	u3325
  9947  0B4A  0824               	movf	CheckResponse@length2,w
  9948  0B4B  022B               	subwf	CheckResponse@i2,w
  9949  0B4C                     u3325:	
  9950  0B4C  1803               	skipnc
  9951  0B4D  2B56               	goto	l3936
  9952  0B4E  0821               	movf	CheckResponse@length3+1,w
  9953  0B4F  0227               	subwf	CheckResponse@i3+1,w
  9954  0B50  1D03               	skipz
  9955  0B51  2B54               	goto	u3335
  9956  0B52  0820               	movf	CheckResponse@length3,w
  9957  0B53  0226               	subwf	CheckResponse@i3,w
  9958  0B54                     u3335:	
  9959  0B54  1C03               	skipc
  9960  0B55  2B15               	goto	l3910
  9961  0B56                     l3936:	
  9962                           
  9963                           ;main.c: 146: }
  9964                           ;main.c: 147: }
  9965                           ;main.c: 149: if (i1 == length1) {
  9966  0B56  0823               	movf	CheckResponse@length1+1,w
  9967  0B57  062A               	xorwf	CheckResponse@i1+1,w
  9968  0B58  1D03               	skipz
  9969  0B59  2B5C               	goto	u3345
  9970  0B5A  0822               	movf	CheckResponse@length1,w
  9971  0B5B  0629               	xorwf	CheckResponse@i1,w
  9972  0B5C                     u3345:	
  9973  0B5C  1903               	btfsc	3,2
  9974                           
  9975                           ;main.c: 150: return 1;
  9976  0B5D  3401               	retlw	1
  9977  0B5E  0825               	movf	CheckResponse@length2+1,w
  9978  0B5F  062C               	xorwf	CheckResponse@i2+1,w
  9979  0B60  1D03               	skipz
  9980  0B61  2B64               	goto	u3355
  9981  0B62  0824               	movf	CheckResponse@length2,w
  9982  0B63  062B               	xorwf	CheckResponse@i2,w
  9983  0B64                     u3355:	
  9984  0B64  1903               	btfsc	3,2
  9985                           
  9986                           ;main.c: 152: return 2;
  9987  0B65  3402               	retlw	2
  9988                           
  9989                           ;main.c: 154: return 3;
  9990  0B66  3403               	retlw	3
  9991  0B67                     __end_of_CheckResponse:	
  9992  0B67                     __ptext53:	
  9993 ;; *************** function _strlen *****************
  9994 ;; Defined at:
  9995 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\strlen.c"
  9996 ;; Parameters:    Size  Location     Type
  9997 ;;  s               2    1[COMMON] PTR const unsigned char 
  9998 ;;		 -> STR_33(6), STR_24(8), STR_21(7), errStr(4), 
  9999 ;;		 -> failedStr(7), STR_18(5), STR_16(7), STR_14(8), 
 10000 ;;		 -> openStr(5), STR_12(6), hardRebootStr(6), softRebootStr(7), 
 10001 ;;		 -> aokStr(4), endStr(5), cmdStr(4), 
 10002 ;; Auto vars:     Size  Location     Type
 10003 ;;  cp              2    4[COMMON] PTR const unsigned char 
 10004 ;;		 -> STR_33(6), STR_24(8), STR_21(7), errStr(4), 
 10005 ;;		 -> failedStr(7), STR_18(5), STR_16(7), STR_14(8), 
 10006 ;;		 -> openStr(5), STR_12(6), hardRebootStr(6), softRebootStr(7), 
 10007 ;;		 -> aokStr(4), endStr(5), cmdStr(4), 
 10008 ;; Return value:  Size  Location     Type
 10009 ;;                  2    1[COMMON] unsigned int 
 10010 ;; Registers used:
 10011 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10012 ;; Tracked objects:
 10013 ;;		On entry : 0/1
 10014 ;;		On exit  : 0/0
 10015 ;;		Unchanged: 0/0
 10016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10017 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10018 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10019 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10020 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10021 ;;Total ram usage:        5 bytes
 10022 ;; Hardware stack levels used:    1
 10023 ;; Hardware stack levels required when called:    5
 10024 ;; This function calls:
 10025 ;;		Nothing
 10026 ;; This function is called by:
 10027 ;;		_WiFly_CheckRecv
 10028 ;;		_CheckResponse
 10029 ;;		_WaitResponse
 10030 ;; This function uses a non-reentrant model
 10031 ;;
 10032                           
 10033                           
 10034                           ;psect for function _strlen
 10035  0B67                     _strlen:	
 10036                           
 10037                           ;incstack = 0
 10038                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
 10039  0B67  0872               	movf	strlen@s+1,w
 10040  0B68  00F5               	movwf	strlen@cp+1
 10041  0B69  0871               	movf	strlen@s,w
 10042  0B6A  00F4               	movwf	strlen@cp
 10043  0B6B                     l3530:	
 10044  0B6B  0874               	movf	strlen@cp,w
 10045  0B6C  0084               	movwf	4
 10046  0B6D  0875               	movf	strlen@cp+1,w
 10047  0B6E  0085               	movwf	5
 10048  0B6F  0012               	moviw fsr0++
 10049  0B70  1903               	btfsc	3,2
 10050  0B71  2B76               	goto	l3532
 10051  0B72  0AF4               	incf	strlen@cp,f
 10052  0B73  1903               	skipnz
 10053  0B74  0AF5               	incf	strlen@cp+1,f
 10054  0B75  2B6B               	goto	l3530
 10055  0B76                     l3532:	
 10056  0B76  0871               	movf	strlen@s,w
 10057  0B77  0274               	subwf	strlen@cp,w
 10058  0B78  00F1               	movwf	?_strlen
 10059  0B79  0872               	movf	strlen@s+1,w
 10060  0B7A  3B75               	subwfb	strlen@cp+1,w
 10061  0B7B  00F2               	movwf	?_strlen+1
 10062  0B7C  0008               	return
 10063  0B7D                     __end_of_strlen:	
 10064  0B7D                     __ptext24:	
 10065 ;; *************** function _connect_socket *****************
 10066 ;; Defined at:
 10067 ;;		line 159 in file "main.c"
 10068 ;; Parameters:    Size  Location     Type
 10069 ;;  addr            2   72[BANK0 ] PTR const unsigned char 
 10070 ;;		 -> STR_22(12), 
 10071 ;;  port            2   74[BANK0 ] PTR const unsigned char 
 10072 ;;		 -> STR_23(5), 
 10073 ;; Auto vars:     Size  Location     Type
 10074 ;;		None
 10075 ;; Return value:  Size  Location     Type
 10076 ;;                  1    wreg      void 
 10077 ;; Registers used:
 10078 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10079 ;; Tracked objects:
 10080 ;;		On entry : 1F/0
 10081 ;;		On exit  : 1F/1
 10082 ;;		Unchanged: 0/0
 10083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10084 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10085 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10087 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10088 ;;Total ram usage:        4 bytes
 10089 ;; Hardware stack levels used:    1
 10090 ;; Hardware stack levels required when called:   10
 10091 ;; This function calls:
 10092 ;;		_CheckResponse
 10093 ;;		_WiFly_SendCMD_DoubleArg
 10094 ;; This function is called by:
 10095 ;;		_send_message
 10096 ;; This function uses a non-reentrant model
 10097 ;;
 10098                           
 10099                           
 10100                           ;psect for function _connect_socket
 10101  0B7D                     _connect_socket:	
 10102  0B7D                     l770:	
 10103                           ;incstack = 0
 10104                           ; Regs used in _connect_socket: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10105                           ;main.c: 160: do {
 10106                           
 10107                           
 10108                           ;main.c: 161: WiFly_SendCMD_DoubleArg("open %s %s\r\n", addr, port);
 10109  0B7D  305A               	movlw	low (STR_13| (0+32768))
 10110  0B7E  00BA               	movwf	WiFly_SendCMD_DoubleArg@cmdFormat
 10111  0B7F  3092               	movlw	high (STR_13| (0+32768))
 10112  0B80  00BB               	movwf	WiFly_SendCMD_DoubleArg@cmdFormat+1
 10113  0B81  0869               	movf	connect_socket@addr+1,w
 10114  0B82  00BD               	movwf	WiFly_SendCMD_DoubleArg@arg1+1
 10115  0B83  0868               	movf	connect_socket@addr,w
 10116  0B84  00BC               	movwf	WiFly_SendCMD_DoubleArg@arg1
 10117  0B85  086B               	movf	connect_socket@port+1,w
 10118  0B86  00BF               	movwf	WiFly_SendCMD_DoubleArg@arg2+1
 10119  0B87  086A               	movf	connect_socket@port,w
 10120  0B88  00BE               	movwf	WiFly_SendCMD_DoubleArg@arg2
 10121  0B89  239B  3188         	fcall	_WiFly_SendCMD_DoubleArg
 10122                           
 10123                           ;main.c: 162: } while (CheckResponse(openStr, failedStr, errStr) != 1);
 10124  0B8B  30F4               	movlw	low (_openStr| (0+32768))
 10125  0B8C  00F6               	movwf	CheckResponse@chkString1
 10126  0B8D  3092               	movlw	high (_openStr| (0+32768))
 10127  0B8E  00F7               	movwf	CheckResponse@chkString1+1
 10128  0B8F  30B3               	movlw	(low (_failedStr| 0))& (0+255)
 10129  0B90  00F8               	movwf	CheckResponse@chkString2
 10130  0B91  30BA               	movlw	(low (_errStr| 0))& (0+255)
 10131  0B92  00F9               	movwf	CheckResponse@chkString3
 10132  0B93  22EF  3188         	fcall	_CheckResponse
 10133  0B95  3A01               	xorlw	1
 10134  0B96  1D03               	skipz
 10135  0B97  2B7D               	goto	l770
 10136                           
 10137                           ;main.c: 164: inCMD = 0;
 10138  0B98  0021               	movlb	1	; select bank1
 10139  0B99  01EA               	clrf	_inCMD^(0+128)
 10140  0B9A  0008               	return
 10141  0B9B                     __end_of_connect_socket:	
 10142  0B9B                     __ptext25:	
 10143 ;; *************** function _WiFly_SendCMD_DoubleArg *****************
 10144 ;; Defined at:
 10145 ;;		line 124 in file "mcc_generated_files/WiFly.c"
 10146 ;; Parameters:    Size  Location     Type
 10147 ;;  cmdFormat       2   26[BANK0 ] PTR const unsigned char 
 10148 ;;		 -> STR_20(13), STR_13(13), 
 10149 ;;  arg1            2   28[BANK0 ] PTR const unsigned char 
 10150 ;;		 -> STR_22(12), 
 10151 ;;  arg2            2   30[BANK0 ] PTR const unsigned char 
 10152 ;;		 -> STR_23(5), 
 10153 ;; Auto vars:     Size  Location     Type
 10154 ;;  txBuffer       40   32[BANK0 ] unsigned char [40]
 10155 ;; Return value:  Size  Location     Type
 10156 ;;                  1    wreg      void 
 10157 ;; Registers used:
 10158 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10159 ;; Tracked objects:
 10160 ;;		On entry : 1F/0
 10161 ;;		On exit  : 0/0
 10162 ;;		Unchanged: 0/0
 10163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10164 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10165 ;;      Locals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10167 ;;      Totals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10168 ;;Total ram usage:       46 bytes
 10169 ;; Hardware stack levels used:    1
 10170 ;; Hardware stack levels required when called:    9
 10171 ;; This function calls:
 10172 ;;		_Clear_RX_Buffer
 10173 ;;		_WiFly_CheckInCMD
 10174 ;;		_WiFly_Send
 10175 ;;		_sprintf
 10176 ;; This function is called by:
 10177 ;;		_connect_socket
 10178 ;; This function uses a non-reentrant model
 10179 ;;
 10180                           
 10181                           
 10182                           ;psect for function _WiFly_SendCMD_DoubleArg
 10183  0B9B                     _WiFly_SendCMD_DoubleArg:	
 10184                           
 10185                           ;WiFly.c: 126: WiFly_CheckInCMD();
 10186                           
 10187                           ;incstack = 0
 10188                           ; Regs used in _WiFly_SendCMD_DoubleArg: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10189  0B9B  23B4  3188         	fcall	_WiFly_CheckInCMD
 10190                           
 10191                           ;WiFly.c: 127: Clear_RX_Buffer();
 10192  0B9D  22E4  3188         	fcall	_Clear_RX_Buffer
 10193                           
 10194                           ;WiFly.c: 128: char txBuffer[40];
 10195                           ;WiFly.c: 129: sprintf(txBuffer, cmdFormat, arg1, arg2);
 10196  0B9F  0020               	movlb	0	; select bank0
 10197  0BA0  083B               	movf	WiFly_SendCMD_DoubleArg@cmdFormat+1,w
 10198  0BA1  00A2               	movwf	sprintf@f+1
 10199  0BA2  083A               	movf	WiFly_SendCMD_DoubleArg@cmdFormat,w
 10200  0BA3  00A1               	movwf	sprintf@f
 10201  0BA4  083D               	movf	WiFly_SendCMD_DoubleArg@arg1+1,w
 10202  0BA5  00A4               	movwf	(low ((?_sprintf| 0+2))+1)
 10203  0BA6  083C               	movf	WiFly_SendCMD_DoubleArg@arg1,w
 10204  0BA7  00A3               	movwf	low ((?_sprintf| 0+2))
 10205  0BA8  083F               	movf	WiFly_SendCMD_DoubleArg@arg2+1,w
 10206  0BA9  00A6               	movwf	(low ((?_sprintf| 0+4))+1)
 10207  0BAA  083E               	movf	WiFly_SendCMD_DoubleArg@arg2,w
 10208  0BAB  00A5               	movwf	low ((?_sprintf| 0+4))
 10209  0BAC  3040               	movlw	(low (WiFly_SendCMD_DoubleArg@txBuffer| 0))& (0+255)
 10210  0BAD  2434  3188         	fcall	_sprintf
 10211                           
 10212                           ;WiFly.c: 130: WiFly_Send(txBuffer);
 10213  0BAF  3040               	movlw	low WiFly_SendCMD_DoubleArg@txBuffer
 10214  0BB0  00F2               	movwf	WiFly_Send@command
 10215  0BB1  3000               	movlw	high WiFly_SendCMD_DoubleArg@txBuffer
 10216  0BB2  00F3               	movwf	WiFly_Send@command+1
 10217  0BB3  2E98               	ljmp	l2548
 10218  0BB4                     __end_of_WiFly_SendCMD_DoubleArg:	
 10219  0BB4                     __ptext32:	
 10220 ;; *************** function _WiFly_CheckInCMD *****************
 10221 ;; Defined at:
 10222 ;;		line 61 in file "mcc_generated_files/WiFly.c"
 10223 ;; Parameters:    Size  Location     Type
 10224 ;;		None
 10225 ;; Auto vars:     Size  Location     Type
 10226 ;;		None
 10227 ;; Return value:  Size  Location     Type
 10228 ;;                  1    wreg      void 
 10229 ;; Registers used:
 10230 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10231 ;; Tracked objects:
 10232 ;;		On entry : 0/0
 10233 ;;		On exit  : 1F/1
 10234 ;;		Unchanged: 0/0
 10235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10240 ;;Total ram usage:        0 bytes
 10241 ;; Hardware stack levels used:    1
 10242 ;; Hardware stack levels required when called:    8
 10243 ;; This function calls:
 10244 ;;		_WiFly_EnterCMDMode
 10245 ;; This function is called by:
 10246 ;;		_WiFly_SendCMD_SingleArg
 10247 ;;		_WiFly_SendCMD_DoubleArg
 10248 ;;		_WiFly_SendCMD
 10249 ;;		_WiFly_RebootCMD
 10250 ;; This function uses a non-reentrant model
 10251 ;;
 10252                           
 10253                           
 10254                           ;psect for function _WiFly_CheckInCMD
 10255  0BB4                     _WiFly_CheckInCMD:	
 10256                           
 10257                           ;WiFly.c: 62: if (!inCMD) {
 10258                           
 10259                           ;incstack = 0
 10260                           ; Regs used in _WiFly_CheckInCMD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10261  0BB4  0021               	movlb	1	; select bank1
 10262  0BB5  086A               	movf	_inCMD^(0+128),w
 10263  0BB6  1D03               	btfss	3,2
 10264  0BB7  0008               	return
 10265                           
 10266                           ;WiFly.c: 63: WiFly_EnterCMDMode();
 10267  0BB8  284C               	ljmp	l3556
 10268  0BB9                     __end_of_WiFly_CheckInCMD:	
 10269  0BB9                     __ptext21:	
 10270 ;; *************** function _eeprom_write *****************
 10271 ;; Defined at:
 10272 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic\eewrite.c"
 10273 ;; Parameters:    Size  Location     Type
 10274 ;;  addr            1    wreg     unsigned char 
 10275 ;;  value           1    1[COMMON] unsigned char 
 10276 ;; Auto vars:     Size  Location     Type
 10277 ;;  addr            1    2[COMMON] unsigned char 
 10278 ;; Return value:  Size  Location     Type
 10279 ;;                  1    wreg      void 
 10280 ;; Registers used:
 10281 ;;		wreg, status,2
 10282 ;; Tracked objects:
 10283 ;;		On entry : 1F/1
 10284 ;;		On exit  : 1F/10
 10285 ;;		Unchanged: 0/0
 10286 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10287 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10288 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10290 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10291 ;;Total ram usage:        2 bytes
 10292 ;; Hardware stack levels used:    1
 10293 ;; Hardware stack levels required when called:    5
 10294 ;; This function calls:
 10295 ;;		Nothing
 10296 ;; This function is called by:
 10297 ;;		_Pair
 10298 ;; This function uses a non-reentrant model
 10299 ;;
 10300                           
 10301                           
 10302                           ;psect for function _eeprom_write
 10303  0BB9                     _eeprom_write:	
 10304                           
 10305                           ;incstack = 0
 10306                           ; Regs used in _eeprom_write: [wreg+status,2]
 10307                           ;eeprom_write@addr stored from wreg
 10308  0BB9  00F2               	movwf	eeprom_write@addr
 10309  0BBA                     l988:	
 10310  0BBA  0030               	movlb	16	; select bank16
 10311  0BBB  189E               	btfsc	30,1	;volsfr
 10312  0BBC  2BBA               	goto	l988
 10313  0BBD  171E               	bsf	30,6	;volsfr
 10314  0BBE  0872               	movf	eeprom_write@addr,w
 10315  0BBF  009A               	movwf	26	;volatile
 10316  0BC0  3070               	movlw	112
 10317  0BC1  009B               	movwf	27	;volatile
 10318  0BC2  019D               	clrf	29	;volatile
 10319  0BC3  0871               	movf	eeprom_write@value,w
 10320  0BC4  009C               	movwf	28	;volatile
 10321  0BC5  1003               	bcf	3,0	;volatile
 10322  0BC6  1B8B               	btfsc	11,7	;volatile
 10323  0BC7  1403               	bsf	3,0	;volatile
 10324  0BC8  138B               	bcf	11,7	;volatile
 10325  0BC9  151E               	bsf	30,2	;volsfr
 10326  0BCA  3055               	movlw	85
 10327  0BCB  009F               	movwf	31	;volsfr
 10328  0BCC  30AA               	movlw	170
 10329  0BCD  009F               	movwf	31	;volsfr
 10330  0BCE  149E               	bsf	30,1	;volsfr
 10331  0BCF                     l992:	
 10332  0BCF  189E               	btfsc	30,1	;volsfr
 10333  0BD0  2BCF               	goto	l992
 10334  0BD1  111E               	bcf	30,2	;volsfr
 10335  0BD2  1803               	btfsc	3,0	;volatile
 10336  0BD3  178B               	bsf	11,7	;volatile
 10337  0BD4  0008               	return
 10338  0BD5                     __end_of_eeprom_write:	
 10339  0BD5                     __ptext14:	
 10340 ;; *************** function _TMR2_SetInterruptHandler *****************
 10341 ;; Defined at:
 10342 ;;		line 180 in file "mcc_generated_files/tmr2.c"
 10343 ;; Parameters:    Size  Location     Type
 10344 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 10345 ;;		 -> blink(1), TMR2_DefaultInterruptHandler(1), 
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;		None
 10348 ;; Return value:  Size  Location     Type
 10349 ;;                  1    wreg      void 
 10350 ;; Registers used:
 10351 ;;		wreg
 10352 ;; Tracked objects:
 10353 ;;		On entry : 1F/E
 10354 ;;		On exit  : 1F/1
 10355 ;;		Unchanged: 0/0
 10356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10357 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10360 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10361 ;;Total ram usage:        2 bytes
 10362 ;; Hardware stack levels used:    1
 10363 ;; Hardware stack levels required when called:    5
 10364 ;; This function calls:
 10365 ;;		Nothing
 10366 ;; This function is called by:
 10367 ;;		_TMR2_Initialize
 10368 ;;		_main
 10369 ;; This function uses a non-reentrant model
 10370 ;;
 10371                           
 10372                           
 10373                           ;psect for function _TMR2_SetInterruptHandler
 10374  0BD5                     _TMR2_SetInterruptHandler:	
 10375                           
 10376                           ;tmr2.c: 181: TMR2_InterruptHandler = InterruptHandler;
 10377                           
 10378                           ;incstack = 0
 10379                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
 10380  0BD5  0872               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
 10381  0BD6  0021               	movlb	1	; select bank1
 10382  0BD7  00E2               	movwf	(_TMR2_InterruptHandler+1)^(0+128)
 10383  0BD8  0871               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
 10384  0BD9  00E1               	movwf	_TMR2_InterruptHandler^(0+128)
 10385  0BDA  0008               	return
 10386  0BDB                     __end_of_TMR2_SetInterruptHandler:	
 10387  0BDB                     __ptext12:	
 10388 ;; *************** function _TMR4_SetInterruptHandler *****************
 10389 ;; Defined at:
 10390 ;;		line 180 in file "mcc_generated_files/tmr4.c"
 10391 ;; Parameters:    Size  Location     Type
 10392 ;;  InterruptHan    2    1[COMMON] PTR FTN()void 
 10393 ;;		 -> setFlag(1), TMR4_DefaultInterruptHandler(1), 
 10394 ;; Auto vars:     Size  Location     Type
 10395 ;;		None
 10396 ;; Return value:  Size  Location     Type
 10397 ;;                  1    wreg      void 
 10398 ;; Registers used:
 10399 ;;		wreg
 10400 ;; Tracked objects:
 10401 ;;		On entry : 10/1
 10402 ;;		On exit  : 1F/1
 10403 ;;		Unchanged: 0/0
 10404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10409 ;;Total ram usage:        2 bytes
 10410 ;; Hardware stack levels used:    1
 10411 ;; Hardware stack levels required when called:    5
 10412 ;; This function calls:
 10413 ;;		Nothing
 10414 ;; This function is called by:
 10415 ;;		_TMR4_Initialize
 10416 ;;		_main
 10417 ;; This function uses a non-reentrant model
 10418 ;;
 10419                           
 10420                           
 10421                           ;psect for function _TMR4_SetInterruptHandler
 10422  0BDB                     _TMR4_SetInterruptHandler:	
 10423                           
 10424                           ;tmr4.c: 181: TMR4_InterruptHandler = InterruptHandler;
 10425                           
 10426                           ;incstack = 0
 10427                           ; Regs used in _TMR4_SetInterruptHandler: [wreg]
 10428  0BDB  0872               	movf	TMR4_SetInterruptHandler@InterruptHandler+1,w
 10429  0BDC  0021               	movlb	1	; select bank1
 10430  0BDD  00E8               	movwf	(_TMR4_InterruptHandler+1)^(0+128)
 10431  0BDE  0871               	movf	TMR4_SetInterruptHandler@InterruptHandler,w
 10432  0BDF  00E7               	movwf	_TMR4_InterruptHandler^(0+128)
 10433  0BE0  0008               	return
 10434  0BE1                     __end_of_TMR4_SetInterruptHandler:	
 10435  0BE1                     __ptext9:	
 10436 ;; *************** function _SYSTEM_Initialize *****************
 10437 ;; Defined at:
 10438 ;;		line 87 in file "mcc_generated_files/mcc.c"
 10439 ;; Parameters:    Size  Location     Type
 10440 ;;		None
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;		None
 10443 ;; Return value:  Size  Location     Type
 10444 ;;                  1    wreg      void 
 10445 ;; Registers used:
 10446 ;;		wreg, status,2, status,0, pclath, cstack
 10447 ;; Tracked objects:
 10448 ;;		On entry : B1F/10
 10449 ;;		On exit  : 1F/E
 10450 ;;		Unchanged: 0/0
 10451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10456 ;;Total ram usage:        0 bytes
 10457 ;; Hardware stack levels used:    1
 10458 ;; Hardware stack levels required when called:    7
 10459 ;; This function calls:
 10460 ;;		_EUSART_Initialize
 10461 ;;		_OSCILLATOR_Initialize
 10462 ;;		_PIN_MANAGER_Initialize
 10463 ;;		_TMR2_Initialize
 10464 ;;		_TMR4_Initialize
 10465 ;;		_WWDT_Initialize
 10466 ;; This function is called by:
 10467 ;;		_main
 10468 ;; This function uses a non-reentrant model
 10469 ;;
 10470                           
 10471                           
 10472                           ;psect for function _SYSTEM_Initialize
 10473  0BE1                     _SYSTEM_Initialize:	
 10474                           
 10475                           ;mcc.c: 90: PIN_MANAGER_Initialize();
 10476                           
 10477                           ;incstack = 0
 10478                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
 10479  0BE1  23F5  3188         	fcall	_PIN_MANAGER_Initialize
 10480                           
 10481                           ;mcc.c: 91: OSCILLATOR_Initialize();
 10482  0BE3  23EC  3188         	fcall	_OSCILLATOR_Initialize
 10483                           
 10484                           ;mcc.c: 92: WWDT_Initialize();
 10485  0BE5  2711  3188         	fcall	_WWDT_Initialize
 10486                           
 10487                           ;mcc.c: 93: TMR4_Initialize();
 10488  0BE7  26FA  3188         	fcall	_TMR4_Initialize
 10489                           
 10490                           ;mcc.c: 94: TMR2_Initialize();
 10491  0BE9  27E8  3188         	fcall	_TMR2_Initialize
 10492                           
 10493                           ;mcc.c: 95: EUSART_Initialize();
 10494  0BEB  2F3A               	ljmp	l3126
 10495  0BEC                     __end_of_SYSTEM_Initialize:	
 10496  0BEC                     __ptext16:	
 10497 ;; *************** function _OSCILLATOR_Initialize *****************
 10498 ;; Defined at:
 10499 ;;		line 98 in file "mcc_generated_files/mcc.c"
 10500 ;; Parameters:    Size  Location     Type
 10501 ;;		None
 10502 ;; Auto vars:     Size  Location     Type
 10503 ;;		None
 10504 ;; Return value:  Size  Location     Type
 10505 ;;                  1    wreg      void 
 10506 ;; Registers used:
 10507 ;;		wreg, status,2
 10508 ;; Tracked objects:
 10509 ;;		On entry : 0/10
 10510 ;;		On exit  : 1F/11
 10511 ;;		Unchanged: 0/0
 10512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10514 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10516 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10517 ;;Total ram usage:        0 bytes
 10518 ;; Hardware stack levels used:    1
 10519 ;; Hardware stack levels required when called:    5
 10520 ;; This function calls:
 10521 ;;		Nothing
 10522 ;; This function is called by:
 10523 ;;		_SYSTEM_Initialize
 10524 ;; This function uses a non-reentrant model
 10525 ;;
 10526                           
 10527                           
 10528                           ;psect for function _OSCILLATOR_Initialize
 10529  0BEC                     _OSCILLATOR_Initialize:	
 10530                           
 10531                           ;mcc.c: 101: OSCCON1 = 0x60;
 10532                           
 10533                           ;incstack = 0
 10534                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
 10535  0BEC  3060               	movlw	96
 10536  0BED  0031               	movlb	17	; select bank17
 10537  0BEE  008D               	movwf	13	;volatile
 10538                           
 10539                           ;mcc.c: 103: OSCCON3 = 0x00;
 10540  0BEF  018F               	clrf	15	;volatile
 10541                           
 10542                           ;mcc.c: 105: OSCEN = 0x00;
 10543  0BF0  0191               	clrf	17	;volatile
 10544                           
 10545                           ;mcc.c: 107: OSCFRQ = 0x06;
 10546  0BF1  3006               	movlw	6
 10547  0BF2  0093               	movwf	19	;volatile
 10548                           
 10549                           ;mcc.c: 109: OSCTUNE = 0x00;
 10550  0BF3  0192               	clrf	18	;volatile
 10551  0BF4  0008               	return
 10552  0BF5                     __end_of_OSCILLATOR_Initialize:	
 10553  0BF5                     __ptext15:	
 10554 ;; *************** function _PIN_MANAGER_Initialize *****************
 10555 ;; Defined at:
 10556 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
 10557 ;; Parameters:    Size  Location     Type
 10558 ;;		None
 10559 ;; Auto vars:     Size  Location     Type
 10560 ;;  state           1    1[COMMON] unsigned char 
 10561 ;; Return value:  Size  Location     Type
 10562 ;;                  1    wreg      void 
 10563 ;; Registers used:
 10564 ;;		wreg, status,2, status,0
 10565 ;; Tracked objects:
 10566 ;;		On entry : B1F/10
 10567 ;;		On exit  : 0/0
 10568 ;;		Unchanged: 0/0
 10569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10571 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10573 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10574 ;;Total ram usage:        1 bytes
 10575 ;; Hardware stack levels used:    1
 10576 ;; Hardware stack levels required when called:    5
 10577 ;; This function calls:
 10578 ;;		Nothing
 10579 ;; This function is called by:
 10580 ;;		_SYSTEM_Initialize
 10581 ;; This function uses a non-reentrant model
 10582 ;;
 10583                           
 10584                           
 10585                           ;psect for function _PIN_MANAGER_Initialize
 10586  0BF5                     _PIN_MANAGER_Initialize:	
 10587                           
 10588                           ;pin_manager.c: 57: LATE = 0x00;
 10589                           
 10590                           ;incstack = 0
 10591                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
 10592  0BF5  0020               	movlb	0	; select bank0
 10593  0BF6  019A               	clrf	26	;volatile
 10594                           
 10595                           ;pin_manager.c: 58: LATD = 0x00;
 10596  0BF7  0199               	clrf	25	;volatile
 10597                           
 10598                           ;pin_manager.c: 59: LATA = 0x00;
 10599  0BF8  0196               	clrf	22	;volatile
 10600                           
 10601                           ;pin_manager.c: 60: LATB = 0x00;
 10602  0BF9  0197               	clrf	23	;volatile
 10603                           
 10604                           ;pin_manager.c: 61: LATC = 0x00;
 10605  0BFA  0198               	clrf	24	;volatile
 10606                           
 10607                           ;pin_manager.c: 66: TRISE = 0x07;
 10608  0BFB  3007               	movlw	7
 10609  0BFC  0095               	movwf	21	;volatile
 10610                           
 10611                           ;pin_manager.c: 67: TRISA = 0x0F;
 10612  0BFD  300F               	movlw	15
 10613  0BFE  0091               	movwf	17	;volatile
 10614                           
 10615                           ;pin_manager.c: 68: TRISB = 0xFF;
 10616  0BFF  30FF               	movlw	255
 10617  0C00  0092               	movwf	18	;volatile
 10618                           
 10619                           ;pin_manager.c: 69: TRISC = 0xF9;
 10620  0C01  30F9               	movlw	249
 10621  0C02  0093               	movwf	19	;volatile
 10622                           
 10623                           ;pin_manager.c: 70: TRISD = 0xF3;
 10624  0C03  30F3               	movlw	243
 10625  0C04  0094               	movwf	20	;volatile
 10626                           
 10627                           ;pin_manager.c: 75: ANSELC = 0xDA;
 10628  0C05  30DA               	movlw	218
 10629  0C06  003E               	movlb	30	; select bank30
 10630  0C07  00CE               	movwf	78	;volatile
 10631                           
 10632                           ;pin_manager.c: 76: ANSELB = 0xEF;
 10633  0C08  30EF               	movlw	239
 10634  0C09  00C3               	movwf	67	;volatile
 10635                           
 10636                           ;pin_manager.c: 77: ANSELD = 0xF3;
 10637  0C0A  30F3               	movlw	243
 10638  0C0B  00D9               	movwf	89	;volatile
 10639                           
 10640                           ;pin_manager.c: 78: ANSELE = 0x07;
 10641  0C0C  3007               	movlw	7
 10642  0C0D  00E4               	movwf	100	;volatile
 10643                           
 10644                           ;pin_manager.c: 79: ANSELA = 0xFF;
 10645  0C0E  30FF               	movlw	255
 10646  0C0F  00B8               	movwf	56	;volatile
 10647                           
 10648                           ;pin_manager.c: 84: WPUD = 0x00;
 10649  0C10  01DA               	clrf	90	;volatile
 10650                           
 10651                           ;pin_manager.c: 85: WPUE = 0x00;
 10652  0C11  01E5               	clrf	101	;volatile
 10653                           
 10654                           ;pin_manager.c: 86: WPUB = 0x10;
 10655  0C12  3010               	movlw	16
 10656  0C13  00C4               	movwf	68	;volatile
 10657                           
 10658                           ;pin_manager.c: 87: WPUA = 0x00;
 10659  0C14  01B9               	clrf	57	;volatile
 10660                           
 10661                           ;pin_manager.c: 88: WPUC = 0x20;
 10662  0C15  3020               	movlw	32
 10663  0C16  00CF               	movwf	79	;volatile
 10664                           
 10665                           ;pin_manager.c: 93: ODCONE = 0x00;
 10666  0C17  01E6               	clrf	102	;volatile
 10667                           
 10668                           ;pin_manager.c: 94: ODCONA = 0x00;
 10669  0C18  01BA               	clrf	58	;volatile
 10670                           
 10671                           ;pin_manager.c: 95: ODCONB = 0x00;
 10672  0C19  01C5               	clrf	69	;volatile
 10673                           
 10674                           ;pin_manager.c: 96: ODCONC = 0x00;
 10675  0C1A  01D0               	clrf	80	;volatile
 10676                           
 10677                           ;pin_manager.c: 97: ODCOND = 0x00;
 10678  0C1B  01DB               	clrf	91	;volatile
 10679                           
 10680                           ;pin_manager.c: 104: bool state = (unsigned char)GIE;
 10681  0C1C  3000               	movlw	0
 10682  0C1D  1B8B               	btfsc	11,7	;volatile
 10683  0C1E  3001               	movlw	1
 10684  0C1F  00F1               	movwf	PIN_MANAGER_Initialize@state
 10685                           
 10686                           ;pin_manager.c: 105: GIE = 0;
 10687  0C20  138B               	bcf	11,7	;volatile
 10688                           
 10689                           ;pin_manager.c: 106: PPSLOCK = 0x55;
 10690                           
 10691                           ;pin_manager.c: 107: PPSLOCK = 0xAA;
 10692  0C21  27D2  3188         	fcall	PL28	;call to abstracted procedure
 10693                           
 10694                           ;pin_manager.c: 108: PPSLOCKbits.PPSLOCKED = 0x00;
 10695  0C23  100F               	bcf	15,0	;volatile
 10696                           
 10697                           ;pin_manager.c: 110: RXPPSbits.RXPPS = 0x10;
 10698  0C24  084B               	movf	75,w	;volatile
 10699  0C25  39E0               	andlw	-32
 10700  0C26  3810               	iorlw	16
 10701  0C27  00CB               	movwf	75	;volatile
 10702                           
 10703                           ;pin_manager.c: 111: RC1PPS = 0x10;
 10704  0C28  3010               	movlw	16
 10705  0C29  003E               	movlb	30	; select bank30
 10706  0C2A  00A1               	movwf	33	;volatile
 10707                           
 10708                           ;pin_manager.c: 113: PPSLOCK = 0x55;
 10709                           
 10710                           ;pin_manager.c: 114: PPSLOCK = 0xAA;
 10711  0C2B  27D2  3188         	fcall	PL28	;call to abstracted procedure
 10712                           
 10713                           ;pin_manager.c: 115: PPSLOCKbits.PPSLOCKED = 0x01;
 10714  0C2D  140F               	bsf	15,0	;volatile
 10715                           
 10716                           ;pin_manager.c: 117: GIE = state;
 10717  0C2E  1C71               	btfss	PIN_MANAGER_Initialize@state,0
 10718  0C2F  2C32               	goto	u2240
 10719  0C30  178B               	bsf	11,7	;volatile
 10720  0C31  0008               	return
 10721  0C32                     u2240:	
 10722  0C32  138B               	bcf	11,7	;volatile
 10723  0C33  0008               	return
 10724  0C34                     __end_of_PIN_MANAGER_Initialize:	
 10725  0C34                     __ptext26:	
 10726 ;; *************** function _sprintf *****************
 10727 ;; Defined at:
 10728 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
 10729 ;; Parameters:    Size  Location     Type
 10730 ;;  sp              1    wreg     PTR unsigned char 
 10731 ;;		 -> Knock@knockString(10), Validate@valString(13), Pair@pairString(9), WiFly_SendCMD_DoubleArg@txBuffer(40), 
 10732 ;;		 -> WiFly_SendCMD_SingleArg@txBuffer(40), 
 10733 ;;  f               2    1[BANK0 ] PTR const unsigned char 
 10734 ;;		 -> STR_30(19), STR_29(25), STR_27(11), STR_26(14), 
 10735 ;;		 -> STR_25(10), STR_20(13), STR_13(13), STR_9(19), 
 10736 ;;		 -> STR_8(25), 
 10737 ;; Auto vars:     Size  Location     Type
 10738 ;;  sp              1   22[BANK0 ] PTR unsigned char 
 10739 ;;		 -> Knock@knockString(10), Validate@valString(13), Pair@pairString(9), WiFly_SendCMD_DoubleArg@txBuffer(40), 
 10740 ;;		 -> WiFly_SendCMD_SingleArg@txBuffer(40), 
 10741 ;;  idx             1   11[BANK0 ] unsigned char 
 10742 ;;  tmpval          4    0        struct .
 10743 ;;  width           2   23[BANK0 ] int 
 10744 ;;  flag            2   20[BANK0 ] unsigned short 
 10745 ;;  val             2   17[BANK0 ] unsigned int 
 10746 ;;  len             2   15[BANK0 ] unsigned int 
 10747 ;;  cp              2   12[BANK0 ] PTR const unsigned char 
 10748 ;;		 -> STR_36(7), sprintf@c(1), STR_35(10), STR_34(14), 
 10749 ;;		 -> STR_23(5), STR_22(12), 
 10750 ;;  c               1   25[BANK0 ] char 
 10751 ;;  prec            1   19[BANK0 ] char 
 10752 ;;  ap              1   14[BANK0 ] PTR void [1]
 10753 ;;		 -> ?_sprintf(2), 
 10754 ;; Return value:  Size  Location     Type
 10755 ;;                  2    1[BANK0 ] int 
 10756 ;; Registers used:
 10757 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10758 ;; Tracked objects:
 10759 ;;		On entry : 1F/0
 10760 ;;		On exit  : 1F/0
 10761 ;;		Unchanged: 0/0
 10762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10763 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10764 ;;      Locals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10765 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10766 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10767 ;;Total ram usage:       25 bytes
 10768 ;; Hardware stack levels used:    1
 10769 ;; Hardware stack levels required when called:    6
 10770 ;; This function calls:
 10771 ;;		___bmul
 10772 ;;		___lwdiv
 10773 ;;		___lwmod
 10774 ;;		___wmul
 10775 ;;		_isdigit
 10776 ;; This function is called by:
 10777 ;;		_WiFly_SendCMD_SingleArg
 10778 ;;		_WiFly_SendCMD_DoubleArg
 10779 ;;		_Pair
 10780 ;;		_Validate
 10781 ;;		_Knock
 10782 ;; This function uses a non-reentrant model
 10783 ;;
 10784                           
 10785                           
 10786                           ;psect for function _sprintf
 10787  0C34                     _sprintf:	
 10788                           
 10789                           ;incstack = 0
 10790                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10791                           ;sprintf@sp stored from wreg
 10792  0C34  00B6               	movwf	sprintf@sp
 10793                           
 10794                           ;doprnt.c: 494: va_list ap;
 10795                           ;doprnt.c: 499: signed char c;
 10796                           ;doprnt.c: 501: int width;
 10797                           ;doprnt.c: 506: signed char prec;
 10798                           ;doprnt.c: 508: unsigned short flag;
 10799                           ;doprnt.c: 523: union {
 10800                           ;doprnt.c: 524: unsigned long vd;
 10801                           ;doprnt.c: 525: double integ;
 10802                           ;doprnt.c: 526: } tmpval;
 10803                           ;doprnt.c: 528: unsigned int val;
 10804                           ;doprnt.c: 529: unsigned len;
 10805                           ;doprnt.c: 530: const char * cp;
 10806                           ;doprnt.c: 533: *ap = __va_start();
 10807  0C35  3023               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
 10808  0C36  00AE               	movwf	sprintf@ap
 10809  0C37                     l3852:	
 10810                           ;doprnt.c: 536: while(c = *f++) {
 10811                           
 10812  0C37  0020               	movlb	0	; select bank0
 10813  0C38  2770  3188         	fcall	PL4	;call to abstracted procedure
 10814  0C3A  0839               	movf	sprintf@c,w
 10815  0C3B  1903               	btfsc	3,2
 10816  0C3C  2E4D               	goto	l3854
 10817                           
 10818                           ;doprnt.c: 538: if(c != '%')
 10819  0C3D  3025               	movlw	37
 10820  0C3E  0639               	xorwf	sprintf@c,w
 10821  0C3F  1903               	btfsc	3,2
 10822  0C40  2C48               	goto	l3618
 10823                           
 10824                           ;doprnt.c: 540: {
 10825                           ;doprnt.c: 541: ((*sp++ = (c)));
 10826  0C41  0836               	movf	sprintf@sp,w
 10827  0C42  0086               	movwf	6
 10828  0C43  0187               	clrf	7
 10829  0C44  0839               	movf	sprintf@c,w
 10830  0C45  0081               	movwf	1
 10831  0C46  0AB6               	incf	sprintf@sp,f
 10832                           
 10833                           ;doprnt.c: 542: continue;
 10834  0C47  2C37               	goto	l3852
 10835  0C48                     l3618:	
 10836                           
 10837                           ;doprnt.c: 543: }
 10838                           ;doprnt.c: 546: width = 0;
 10839  0C48  01B7               	clrf	sprintf@width
 10840  0C49  01B8               	clrf	sprintf@width+1
 10841                           
 10842                           ;doprnt.c: 548: flag = 0;
 10843  0C4A  01B4               	clrf	sprintf@flag
 10844  0C4B  01B5               	clrf	sprintf@flag+1
 10845  0C4C  2C53               	goto	l3626
 10846  0C4D                     l866:	
 10847                           ;doprnt.c: 553: case '-':
 10848                           
 10849                           
 10850                           ;doprnt.c: 554: flag |= 0x08;
 10851  0C4D  15B4               	bsf	sprintf@flag,3
 10852                           
 10853                           ;doprnt.c: 556: continue;
 10854  0C4E  2C50               	goto	l3620
 10855  0C4F                     l868:	
 10856                           ;doprnt.c: 579: case '0':
 10857                           
 10858                           
 10859                           ;doprnt.c: 580: flag |= 0x04;
 10860  0C4F  1534               	bsf	sprintf@flag,2
 10861  0C50                     l3620:	
 10862                           
 10863                           ;doprnt.c: 555: f++;
 10864  0C50  0AA1               	incf	sprintf@f,f
 10865  0C51  1903               	skipnz
 10866  0C52  0AA2               	incf	sprintf@f+1,f
 10867  0C53                     l3626:	
 10868  0C53  2789  3188         	fcall	PL8	;call to abstracted procedure
 10869                           
 10870                           ; Switch size 1, requested type "space"
 10871                           ; Number of cases is 2, Range of values is 45 to 48
 10872                           ; switch strategies available:
 10873                           ; Name         Instructions Cycles
 10874                           ; simple_byte            7     4 (average)
 10875                           ; direct_byte           17     9 (fixed)
 10876                           ; jumptable            263     9 (fixed)
 10877                           ;	Chosen strategy is simple_byte
 10878  0C55  3A2D               	xorlw	45	; case 45
 10879  0C56  1903               	skipnz
 10880  0C57  2C4D               	goto	l866
 10881  0C58  3A1D               	xorlw	29	; case 48
 10882  0C59  1903               	skipnz
 10883  0C5A  2C4F               	goto	l868
 10884  0C5B  2C5C               	goto	l870
 10885  0C5C                     l870:	
 10886                           
 10887                           ;doprnt.c: 593: if(flag & 0x08)
 10888  0C5C  1DB4               	btfss	sprintf@flag,3
 10889  0C5D  2C5F               	goto	l3630
 10890                           
 10891                           ;doprnt.c: 594: flag &= ~0x04;
 10892  0C5E  1134               	bcf	sprintf@flag,2
 10893  0C5F                     l3630:	
 10894                           
 10895                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 10896  0C5F  2789  3188         	fcall	PL8	;call to abstracted procedure
 10897  0C61  2652  3188         	fcall	_isdigit
 10898  0C63  1C03               	btfss	3,0
 10899  0C64  2C89               	goto	l3642
 10900                           
 10901                           ;doprnt.c: 598: width = 0;
 10902  0C65  01B7               	clrf	sprintf@width
 10903  0C66  01B8               	clrf	sprintf@width+1
 10904  0C67                     l3634:	
 10905                           
 10906                           ;doprnt.c: 600: width *= 10;
 10907  0C67  300A               	movlw	10
 10908  0C68  00F1               	movwf	___wmul@multiplier
 10909  0C69  01F2               	clrf	___wmul@multiplier+1
 10910  0C6A  0838               	movf	sprintf@width+1,w
 10911  0C6B  00F4               	movwf	___wmul@multiplicand+1
 10912  0C6C  0837               	movf	sprintf@width,w
 10913  0C6D  00F3               	movwf	___wmul@multiplicand
 10914  0C6E  26E5  3188         	fcall	___wmul
 10915  0C70  0872               	movf	?___wmul+1,w
 10916  0C71  00B8               	movwf	sprintf@width+1
 10917  0C72  0871               	movf	?___wmul,w
 10918  0C73  00B7               	movwf	sprintf@width
 10919                           
 10920                           ;doprnt.c: 601: width += *f++ - '0';
 10921  0C74  2789  3188         	fcall	PL8	;call to abstracted procedure
 10922  0C76  3ED0               	addlw	208
 10923  0C77  00A7               	movwf	??_sprintf
 10924  0C78  30FF               	movlw	255
 10925  0C79  1803               	skipnc
 10926  0C7A  3000               	movlw	0
 10927  0C7B  00A8               	movwf	??_sprintf+1
 10928  0C7C  0827               	movf	??_sprintf,w
 10929  0C7D  07B7               	addwf	sprintf@width,f
 10930  0C7E  0828               	movf	??_sprintf+1,w
 10931  0C7F  3DB8               	addwfc	sprintf@width+1,f
 10932  0C80  0AA1               	incf	sprintf@f,f
 10933  0C81  1903               	skipnz
 10934  0C82  0AA2               	incf	sprintf@f+1,f
 10935                           
 10936                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 10937  0C83  2789  3188         	fcall	PL8	;call to abstracted procedure
 10938  0C85  2652  3188         	fcall	_isdigit
 10939  0C87  1803               	btfsc	3,0
 10940  0C88  2C67               	goto	l3634
 10941  0C89                     l3642:	
 10942                           
 10943                           ;doprnt.c: 608: }
 10944                           ;doprnt.c: 611: if(*f == '.') {
 10945  0C89  0821               	movf	sprintf@f,w
 10946  0C8A  0084               	movwf	4
 10947  0C8B  0822               	movf	sprintf@f+1,w
 10948  0C8C  0085               	movwf	5
 10949  0C8D  0012               	moviw fsr0++
 10950  0C8E  3A2E               	xorlw	46
 10951  0C8F  1D03               	btfss	3,2
 10952  0C90  2CAB               	goto	l3656
 10953                           
 10954                           ;doprnt.c: 612: flag |= 0x4000;
 10955  0C91  1735               	bsf	sprintf@flag+1,6
 10956                           
 10957                           ;doprnt.c: 613: f++;
 10958  0C92  0AA1               	incf	sprintf@f,f
 10959  0C93  1903               	skipnz
 10960  0C94  0AA2               	incf	sprintf@f+1,f
 10961                           
 10962                           ;doprnt.c: 620: {
 10963                           ;doprnt.c: 621: prec = 0;
 10964  0C95  01B3               	clrf	sprintf@prec
 10965  0C96                     l3654:	
 10966                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
 10967                           
 10968  0C96  2789  3188         	fcall	PL8	;call to abstracted procedure
 10969  0C98  2652  3188         	fcall	_isdigit
 10970  0C9A  1C03               	btfss	3,0
 10971  0C9B  2D2E               	goto	l3716
 10972                           
 10973                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
 10974  0C9C  2789  3188         	fcall	PL8	;call to abstracted procedure
 10975  0C9E  00A7               	movwf	??_sprintf
 10976  0C9F  300A               	movlw	10
 10977  0CA0  00F1               	movwf	___bmul@multiplicand
 10978  0CA1  0833               	movf	sprintf@prec,w
 10979  0CA2  26B9  3188         	fcall	___bmul
 10980  0CA4  0727               	addwf	??_sprintf,w
 10981  0CA5  3ED0               	addlw	-48
 10982  0CA6  00B3               	movwf	sprintf@prec
 10983  0CA7  0AA1               	incf	sprintf@f,f
 10984  0CA8  1903               	skipnz
 10985  0CA9  0AA2               	incf	sprintf@f+1,f
 10986  0CAA  2C96               	goto	l3654
 10987  0CAB                     l3656:	
 10988                           
 10989                           ;doprnt.c: 626: prec = 0;
 10990  0CAB  01B3               	clrf	sprintf@prec
 10991  0CAC  2D2E               	goto	l3716
 10992  0CAD                     l887:	
 10993                           
 10994                           ;doprnt.c: 718: case 'x':
 10995                           ;doprnt.c: 721: flag |= 0x80;
 10996  0CAD  17B4               	bsf	sprintf@flag,7
 10997                           
 10998                           ;doprnt.c: 723: break;
 10999  0CAE  2D43               	goto	l885
 11000  0CAF                     l3658:	
 11001                           
 11002                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 11003  0CAF  082E               	movf	sprintf@ap,w
 11004  0CB0  0086               	movwf	6
 11005  0CB1  0187               	clrf	7
 11006  0CB2  3F40               	moviw [0]fsr1
 11007  0CB3  00AC               	movwf	sprintf@cp
 11008  0CB4  3F41               	moviw [1]fsr1
 11009  0CB5  00AD               	movwf	sprintf@cp+1
 11010  0CB6  0AAE               	incf	sprintf@ap,f
 11011  0CB7  0AAE               	incf	sprintf@ap,f
 11012                           
 11013                           ;doprnt.c: 740: if(!cp)
 11014  0CB8  042C               	iorwf	sprintf@cp,w
 11015  0CB9  1D03               	btfss	3,2
 11016  0CBA  2CBF               	goto	l3666
 11017                           
 11018                           ;doprnt.c: 741: cp = "(null)";
 11019  0CBB  30C5               	movlw	low (STR_36| (0+32768))
 11020  0CBC  00AC               	movwf	sprintf@cp
 11021  0CBD  3092               	movlw	high (STR_36| (0+32768))
 11022  0CBE  00AD               	movwf	sprintf@cp+1
 11023  0CBF                     l3666:	
 11024                           
 11025                           ;doprnt.c: 745: len = 0;
 11026  0CBF  01AF               	clrf	sprintf@len
 11027  0CC0  01B0               	clrf	sprintf@len+1
 11028  0CC1                     l3670:	
 11029                           ;doprnt.c: 746: while(cp[len])
 11030                           
 11031  0CC1  082C               	movf	sprintf@cp,w
 11032  0CC2  072F               	addwf	sprintf@len,w
 11033  0CC3  0084               	movwf	4
 11034  0CC4  082D               	movf	sprintf@cp+1,w
 11035  0CC5  3D30               	addwfc	sprintf@len+1,w
 11036  0CC6  0085               	movwf	5
 11037  0CC7  0012               	moviw fsr0++
 11038  0CC8  1903               	btfsc	3,2
 11039  0CC9  2CCE               	goto	l3672
 11040                           
 11041                           ;doprnt.c: 747: len++;
 11042  0CCA  0AAF               	incf	sprintf@len,f
 11043  0CCB  1903               	skipnz
 11044  0CCC  0AB0               	incf	sprintf@len+1,f
 11045  0CCD  2CC1               	goto	l3670
 11046  0CCE                     l3672:	
 11047                           
 11048                           ;doprnt.c: 753: if(prec && prec < len)
 11049  0CCE  0833               	movf	sprintf@prec,w
 11050  0CCF  1903               	btfsc	3,2
 11051  0CD0  2CE3               	goto	l3678
 11052  0CD1  0833               	movf	sprintf@prec,w
 11053  0CD2  00A7               	movwf	??_sprintf
 11054  0CD3  01A8               	clrf	??_sprintf+1
 11055  0CD4  1BA7               	btfsc	??_sprintf,7
 11056  0CD5  03A8               	decf	??_sprintf+1,f
 11057  0CD6  0830               	movf	sprintf@len+1,w
 11058  0CD7  0228               	subwf	??_sprintf+1,w
 11059  0CD8  1D03               	skipz
 11060  0CD9  2CDC               	goto	u2895
 11061  0CDA  082F               	movf	sprintf@len,w
 11062  0CDB  0227               	subwf	??_sprintf,w
 11063  0CDC                     u2895:	
 11064  0CDC  1803               	skipnc
 11065  0CDD  2CE3               	goto	l3678
 11066                           
 11067                           ;doprnt.c: 754: len = prec;
 11068  0CDE  0833               	movf	sprintf@prec,w
 11069  0CDF  00AF               	movwf	sprintf@len
 11070  0CE0  01B0               	clrf	sprintf@len+1
 11071  0CE1  1BAF               	btfsc	sprintf@len,7
 11072  0CE2  03B0               	decf	sprintf@len+1,f
 11073  0CE3                     l3678:	
 11074                           
 11075                           ;doprnt.c: 757: if(width > len)
 11076  0CE3  0838               	movf	sprintf@width+1,w
 11077  0CE4  0230               	subwf	sprintf@len+1,w
 11078  0CE5  1D03               	skipz
 11079  0CE6  2CE9               	goto	u2905
 11080  0CE7  0837               	movf	sprintf@width,w
 11081  0CE8  022F               	subwf	sprintf@len,w
 11082  0CE9                     u2905:	
 11083  0CE9  1803               	skipnc
 11084  0CEA  2CF0               	goto	l3682
 11085                           
 11086                           ;doprnt.c: 758: width -= len;
 11087  0CEB  082F               	movf	sprintf@len,w
 11088  0CEC  02B7               	subwf	sprintf@width,f
 11089  0CED  0830               	movf	sprintf@len+1,w
 11090  0CEE  3BB8               	subwfb	sprintf@width+1,f
 11091  0CEF  2CF2               	goto	l3684
 11092  0CF0                     l3682:	
 11093                           
 11094                           ;doprnt.c: 759: else
 11095                           ;doprnt.c: 760: width = 0;
 11096  0CF0  01B7               	clrf	sprintf@width
 11097  0CF1  01B8               	clrf	sprintf@width+1
 11098  0CF2                     l3684:	
 11099                           
 11100                           ;doprnt.c: 762: if(!(flag & 0x08))
 11101  0CF2  1DB4               	btfss	sprintf@flag,3
 11102  0CF3  2CF7               	goto	l3692
 11103  0CF4  2D0E               	goto	l3700
 11104  0CF5                     l3688:	
 11105                           
 11106                           ;doprnt.c: 765: ((*sp++ = (' ')));
 11107  0CF5  27B1  3188         	fcall	PL16	;call to abstracted procedure
 11108  0CF7                     l3692:	
 11109  0CF7  30FF               	movlw	-1
 11110  0CF8  07B7               	addwf	sprintf@width,f
 11111  0CF9  1C03               	skipc
 11112  0CFA  03B8               	decf	sprintf@width+1,f
 11113  0CFB  0F37               	incfsz	sprintf@width,w
 11114  0CFC  2CF5               	goto	l3688
 11115  0CFD  0A38               	incf	sprintf@width+1,w
 11116  0CFE  1903               	btfsc	3,2
 11117  0CFF  2D0E               	goto	l3700
 11118  0D00  2CF5               	goto	l3688
 11119  0D01                     l3694:	
 11120                           
 11121                           ;doprnt.c: 768: ((*sp++ = (*cp++)));
 11122  0D01  0836               	movf	sprintf@sp,w
 11123  0D02  0086               	movwf	6
 11124  0D03  0187               	clrf	7
 11125  0D04  082C               	movf	sprintf@cp,w
 11126  0D05  0084               	movwf	4
 11127  0D06  082D               	movf	sprintf@cp+1,w
 11128  0D07  0085               	movwf	5
 11129  0D08  0800               	movf	0,w	;code access
 11130  0D09  0081               	movwf	1
 11131  0D0A  0AAC               	incf	sprintf@cp,f
 11132  0D0B  1903               	skipnz
 11133  0D0C  0AAD               	incf	sprintf@cp+1,f
 11134  0D0D  0AB6               	incf	sprintf@sp,f
 11135  0D0E                     l3700:	
 11136  0D0E  3001               	movlw	1
 11137  0D0F  02AF               	subwf	sprintf@len,f
 11138  0D10  3000               	movlw	0
 11139  0D11  3BB0               	subwfb	sprintf@len+1,f
 11140  0D12  0F2F               	incfsz	sprintf@len,w
 11141  0D13  2D01               	goto	l3694
 11142  0D14  0A30               	incf	sprintf@len+1,w
 11143  0D15  1D03               	btfss	3,2
 11144  0D16  2D01               	goto	l3694
 11145                           
 11146                           ;doprnt.c: 770: if(flag & 0x08)
 11147  0D17  19B4               	btfsc	sprintf@flag,3
 11148  0D18  2D1C               	goto	l3708
 11149  0D19  2C37               	goto	l3852
 11150  0D1A                     l3704:	
 11151                           
 11152                           ;doprnt.c: 772: ((*sp++ = (' ')));
 11153  0D1A  27B1  3188         	fcall	PL16	;call to abstracted procedure
 11154  0D1C                     l3708:	
 11155  0D1C  30FF               	movlw	-1
 11156  0D1D  07B7               	addwf	sprintf@width,f
 11157  0D1E  1C03               	skipc
 11158  0D1F  03B8               	decf	sprintf@width+1,f
 11159  0D20  0F37               	incfsz	sprintf@width,w
 11160  0D21  2D1A               	goto	l3704
 11161  0D22  0A38               	incf	sprintf@width+1,w
 11162  0D23  1903               	btfsc	3,2
 11163  0D24  2C37               	goto	l3852
 11164  0D25  2D1A               	goto	l3704
 11165  0D26                     l3710:	
 11166                           
 11167                           ;doprnt.c: 805: cp = (char *)&c;
 11168  0D26  3039               	movlw	low sprintf@c
 11169  0D27  00AC               	movwf	sprintf@cp
 11170  0D28  3000               	movlw	high sprintf@c
 11171  0D29  00AD               	movwf	sprintf@cp+1
 11172                           
 11173                           ;doprnt.c: 806: len = 1;
 11174  0D2A  01AF               	clrf	sprintf@len
 11175  0D2B  0AAF               	incf	sprintf@len,f
 11176  0D2C  01B0               	clrf	sprintf@len+1
 11177                           
 11178                           ;doprnt.c: 807: goto dostring;
 11179  0D2D  2CCE               	goto	l3672
 11180  0D2E                     l3716:	
 11181  0D2E  2770  3188         	fcall	PL4	;call to abstracted procedure
 11182                           
 11183                           ; Switch size 1, requested type "space"
 11184                           ; Number of cases is 6, Range of values is 0 to 120
 11185                           ; switch strategies available:
 11186                           ; Name         Instructions Cycles
 11187                           ; simple_byte           19    10 (average)
 11188                           ; direct_byte          248     6 (fixed)
 11189                           ; jumptable            260     6 (fixed)
 11190                           ;	Chosen strategy is simple_byte
 11191  0D30  3A00               	xorlw	0	; case 0
 11192  0D31  1903               	skipnz
 11193  0D32  2E4D               	goto	l3854
 11194  0D33  3A64               	xorlw	100	; case 100
 11195  0D34  1903               	skipnz
 11196  0D35  2D43               	goto	l885
 11197  0D36  3A0D               	xorlw	13	; case 105
 11198  0D37  1903               	skipnz
 11199  0D38  2D43               	goto	l885
 11200  0D39  3A19               	xorlw	25	; case 112
 11201  0D3A  1903               	skipnz
 11202  0D3B  2CAD               	goto	l887
 11203  0D3C  3A03               	xorlw	3	; case 115
 11204  0D3D  1903               	skipnz
 11205  0D3E  2CAF               	goto	l3658
 11206  0D3F  3A0B               	xorlw	11	; case 120
 11207  0D40  1903               	skipnz
 11208  0D41  2CAD               	goto	l887
 11209  0D42  2D26               	goto	l3710
 11210  0D43                     l885:	
 11211                           
 11212                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
 11213  0D43  1BB4               	btfsc	sprintf@flag,7
 11214  0D44  2D51               	goto	l3728
 11215                           
 11216                           ;doprnt.c: 1253: {
 11217                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 11218  0D45  27A7  3188         	fcall	PL14	;call to abstracted procedure
 11219                           
 11220                           ;doprnt.c: 1261: if((int)val < 0) {
 11221  0D47  1FB2               	btfss	sprintf@val+1,7
 11222  0D48  2D53               	goto	l3732
 11223                           
 11224                           ;doprnt.c: 1262: flag |= 0x03;
 11225  0D49  3003               	movlw	3
 11226  0D4A  04B4               	iorwf	sprintf@flag,f
 11227                           
 11228                           ;doprnt.c: 1263: val = -val;
 11229  0D4B  09B1               	comf	sprintf@val,f
 11230  0D4C  09B2               	comf	sprintf@val+1,f
 11231  0D4D  0AB1               	incf	sprintf@val,f
 11232  0D4E  1903               	skipnz
 11233  0D4F  0AB2               	incf	sprintf@val+1,f
 11234  0D50  2D53               	goto	l3732
 11235  0D51                     l3728:	
 11236                           
 11237                           ;doprnt.c: 1268: else
 11238                           ;doprnt.c: 1273: {
 11239                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11240  0D51  27A7  3188         	fcall	PL14	;call to abstracted procedure
 11241  0D53                     l3732:	
 11242                           
 11243                           ;doprnt.c: 1287: }
 11244                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
 11245  0D53  0833               	movf	sprintf@prec,w
 11246  0D54  1D03               	btfss	3,2
 11247  0D55  2D84               	goto	l3764
 11248  0D56  0831               	movf	sprintf@val,w
 11249  0D57  0432               	iorwf	sprintf@val+1,w
 11250  0D58  1D03               	btfss	3,2
 11251  0D59  2D84               	goto	l3764
 11252                           
 11253                           ;doprnt.c: 1291: prec++;
 11254  0D5A  0AB3               	incf	sprintf@prec,f
 11255  0D5B  2D84               	goto	l3764
 11256  0D5C                     l914:	
 11257                           ;doprnt.c: 1299: case 0x00:
 11258                           
 11259                           
 11260                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11261  0D5C  01B9               	clrf	sprintf@c
 11262  0D5D                     L3:	
 11263  0D5D  3005               	movlw	5
 11264  0D5E  0AB9               	incf	sprintf@c,f
 11265  0D5F  0639               	xorwf	sprintf@c,w
 11266  0D60  1903               	btfsc	3,2
 11267  0D61  2D8C               	goto	l3766
 11268                           
 11269                           ;doprnt.c: 1306: if(val < dpowers[c])
 11270  0D62  0839               	movf	sprintf@c,w
 11271  0D63  279B  3188         	fcall	PL12	;call to abstracted procedure
 11272  0D65  00A9               	movwf	??_sprintf+2
 11273  0D66  3F01               	moviw [1]fsr0
 11274  0D67  00AA               	movwf	??_sprintf+3
 11275  0D68  0232               	subwf	sprintf@val+1,w
 11276  0D69  1D03               	skipz
 11277  0D6A  2D6D               	goto	u3015
 11278  0D6B  0829               	movf	??_sprintf+2,w
 11279  0D6C  0231               	subwf	sprintf@val,w
 11280  0D6D                     u3015:	
 11281  0D6D  1C03               	btfss	3,0
 11282  0D6E  2D8C               	goto	l3766
 11283  0D6F  2D5D               	goto	L3
 11284  0D70                     l919:	
 11285                           ;doprnt.c: 1314: case 0x80:
 11286                           
 11287                           
 11288                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
 11289  0D70  01B9               	clrf	sprintf@c
 11290  0D71                     L4:	
 11291  0D71  3004               	movlw	4
 11292  0D72  0AB9               	incf	sprintf@c,f
 11293  0D73  0639               	xorwf	sprintf@c,w
 11294  0D74  1903               	btfsc	3,2
 11295  0D75  2D8C               	goto	l3766
 11296                           
 11297                           ;doprnt.c: 1317: if(val < hexpowers[c])
 11298  0D76  0839               	movf	sprintf@c,w
 11299  0D77  277D  3188         	fcall	PL6	;call to abstracted procedure
 11300  0D79  00A9               	movwf	??_sprintf+2
 11301  0D7A  3F01               	moviw [1]fsr0
 11302  0D7B  00AA               	movwf	??_sprintf+3
 11303  0D7C  0232               	subwf	sprintf@val+1,w
 11304  0D7D  1D03               	skipz
 11305  0D7E  2D81               	goto	u3035
 11306  0D7F  0829               	movf	??_sprintf+2,w
 11307  0D80  0231               	subwf	sprintf@val,w
 11308  0D81                     u3035:	
 11309  0D81  1C03               	btfss	3,0
 11310  0D82  2D8C               	goto	l3766
 11311  0D83  2D71               	goto	L4
 11312  0D84                     l3764:	
 11313  0D84  0834               	movf	sprintf@flag,w
 11314  0D85  3980               	andlw	128
 11315                           
 11316                           ; Switch size 1, requested type "space"
 11317                           ; Number of cases is 2, Range of values is 0 to 128
 11318                           ; switch strategies available:
 11319                           ; Name         Instructions Cycles
 11320                           ; simple_byte            7     4 (average)
 11321                           ; jumptable            260     6 (fixed)
 11322                           ;	Chosen strategy is simple_byte
 11323  0D86  1903               	skipnz
 11324  0D87  2D5C               	goto	l914
 11325  0D88  3A80               	xorlw	128	; case 128
 11326  0D89  1903               	skipnz
 11327  0D8A  2D70               	goto	l919
 11328  0D8B  2D8C               	goto	l3766
 11329  0D8C                     l3766:	
 11330                           
 11331                           ;doprnt.c: 1339: if(c < prec)
 11332  0D8C  0839               	movf	sprintf@c,w
 11333  0D8D  3A80               	xorlw	128
 11334  0D8E  00A7               	movwf	??_sprintf
 11335  0D8F  0833               	movf	sprintf@prec,w
 11336  0D90  3A80               	xorlw	128
 11337  0D91  02A7               	subwf	??_sprintf,f
 11338                           
 11339                           ;doprnt.c: 1340: c = prec;
 11340  0D92  0833               	movf	sprintf@prec,w
 11341  0D93  1803               	skipnc
 11342  0D94  2D97               	goto	L7
 11343  0D95  00B9               	movwf	sprintf@c
 11344  0D96  2DA0               	goto	l3774
 11345  0D97                     L7:	
 11346                           ;doprnt.c: 1341: else if(prec < c)
 11347                           
 11348  0D97  3A80               	xorlw	128
 11349  0D98  00A7               	movwf	??_sprintf
 11350  0D99  0839               	movf	sprintf@c,w
 11351  0D9A  3A80               	xorlw	128
 11352  0D9B  02A7               	subwf	??_sprintf,f
 11353  0D9C  1803               	skipnc
 11354  0D9D  2DA0               	goto	l3774
 11355                           
 11356                           ;doprnt.c: 1342: prec = c;
 11357  0D9E  0839               	movf	sprintf@c,w
 11358  0D9F  00B3               	movwf	sprintf@prec
 11359  0DA0                     l3774:	
 11360                           
 11361                           ;doprnt.c: 1345: if(width && flag & 0x03)
 11362  0DA0  0837               	movf	sprintf@width,w
 11363  0DA1  0438               	iorwf	sprintf@width+1,w
 11364  0DA2  1903               	btfsc	3,2
 11365  0DA3  2DAC               	goto	l3780
 11366  0DA4  0834               	movf	sprintf@flag,w
 11367  0DA5  3903               	andlw	3
 11368  0DA6  1903               	btfsc	3,2
 11369  0DA7  2DAC               	goto	l3780
 11370                           
 11371                           ;doprnt.c: 1346: width--;
 11372  0DA8  30FF               	movlw	-1
 11373  0DA9  07B7               	addwf	sprintf@width,f
 11374  0DAA  1C03               	skipc
 11375  0DAB  03B8               	decf	sprintf@width+1,f
 11376  0DAC                     l3780:	
 11377                           
 11378                           ;doprnt.c: 1348: if(flag & 0x4000) {
 11379  0DAC  1F35               	btfss	sprintf@flag+1,6
 11380  0DAD  2DBB               	goto	l3788
 11381                           
 11382                           ;doprnt.c: 1349: if(width > prec)
 11383  0DAE  0833               	movf	sprintf@prec,w
 11384  0DAF  2761  3188         	fcall	PL2	;call to abstracted procedure
 11385  0DB1  1803               	skipnc
 11386  0DB2  2DB8               	goto	l3786
 11387                           
 11388                           ;doprnt.c: 1350: width -= prec;
 11389  0DB3  0020               	movlb	0	; select bank0
 11390  0DB4  0833               	movf	sprintf@prec,w
 11391  0DB5  27B8  3188         	fcall	PL18	;call to abstracted procedure
 11392  0DB7  2DBB               	goto	l3788
 11393  0DB8                     l3786:	
 11394                           
 11395                           ;doprnt.c: 1351: else
 11396                           ;doprnt.c: 1352: width = 0;
 11397  0DB8  0020               	movlb	0	; select bank0
 11398  0DB9  01B7               	clrf	sprintf@width
 11399  0DBA  01B8               	clrf	sprintf@width+1
 11400  0DBB                     l3788:	
 11401                           
 11402                           ;doprnt.c: 1353: }
 11403                           ;doprnt.c: 1381: if(width > c)
 11404  0DBB  0839               	movf	sprintf@c,w
 11405  0DBC  2761  3188         	fcall	PL2	;call to abstracted procedure
 11406  0DBE  1803               	skipnc
 11407  0DBF  2DC5               	goto	l3792
 11408                           
 11409                           ;doprnt.c: 1382: width -= c;
 11410  0DC0  0020               	movlb	0	; select bank0
 11411  0DC1  0839               	movf	sprintf@c,w
 11412  0DC2  27B8  3188         	fcall	PL18	;call to abstracted procedure
 11413  0DC4  2DC8               	goto	l3794
 11414  0DC5                     l3792:	
 11415                           
 11416                           ;doprnt.c: 1383: else
 11417                           ;doprnt.c: 1384: width = 0;
 11418  0DC5  0020               	movlb	0	; select bank0
 11419  0DC6  01B7               	clrf	sprintf@width
 11420  0DC7  01B8               	clrf	sprintf@width+1
 11421  0DC8                     l3794:	
 11422                           
 11423                           ;doprnt.c: 1387: if(flag & 0x04) {
 11424  0DC8  1D34               	btfss	sprintf@flag,2
 11425  0DC9  2DE3               	goto	l3810
 11426                           
 11427                           ;doprnt.c: 1392: if(flag & 0x03)
 11428  0DCA  0834               	movf	sprintf@flag,w
 11429  0DCB  3903               	andlw	3
 11430  0DCC  1903               	btfsc	3,2
 11431  0DCD  2DD4               	goto	l3802
 11432                           
 11433                           ;doprnt.c: 1393: ((*sp++ = ('-')));
 11434  0DCE  0836               	movf	sprintf@sp,w
 11435  0DCF  0086               	movwf	6
 11436  0DD0  302D               	movlw	45
 11437  0DD1  0187               	clrf	7
 11438  0DD2  0081               	movwf	1
 11439  0DD3  0AB6               	incf	sprintf@sp,f
 11440  0DD4                     l3802:	
 11441                           
 11442                           ;doprnt.c: 1415: if(width)
 11443  0DD4  0837               	movf	sprintf@width,w
 11444  0DD5  0438               	iorwf	sprintf@width+1,w
 11445  0DD6  1903               	btfsc	3,2
 11446  0DD7  2E36               	goto	l3842
 11447                           
 11448                           ;doprnt.c: 1417: ((*sp++ = ('0')));
 11449  0DD8  0836               	movf	sprintf@sp,w
 11450  0DD9  0086               	movwf	6
 11451  0DDA  3030               	movlw	48
 11452  0DDB  0187               	clrf	7
 11453  0DDC  0081               	movwf	1
 11454  0DDD  30FF               	movlw	-1
 11455  0DDE  0AB6               	incf	sprintf@sp,f
 11456                           
 11457                           ;doprnt.c: 1418: while(--width);
 11458  0DDF  07B7               	addwf	sprintf@width,f
 11459  0DE0  1C03               	skipc
 11460  0DE1  03B8               	decf	sprintf@width+1,f
 11461  0DE2  2DD4               	goto	l3802
 11462  0DE3                     l3810:	
 11463                           
 11464                           ;doprnt.c: 1422: {
 11465                           ;doprnt.c: 1424: if(width
 11466                           ;doprnt.c: 1426: && !(flag & 0x08)
 11467                           ;doprnt.c: 1428: )
 11468  0DE3  0837               	movf	sprintf@width,w
 11469  0DE4  0438               	iorwf	sprintf@width+1,w
 11470  0DE5  1D03               	btfss	3,2
 11471  0DE6  19B4               	btfsc	sprintf@flag,3
 11472  0DE7  2DED               	goto	l3820
 11473  0DE8                     l3814:	
 11474                           
 11475                           ;doprnt.c: 1430: ((*sp++ = (' ')));
 11476  0DE8  0836               	movf	sprintf@sp,w
 11477                           
 11478                           ;doprnt.c: 1431: while(--width);
 11479  0DE9  278F  3188         	fcall	PL10	;call to abstracted procedure
 11480  0DEB  1D03               	btfss	3,2
 11481  0DEC  2DE8               	goto	l3814
 11482  0DED                     l3820:	
 11483                           
 11484                           ;doprnt.c: 1438: if(flag & 0x03)
 11485  0DED  0834               	movf	sprintf@flag,w
 11486  0DEE  3903               	andlw	3
 11487  0DEF  1903               	btfsc	3,2
 11488  0DF0  2E36               	goto	l3842
 11489                           
 11490                           ;doprnt.c: 1439: ((*sp++ = ('-')));
 11491  0DF1  0836               	movf	sprintf@sp,w
 11492  0DF2  0086               	movwf	6
 11493  0DF3  302D               	movlw	45
 11494  0DF4  0187               	clrf	7
 11495  0DF5  2E34               	goto	L6
 11496  0DF6                     l3826:	
 11497                           
 11498                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11499  0DF6  300A               	movlw	10
 11500  0DF7  00F8               	movwf	___lwmod@divisor
 11501  0DF8  01F9               	clrf	___lwmod@divisor+1
 11502  0DF9  0833               	movf	sprintf@prec,w
 11503  0DFA  279B  3188         	fcall	PL12	;call to abstracted procedure
 11504  0DFC  00F1               	movwf	___lwdiv@divisor
 11505  0DFD  3F01               	moviw [1]fsr0
 11506  0DFE  00F2               	movwf	___lwdiv@divisor+1
 11507  0DFF  0832               	movf	sprintf@val+1,w
 11508  0E00  00F4               	movwf	___lwdiv@dividend+1
 11509  0E01  0831               	movf	sprintf@val,w
 11510  0E02  00F3               	movwf	___lwdiv@dividend
 11511  0E03  2660  3188         	fcall	___lwdiv
 11512  0E05  0872               	movf	?___lwdiv+1,w
 11513  0E06  00FB               	movwf	___lwmod@dividend+1
 11514  0E07  0871               	movf	?___lwdiv,w
 11515  0E08  00FA               	movwf	___lwmod@dividend
 11516  0E09  26C5  3188         	fcall	___lwmod
 11517  0E0B  0878               	movf	?___lwmod,w
 11518  0E0C  3E30               	addlw	48
 11519  0E0D  2E26               	goto	L5
 11520  0E0E                     l3828:	
 11521                           ;doprnt.c: 1491: break;
 11522                           
 11523                           
 11524                           ;doprnt.c: 1499: {
 11525                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
 11526  0E0E  0832               	movf	sprintf@val+1,w
 11527  0E0F  00F4               	movwf	___lwdiv@dividend+1
 11528  0E10  0831               	movf	sprintf@val,w
 11529  0E11  00F3               	movwf	___lwdiv@dividend
 11530  0E12  0833               	movf	sprintf@prec,w
 11531  0E13  277D  3188         	fcall	PL6	;call to abstracted procedure
 11532  0E15  00F1               	movwf	___lwdiv@divisor
 11533  0E16  3F01               	moviw [1]fsr0
 11534  0E17  00F2               	movwf	___lwdiv@divisor+1
 11535  0E18  2660  3188         	fcall	___lwdiv
 11536  0E1A  0871               	movf	?___lwdiv,w
 11537  0E1B  00AB               	movwf	sprintf@idx
 11538  0E1C  300F               	movlw	15
 11539  0E1D  05AB               	andwf	sprintf@idx,f
 11540                           
 11541                           ;doprnt.c: 1506: c = "0123456789abcdef"[idx];
 11542  0E1E  082B               	movf	sprintf@idx,w
 11543  0E1F  3EFF               	addlw	low (STR_37| (0+32768))
 11544  0E20  0084               	movwf	4
 11545  0E21  3091               	movlw	high (STR_37| (0+32768))
 11546  0E22  1803               	skipnc
 11547  0E23  3E01               	addlw	1
 11548  0E24  0085               	movwf	5
 11549  0E25  0800               	movf	0,w	;code access
 11550  0E26                     L5:	
 11551  0E26  00B9               	movwf	sprintf@c
 11552                           
 11553                           ;doprnt.c: 1508: }
 11554                           ;doprnt.c: 1510: break;
 11555  0E27  2E30               	goto	l3838
 11556  0E28                     l3836:	
 11557  0E28  0834               	movf	sprintf@flag,w
 11558  0E29  3980               	andlw	128
 11559                           
 11560                           ; Switch size 1, requested type "space"
 11561                           ; Number of cases is 2, Range of values is 0 to 128
 11562                           ; switch strategies available:
 11563                           ; Name         Instructions Cycles
 11564                           ; simple_byte            7     4 (average)
 11565                           ; jumptable            260     6 (fixed)
 11566                           ;	Chosen strategy is simple_byte
 11567  0E2A  1903               	skipnz
 11568  0E2B  2DF6               	goto	l3826
 11569  0E2C  3A80               	xorlw	128	; case 128
 11570  0E2D  1903               	skipnz
 11571  0E2E  2E0E               	goto	l3828
 11572  0E2F  2E30               	goto	l3838
 11573  0E30                     l3838:	
 11574                           
 11575                           ;doprnt.c: 1524: ((*sp++ = (c)));
 11576  0E30  0836               	movf	sprintf@sp,w
 11577  0E31  0086               	movwf	6
 11578  0E32  0187               	clrf	7
 11579  0E33  0839               	movf	sprintf@c,w
 11580  0E34                     L6:	
 11581  0E34  0081               	movwf	1
 11582  0E35  0AB6               	incf	sprintf@sp,f
 11583  0E36                     l3842:	
 11584  0E36  03B3               	decf	sprintf@prec,f
 11585  0E37  0F33               	incfsz	sprintf@prec,w
 11586  0E38  2E28               	goto	l3836
 11587                           
 11588                           ;doprnt.c: 1525: }
 11589                           ;doprnt.c: 1528: if((flag & 0x08) && width > 0)
 11590  0E39  1DB4               	btfss	sprintf@flag,3
 11591  0E3A  2C37               	goto	l3852
 11592  0E3B  0838               	movf	sprintf@width+1,w
 11593  0E3C  3A80               	xorlw	128
 11594  0E3D  00A7               	movwf	??_sprintf
 11595  0E3E  3080               	movlw	128
 11596  0E3F  0227               	subwf	??_sprintf,w
 11597  0E40  1D03               	skipz
 11598  0E41  2E44               	goto	u3215
 11599  0E42  3001               	movlw	1
 11600  0E43  0237               	subwf	sprintf@width,w
 11601  0E44                     u3215:	
 11602  0E44  1C03               	skipc
 11603  0E45  2C37               	goto	l3852
 11604  0E46                     l3846:	
 11605                           
 11606                           ;doprnt.c: 1530: ((*sp++ = (' ')));
 11607  0E46  0020               	movlb	0	; select bank0
 11608  0E47  0836               	movf	sprintf@sp,w
 11609                           
 11610                           ;doprnt.c: 1531: while(--width);
 11611  0E48  278F  3188         	fcall	PL10	;call to abstracted procedure
 11612  0E4A  1903               	btfsc	3,2
 11613  0E4B  2C37               	goto	l3852
 11614  0E4C  2E46               	goto	l3846
 11615  0E4D                     l3854:	
 11616                           
 11617                           ;doprnt.c: 1538: *sp = 0;
 11618  0E4D  0836               	movf	sprintf@sp,w
 11619  0E4E  0086               	movwf	6
 11620  0E4F  0187               	clrf	7
 11621  0E50  0181               	clrf	1
 11622  0E51  0008               	return
 11623  0E52                     __end_of_sprintf:	
 11624  0E52                     __ptext27:	
 11625 ;; *************** function _isdigit *****************
 11626 ;; Defined at:
 11627 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\isdigit.c"
 11628 ;; Parameters:    Size  Location     Type
 11629 ;;  c               1    wreg     unsigned char 
 11630 ;; Auto vars:     Size  Location     Type
 11631 ;;  c               1    2[COMMON] unsigned char 
 11632 ;; Return value:  Size  Location     Type
 11633 ;;		None               void
 11634 ;; Registers used:
 11635 ;;		wreg, status,2, status,0
 11636 ;; Tracked objects:
 11637 ;;		On entry : 1F/0
 11638 ;;		On exit  : 1F/0
 11639 ;;		Unchanged: 1F/0
 11640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11642 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11644 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11645 ;;Total ram usage:        2 bytes
 11646 ;; Hardware stack levels used:    1
 11647 ;; Hardware stack levels required when called:    5
 11648 ;; This function calls:
 11649 ;;		Nothing
 11650 ;; This function is called by:
 11651 ;;		_sprintf
 11652 ;; This function uses a non-reentrant model
 11653 ;;
 11654                           
 11655                           
 11656                           ;psect for function _isdigit
 11657  0E52                     _isdigit:	
 11658                           
 11659                           ;incstack = 0
 11660                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 11661                           ;isdigit@c stored from wreg
 11662  0E52  00F2               	movwf	isdigit@c
 11663  0E53  303A               	movlw	58
 11664  0E54  01F1               	clrf	_isdigit$1909
 11665  0E55  0272               	subwf	isdigit@c,w
 11666  0E56  1803               	skipnc
 11667  0E57  2E5E               	goto	l2590
 11668  0E58  3030               	movlw	48
 11669  0E59  0272               	subwf	isdigit@c,w
 11670  0E5A  1C03               	skipc
 11671  0E5B  2E5E               	goto	l2590
 11672  0E5C  01F1               	clrf	_isdigit$1909
 11673  0E5D  0AF1               	incf	_isdigit$1909,f
 11674  0E5E                     l2590:	
 11675  0E5E  0C71               	rrf	_isdigit$1909,w
 11676  0E5F  0008               	return
 11677  0E60                     __end_of_isdigit:	
 11678  0E60                     __ptext30:	
 11679 ;; *************** function ___lwdiv *****************
 11680 ;; Defined at:
 11681 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwdiv.c"
 11682 ;; Parameters:    Size  Location     Type
 11683 ;;  divisor         2    1[COMMON] unsigned int 
 11684 ;;  dividend        2    3[COMMON] unsigned int 
 11685 ;; Auto vars:     Size  Location     Type
 11686 ;;  quotient        2    5[COMMON] unsigned int 
 11687 ;;  counter         1    7[COMMON] unsigned char 
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  2    1[COMMON] unsigned int 
 11690 ;; Registers used:
 11691 ;;		wreg, status,2, status,0
 11692 ;; Tracked objects:
 11693 ;;		On entry : 1F/0
 11694 ;;		On exit  : 1F/0
 11695 ;;		Unchanged: 1F/0
 11696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11697 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11698 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11700 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11701 ;;Total ram usage:        7 bytes
 11702 ;; Hardware stack levels used:    1
 11703 ;; Hardware stack levels required when called:    5
 11704 ;; This function calls:
 11705 ;;		Nothing
 11706 ;; This function is called by:
 11707 ;;		_sprintf
 11708 ;; This function uses a non-reentrant model
 11709 ;;
 11710                           
 11711                           
 11712                           ;psect for function ___lwdiv
 11713  0E60                     ___lwdiv:	
 11714                           
 11715                           ;incstack = 0
 11716                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11717  0E60  01F5               	clrf	___lwdiv@quotient
 11718  0E61  01F6               	clrf	___lwdiv@quotient+1
 11719  0E62  0871               	movf	___lwdiv@divisor,w
 11720  0E63  0472               	iorwf	___lwdiv@divisor+1,w
 11721  0E64  1903               	btfsc	3,2
 11722  0E65  2E80               	goto	l2646
 11723  0E66  01F7               	clrf	___lwdiv@counter
 11724  0E67                     L9:	
 11725  0E67  0AF7               	incf	___lwdiv@counter,f
 11726  0E68  1BF2               	btfsc	___lwdiv@divisor+1,7
 11727  0E69  2E6D               	goto	l2634
 11728  0E6A  35F1               	lslf	___lwdiv@divisor,f
 11729  0E6B  0DF2               	rlf	___lwdiv@divisor+1,f
 11730  0E6C  2E67               	goto	L9
 11731  0E6D                     l2634:	
 11732  0E6D  35F5               	lslf	___lwdiv@quotient,f
 11733  0E6E  0DF6               	rlf	___lwdiv@quotient+1,f
 11734  0E6F  0872               	movf	___lwdiv@divisor+1,w
 11735  0E70  0274               	subwf	___lwdiv@dividend+1,w
 11736  0E71  1D03               	skipz
 11737  0E72  2E75               	goto	u1535
 11738  0E73  0871               	movf	___lwdiv@divisor,w
 11739  0E74  0273               	subwf	___lwdiv@dividend,w
 11740  0E75                     u1535:	
 11741  0E75  1C03               	skipc
 11742  0E76  2E7C               	goto	l2642
 11743  0E77  0871               	movf	___lwdiv@divisor,w
 11744  0E78  02F3               	subwf	___lwdiv@dividend,f
 11745  0E79  0872               	movf	___lwdiv@divisor+1,w
 11746  0E7A  3BF4               	subwfb	___lwdiv@dividend+1,f
 11747  0E7B  1475               	bsf	___lwdiv@quotient,0
 11748  0E7C                     l2642:	
 11749  0E7C  36F2               	lsrf	___lwdiv@divisor+1,f
 11750  0E7D  0CF1               	rrf	___lwdiv@divisor,f
 11751  0E7E  0BF7               	decfsz	___lwdiv@counter,f
 11752  0E7F  2E6D               	goto	l2634
 11753  0E80                     l2646:	
 11754  0E80  0876               	movf	___lwdiv@quotient+1,w
 11755  0E81  00F2               	movwf	?___lwdiv+1
 11756  0E82  0875               	movf	___lwdiv@quotient,w
 11757  0E83  00F1               	movwf	?___lwdiv
 11758  0E84  0008               	return
 11759  0E85                     __end_of___lwdiv:	
 11760  0E85                     __ptext36:	
 11761 ;; *************** function _WiFly_SendString *****************
 11762 ;; Defined at:
 11763 ;;		line 67 in file "mcc_generated_files/WiFly.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;  sendString      2    5[COMMON] PTR const unsigned char 
 11766 ;;		 -> STR_32(21), STR_31(18), STR_28(16), Knock@knockString(10), 
 11767 ;;		 -> Validate@valString(13), Pair@pairString(9), STR_19(387), STR_17(9), 
 11768 ;;		 -> STR_15(14), STR_11(21), STR_10(18), STR_7(16), 
 11769 ;;		 -> STR_6(21), STR_5(16), STR_4(7), STR_3(9), 
 11770 ;;		 -> STR_2(7), 
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;		None
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  1    wreg      void 
 11775 ;; Registers used:
 11776 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11777 ;; Tracked objects:
 11778 ;;		On entry : 0/0
 11779 ;;		On exit  : 0/0
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11782 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11785 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11786 ;;Total ram usage:        2 bytes
 11787 ;; Hardware stack levels used:    1
 11788 ;; Hardware stack levels required when called:    7
 11789 ;; This function calls:
 11790 ;;		_Clear_RX_Buffer
 11791 ;;		_WiFly_Send
 11792 ;; This function is called by:
 11793 ;;		_WiFly_SendCMD
 11794 ;;		_WiFly_RebootCMD
 11795 ;;		_WiFly_SaveConfig
 11796 ;;		_WiFly_FactoryReset
 11797 ;;		_send_message
 11798 ;;		_connect_network
 11799 ;; This function uses a non-reentrant model
 11800 ;;
 11801                           
 11802                           
 11803                           ;psect for function _WiFly_SendString
 11804  0E85                     _WiFly_SendString:	
 11805  0E85                     l3600:	
 11806                           ;incstack = 0
 11807                           ; Regs used in _WiFly_SendString: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11808                           
 11809                           
 11810                           ;WiFly.c: 68: Clear_RX_Buffer();
 11811  0E85  22E4  3188         	fcall	_Clear_RX_Buffer
 11812                           
 11813                           ;WiFly.c: 69: WiFly_Send(sendString);
 11814  0E87  0876               	movf	WiFly_SendString@sendString+1,w
 11815  0E88  00F3               	movwf	WiFly_Send@command+1
 11816  0E89  0875               	movf	WiFly_SendString@sendString,w
 11817  0E8A  00F2               	movwf	WiFly_Send@command
 11818  0E8B  2E98               	ljmp	l2548
 11819  0E8C                     __end_of_WiFly_SendString:	
 11820  0E8C                     __ptext5:	
 11821 ;; *************** function _WiFly_SendCMD *****************
 11822 ;; Defined at:
 11823 ;;		line 133 in file "mcc_generated_files/WiFly.c"
 11824 ;; Parameters:    Size  Location     Type
 11825 ;;  cmd             2    4[BANK0 ] PTR const unsigned char 
 11826 ;;		 -> STR_31(18), STR_28(16), STR_10(18), STR_7(16), 
 11827 ;;		 -> STR_6(21), 
 11828 ;; Auto vars:     Size  Location     Type
 11829 ;;		None
 11830 ;; Return value:  Size  Location     Type
 11831 ;;                  1    wreg      void 
 11832 ;; Registers used:
 11833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11834 ;; Tracked objects:
 11835 ;;		On entry : 1F/0
 11836 ;;		On exit  : 1F/0
 11837 ;;		Unchanged: 0/0
 11838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11839 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11842 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11843 ;;Total ram usage:        2 bytes
 11844 ;; Hardware stack levels used:    1
 11845 ;; Hardware stack levels required when called:    9
 11846 ;; This function calls:
 11847 ;;		_WiFly_CheckInCMD
 11848 ;;		_WiFly_CheckRecv
 11849 ;;		_WiFly_SendString
 11850 ;; This function is called by:
 11851 ;;		_WiFly_FactoryReset
 11852 ;;		_connect_network
 11853 ;; This function uses a non-reentrant model
 11854 ;;
 11855                           
 11856                           
 11857                           ;psect for function _WiFly_SendCMD
 11858  0E8C                     _WiFly_SendCMD:	
 11859                           
 11860                           ;WiFly.c: 135: WiFly_CheckInCMD();
 11861                           
 11862                           ;incstack = 0
 11863                           ; Regs used in _WiFly_SendCMD: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11864  0E8C  23B4  3188         	fcall	_WiFly_CheckInCMD
 11865                           
 11866                           ;WiFly.c: 136: WiFly_SendString(cmd);
 11867  0E8E  0020               	movlb	0	; select bank0
 11868  0E8F  0825               	movf	WiFly_SendCMD@cmd+1,w
 11869  0E90  00F6               	movwf	WiFly_SendString@sendString+1
 11870  0E91  0824               	movf	WiFly_SendCMD@cmd,w
 11871  0E92  00F5               	movwf	WiFly_SendString@sendString
 11872  0E93  2685  3188         	fcall	_WiFly_SendString
 11873                           
 11874                           ;WiFly.c: 137: WiFly_CheckRecv(aokStr);
 11875  0E95  27DD  3188         	fcall	PL32	;call to abstracted procedure
 11876  0E97  28E1               	ljmp	l3542
 11877  0E98                     __end_of_WiFly_SendCMD:	
 11878  0E98                     __ptext37:	
 11879 ;; *************** function _WiFly_Send *****************
 11880 ;; Defined at:
 11881 ;;		line 50 in file "mcc_generated_files/WiFly.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;  command         2    2[COMMON] PTR unsigned char 
 11884 ;;		 -> STR_32(21), STR_31(18), STR_28(16), Knock@knockString(10), 
 11885 ;;		 -> Validate@valString(13), Pair@pairString(9), STR_19(387), STR_17(9), 
 11886 ;;		 -> STR_15(14), STR_11(21), STR_10(18), STR_7(16), 
 11887 ;;		 -> STR_6(21), STR_5(16), STR_4(7), STR_3(9), 
 11888 ;;		 -> WiFly_SendCMD_DoubleArg@txBuffer(40), WiFly_SendCMD_SingleArg@txBuffer(40), STR_2(7), STR_1(4), 
 11889 ;; Auto vars:     Size  Location     Type
 11890 ;;		None
 11891 ;; Return value:  Size  Location     Type
 11892 ;;                  1    wreg      void 
 11893 ;; Registers used:
 11894 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11895 ;; Tracked objects:
 11896 ;;		On entry : 0/0
 11897 ;;		On exit  : 0/0
 11898 ;;		Unchanged: 0/0
 11899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11903 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11904 ;;Total ram usage:        3 bytes
 11905 ;; Hardware stack levels used:    1
 11906 ;; Hardware stack levels required when called:    6
 11907 ;; This function calls:
 11908 ;;		_EUSART_Write
 11909 ;; This function is called by:
 11910 ;;		_WiFly_SendString
 11911 ;;		_WiFly_EnterCMDMode
 11912 ;;		_WiFly_SendCMD_SingleArg
 11913 ;;		_WiFly_SendCMD_DoubleArg
 11914 ;; This function uses a non-reentrant model
 11915 ;;
 11916                           
 11917                           
 11918                           ;psect for function _WiFly_Send
 11919  0E98                     _WiFly_Send:	
 11920  0E98                     l2548:	
 11921                           ;WiFly.c: 51: while (*command != '\0')
 11922                           
 11923                           ;incstack = 0
 11924                           ; Regs used in _WiFly_Send: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11925                           
 11926  0E98  0872               	movf	WiFly_Send@command,w
 11927  0E99  0084               	movwf	4
 11928  0E9A  0873               	movf	WiFly_Send@command+1,w
 11929  0E9B  0085               	movwf	5
 11930  0E9C  0012               	moviw fsr0++
 11931  0E9D  1903               	btfsc	3,2
 11932  0E9E  0008               	return
 11933                           
 11934                           ;WiFly.c: 52: uart[WiFly].Write(*command++);
 11935  0E9F  0872               	movf	WiFly_Send@command,w
 11936  0EA0  0084               	movwf	4
 11937  0EA1  0873               	movf	WiFly_Send@command+1,w
 11938  0EA2  0085               	movwf	5
 11939  0EA3  0800               	movf	0,w	;code access
 11940  0EA4  00F1               	movwf	EUSART_Write@txData
 11941  0EA5  30D8               	movlw	low ((_uart+18)| (0+32768))
 11942  0EA6  0084               	movwf	4
 11943  0EA7  3091               	movlw	high ((_uart+18)| (0+32768))
 11944  0EA8  0085               	movwf	5
 11945  0EA9  3F01               	moviw [1]fsr0
 11946  0EAA  008A               	movwf	10
 11947  0EAB  3F00               	moviw [0]fsr0
 11948  0EAC  000A               	callw
 11949  0EAD  3188               	pagesel	$
 11950  0EAE  0AF2               	incf	WiFly_Send@command,f
 11951  0EAF  1903               	skipnz
 11952  0EB0  0AF3               	incf	WiFly_Send@command+1,f
 11953  0EB1  2E98               	goto	l2548
 11954  0EB2                     __end_of_WiFly_Send:	
 11955  0EB2                     __ptext6:	
 11956 ;; *************** function _WiFly_SaveConfig *****************
 11957 ;; Defined at:
 11958 ;;		line 149 in file "mcc_generated_files/WiFly.c"
 11959 ;; Parameters:    Size  Location     Type
 11960 ;;		None
 11961 ;; Auto vars:     Size  Location     Type
 11962 ;;		None
 11963 ;; Return value:  Size  Location     Type
 11964 ;;                  1    wreg      void 
 11965 ;; Registers used:
 11966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11967 ;; Tracked objects:
 11968 ;;		On entry : 0/0
 11969 ;;		On exit  : 1F/1
 11970 ;;		Unchanged: 0/0
 11971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11976 ;;Total ram usage:        0 bytes
 11977 ;; Hardware stack levels used:    1
 11978 ;; Hardware stack levels required when called:   10
 11979 ;; This function calls:
 11980 ;;		_WiFly_RebootCMD
 11981 ;;		_WiFly_SendString
 11982 ;; This function is called by:
 11983 ;;		_WiFly_FactoryReset
 11984 ;;		_connect_network
 11985 ;; This function uses a non-reentrant model
 11986 ;;
 11987                           
 11988                           
 11989                           ;psect for function _WiFly_SaveConfig
 11990  0EB2                     _WiFly_SaveConfig:	
 11991  0EB2                     l3958:	
 11992                           ;incstack = 0
 11993                           ; Regs used in _WiFly_SaveConfig: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 11994                           
 11995                           
 11996                           ;WiFly.c: 151: WiFly_SendString("save\r\n");
 11997  0EB2  30DA               	movlw	low (STR_4| (0+32768))
 11998  0EB3  00F5               	movwf	WiFly_SendString@sendString
 11999  0EB4  3092               	movlw	high (STR_4| (0+32768))
 12000  0EB5  00F6               	movwf	WiFly_SendString@sendString+1
 12001  0EB6  2685  3188         	fcall	_WiFly_SendString
 12002                           
 12003                           ;WiFly.c: 152: WiFly_RebootCMD();
 12004  0EB8  289C               	ljmp	l3868
 12005  0EB9                     __end_of_WiFly_SaveConfig:	
 12006  0EB9                     __ptext31:	
 12007 ;; *************** function ___bmul *****************
 12008 ;; Defined at:
 12009 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul8.c"
 12010 ;; Parameters:    Size  Location     Type
 12011 ;;  multiplier      1    wreg     unsigned char 
 12012 ;;  multiplicand    1    1[COMMON] unsigned char 
 12013 ;; Auto vars:     Size  Location     Type
 12014 ;;  multiplier      1    3[COMMON] unsigned char 
 12015 ;;  product         1    2[COMMON] unsigned char 
 12016 ;; Return value:  Size  Location     Type
 12017 ;;                  1    wreg      unsigned char 
 12018 ;; Registers used:
 12019 ;;		wreg, status,2, status,0
 12020 ;; Tracked objects:
 12021 ;;		On entry : 1F/0
 12022 ;;		On exit  : 1F/0
 12023 ;;		Unchanged: 1F/0
 12024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12025 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12026 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12028 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12029 ;;Total ram usage:        3 bytes
 12030 ;; Hardware stack levels used:    1
 12031 ;; Hardware stack levels required when called:    5
 12032 ;; This function calls:
 12033 ;;		Nothing
 12034 ;; This function is called by:
 12035 ;;		_sprintf
 12036 ;; This function uses a non-reentrant model
 12037 ;;
 12038                           
 12039                           
 12040                           ;psect for function ___bmul
 12041  0EB9                     ___bmul:	
 12042                           
 12043                           ;incstack = 0
 12044                           ; Regs used in ___bmul: [wreg+status,2+status,0]
 12045                           ;___bmul@multiplier stored from wreg
 12046  0EB9  00F3               	movwf	___bmul@multiplier
 12047  0EBA  01F2               	clrf	___bmul@product
 12048  0EBB                     l2612:	
 12049  0EBB  0871               	movf	___bmul@multiplicand,w
 12050  0EBC  1873               	btfsc	___bmul@multiplier,0
 12051  0EBD  07F2               	addwf	___bmul@product,f
 12052  0EBE  35F1               	lslf	___bmul@multiplicand,f
 12053  0EBF  36F3               	lsrf	___bmul@multiplier,f
 12054  0EC0  0873               	movf	___bmul@multiplier,w
 12055  0EC1  1D03               	btfss	3,2
 12056  0EC2  2EBB               	goto	l2612
 12057  0EC3  0872               	movf	___bmul@product,w
 12058  0EC4  0008               	return
 12059  0EC5                     __end_of___bmul:	
 12060  0EC5                     __ptext29:	
 12061 ;; *************** function ___lwmod *****************
 12062 ;; Defined at:
 12063 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lwmod.c"
 12064 ;; Parameters:    Size  Location     Type
 12065 ;;  divisor         2    8[COMMON] unsigned int 
 12066 ;;  dividend        2   10[COMMON] unsigned int 
 12067 ;; Auto vars:     Size  Location     Type
 12068 ;;  counter         1    0[BANK0 ] unsigned char 
 12069 ;; Return value:  Size  Location     Type
 12070 ;;                  2    8[COMMON] unsigned int 
 12071 ;; Registers used:
 12072 ;;		wreg, status,2, status,0
 12073 ;; Tracked objects:
 12074 ;;		On entry : 1F/0
 12075 ;;		On exit  : 1F/0
 12076 ;;		Unchanged: 0/0
 12077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12078 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12079 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12081 ;;      Totals:         4       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12082 ;;Total ram usage:        5 bytes
 12083 ;; Hardware stack levels used:    1
 12084 ;; Hardware stack levels required when called:    5
 12085 ;; This function calls:
 12086 ;;		Nothing
 12087 ;; This function is called by:
 12088 ;;		_sprintf
 12089 ;; This function uses a non-reentrant model
 12090 ;;
 12091                           
 12092                           
 12093                           ;psect for function ___lwmod
 12094  0EC5                     ___lwmod:	
 12095                           
 12096                           ;incstack = 0
 12097                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12098  0EC5  0878               	movf	___lwmod@divisor,w
 12099  0EC6  0479               	iorwf	___lwmod@divisor+1,w
 12100  0EC7  1903               	btfsc	3,2
 12101  0EC8  2EE0               	goto	l3584
 12102  0EC9  01A0               	clrf	___lwmod@counter
 12103  0ECA                     L8:	
 12104  0ECA  0AA0               	incf	___lwmod@counter,f
 12105  0ECB  1BF9               	btfsc	___lwmod@divisor+1,7
 12106  0ECC  2ED0               	goto	l3576
 12107  0ECD  35F8               	lslf	___lwmod@divisor,f
 12108  0ECE  0DF9               	rlf	___lwmod@divisor+1,f
 12109  0ECF  2ECA               	goto	L8
 12110  0ED0                     l3576:	
 12111  0ED0  0879               	movf	___lwmod@divisor+1,w
 12112  0ED1  027B               	subwf	___lwmod@dividend+1,w
 12113  0ED2  1D03               	skipz
 12114  0ED3  2ED6               	goto	u2765
 12115  0ED4  0878               	movf	___lwmod@divisor,w
 12116  0ED5  027A               	subwf	___lwmod@dividend,w
 12117  0ED6                     u2765:	
 12118  0ED6  1C03               	skipc
 12119  0ED7  2EDC               	goto	l3580
 12120  0ED8  0878               	movf	___lwmod@divisor,w
 12121  0ED9  02FA               	subwf	___lwmod@dividend,f
 12122  0EDA  0879               	movf	___lwmod@divisor+1,w
 12123  0EDB  3BFB               	subwfb	___lwmod@dividend+1,f
 12124  0EDC                     l3580:	
 12125  0EDC  36F9               	lsrf	___lwmod@divisor+1,f
 12126  0EDD  0CF8               	rrf	___lwmod@divisor,f
 12127  0EDE  0BA0               	decfsz	___lwmod@counter,f
 12128  0EDF  2ED0               	goto	l3576
 12129  0EE0                     l3584:	
 12130  0EE0  087B               	movf	___lwmod@dividend+1,w
 12131  0EE1  00F9               	movwf	?___lwmod+1
 12132  0EE2  087A               	movf	___lwmod@dividend,w
 12133  0EE3  00F8               	movwf	?___lwmod
 12134  0EE4  0008               	return
 12135  0EE5                     __end_of___lwmod:	
 12136  0EE5                     __ptext28:	
 12137 ;; *************** function ___wmul *****************
 12138 ;; Defined at:
 12139 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
 12140 ;; Parameters:    Size  Location     Type
 12141 ;;  multiplier      2    1[COMMON] unsigned int 
 12142 ;;  multiplicand    2    3[COMMON] unsigned int 
 12143 ;; Auto vars:     Size  Location     Type
 12144 ;;  product         2    5[COMMON] unsigned int 
 12145 ;; Return value:  Size  Location     Type
 12146 ;;                  2    1[COMMON] unsigned int 
 12147 ;; Registers used:
 12148 ;;		wreg, status,2, status,0
 12149 ;; Tracked objects:
 12150 ;;		On entry : 1F/0
 12151 ;;		On exit  : 1F/0
 12152 ;;		Unchanged: 1F/0
 12153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12154 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12155 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12156 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12157 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12158 ;;Total ram usage:        6 bytes
 12159 ;; Hardware stack levels used:    1
 12160 ;; Hardware stack levels required when called:    5
 12161 ;; This function calls:
 12162 ;;		Nothing
 12163 ;; This function is called by:
 12164 ;;		_sprintf
 12165 ;; This function uses a non-reentrant model
 12166 ;;
 12167                           
 12168                           
 12169                           ;psect for function ___wmul
 12170  0EE5                     ___wmul:	
 12171                           
 12172                           ;incstack = 0
 12173                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 12174  0EE5  01F5               	clrf	___wmul@product
 12175  0EE6  01F6               	clrf	___wmul@product+1
 12176  0EE7                     l2596:	
 12177  0EE7  1C71               	btfss	___wmul@multiplier,0
 12178  0EE8  2EED               	goto	l2600
 12179  0EE9  0873               	movf	___wmul@multiplicand,w
 12180  0EEA  07F5               	addwf	___wmul@product,f
 12181  0EEB  0874               	movf	___wmul@multiplicand+1,w
 12182  0EEC  3DF6               	addwfc	___wmul@product+1,f
 12183  0EED                     l2600:	
 12184  0EED  35F3               	lslf	___wmul@multiplicand,f
 12185  0EEE  0DF4               	rlf	___wmul@multiplicand+1,f
 12186  0EEF  36F2               	lsrf	___wmul@multiplier+1,f
 12187  0EF0  0CF1               	rrf	___wmul@multiplier,f
 12188  0EF1  0871               	movf	___wmul@multiplier,w
 12189  0EF2  0472               	iorwf	___wmul@multiplier+1,w
 12190  0EF3  1D03               	btfss	3,2
 12191  0EF4  2EE7               	goto	l2596
 12192  0EF5  0876               	movf	___wmul@product+1,w
 12193  0EF6  00F2               	movwf	?___wmul+1
 12194  0EF7  0875               	movf	___wmul@product,w
 12195  0EF8  00F1               	movwf	?___wmul
 12196  0EF9  0008               	return
 12197  0EFA                     __end_of___wmul:	
 12198  0EFA                     __ptext11:	
 12199 ;; *************** function _TMR4_Initialize *****************
 12200 ;; Defined at:
 12201 ;;		line 63 in file "mcc_generated_files/tmr4.c"
 12202 ;; Parameters:    Size  Location     Type
 12203 ;;		None
 12204 ;; Auto vars:     Size  Location     Type
 12205 ;;		None
 12206 ;; Return value:  Size  Location     Type
 12207 ;;                  1    wreg      void 
 12208 ;; Registers used:
 12209 ;;		wreg, status,2, status,0, pclath, cstack
 12210 ;; Tracked objects:
 12211 ;;		On entry : 1F/10
 12212 ;;		On exit  : 1F/5
 12213 ;;		Unchanged: 0/0
 12214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12219 ;;Total ram usage:        0 bytes
 12220 ;; Hardware stack levels used:    1
 12221 ;; Hardware stack levels required when called:    6
 12222 ;; This function calls:
 12223 ;;		_TMR4_SetInterruptHandler
 12224 ;;		_TMR4_Start
 12225 ;; This function is called by:
 12226 ;;		_SYSTEM_Initialize
 12227 ;; This function uses a non-reentrant model
 12228 ;;
 12229                           
 12230                           
 12231                           ;psect for function _TMR4_Initialize
 12232  0EFA                     _TMR4_Initialize:	
 12233                           
 12234                           ;tmr4.c: 68: T4CON = 0x7F;
 12235                           
 12236                           ;incstack = 0
 12237                           ; Regs used in _TMR4_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12238  0EFA  307F               	movlw	127
 12239  0EFB  0025               	movlb	5	; select bank5
 12240  0EFC  0094               	movwf	20	;volatile
 12241                           
 12242                           ;tmr4.c: 71: T4CLKCON = 0x04;
 12243  0EFD  3004               	movlw	4
 12244  0EFE  0096               	movwf	22	;volatile
 12245                           
 12246                           ;tmr4.c: 74: T4HLT = 0x00;
 12247  0EFF  0195               	clrf	21	;volatile
 12248                           
 12249                           ;tmr4.c: 77: T4RST = 0x00;
 12250  0F00  0197               	clrf	23	;volatile
 12251                           
 12252                           ;tmr4.c: 80: T4PR = 0xE2;
 12253  0F01  30E2               	movlw	226
 12254  0F02  0093               	movwf	19	;volatile
 12255                           
 12256                           ;tmr4.c: 83: T4TMR = 0x00;
 12257  0F03  0192               	clrf	18	;volatile
 12258                           
 12259                           ;tmr4.c: 86: PIR4bits.TMR4IF = 0;
 12260  0F04  002E               	movlb	14	; select bank14
 12261  0F05  1190               	bcf	16,3	;volatile
 12262                           
 12263                           ;tmr4.c: 89: PIE4bits.TMR4IE = 1;
 12264  0F06  159A               	bsf	26,3	;volatile
 12265                           
 12266                           ;tmr4.c: 92: TMR4_SetInterruptHandler(TMR4_DefaultInterruptHandler);
 12267  0F07  3020               	movlw	low _TMR4_DefaultInterruptHandler
 12268  0F08  00F1               	movwf	TMR4_SetInterruptHandler@InterruptHandler
 12269  0F09  3001               	movlw	high _TMR4_DefaultInterruptHandler
 12270  0F0A  00F2               	movwf	TMR4_SetInterruptHandler@InterruptHandler+1
 12271  0F0B  23DB  3188         	fcall	_TMR4_SetInterruptHandler
 12272                           
 12273                           ;tmr4.c: 95: TMR4_Start();
 12274  0F0D  2F0E               	ljmp	l3588
 12275  0F0E                     __end_of_TMR4_Initialize:	
 12276  0F0E                     __ptext45:	
 12277 ;; *************** function _TMR4_Start *****************
 12278 ;; Defined at:
 12279 ;;		line 110 in file "mcc_generated_files/tmr4.c"
 12280 ;; Parameters:    Size  Location     Type
 12281 ;;		None
 12282 ;; Auto vars:     Size  Location     Type
 12283 ;;		None
 12284 ;; Return value:  Size  Location     Type
 12285 ;;                  1    wreg      void 
 12286 ;; Registers used:
 12287 ;;		None
 12288 ;; Tracked objects:
 12289 ;;		On entry : 1E/1
 12290 ;;		On exit  : 1F/5
 12291 ;;		Unchanged: 0/0
 12292 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12297 ;;Total ram usage:        0 bytes
 12298 ;; Hardware stack levels used:    1
 12299 ;; Hardware stack levels required when called:    5
 12300 ;; This function calls:
 12301 ;;		Nothing
 12302 ;; This function is called by:
 12303 ;;		_TMR4_Initialize
 12304 ;;		_TMR4_StartTimer
 12305 ;; This function uses a non-reentrant model
 12306 ;;
 12307                           
 12308                           
 12309                           ;psect for function _TMR4_Start
 12310  0F0E                     _TMR4_Start:	
 12311  0F0E                     l3588:	
 12312                           ;incstack = 0
 12313                           ; Regs used in _TMR4_Start: []
 12314                           
 12315                           
 12316                           ;tmr4.c: 113: T4CONbits.TMR4ON = 1;
 12317  0F0E  0025               	movlb	5	; select bank5
 12318  0F0F  1794               	bsf	20,7	;volatile
 12319  0F10  0008               	return
 12320  0F11                     __end_of_TMR4_Start:	
 12321  0F11                     __ptext10:	
 12322 ;; *************** function _WWDT_Initialize *****************
 12323 ;; Defined at:
 12324 ;;		line 113 in file "mcc_generated_files/mcc.c"
 12325 ;; Parameters:    Size  Location     Type
 12326 ;;		None
 12327 ;; Auto vars:     Size  Location     Type
 12328 ;;		None
 12329 ;; Return value:  Size  Location     Type
 12330 ;;                  1    wreg      void 
 12331 ;; Registers used:
 12332 ;;		wreg
 12333 ;; Tracked objects:
 12334 ;;		On entry : 1F/11
 12335 ;;		On exit  : 1F/10
 12336 ;;		Unchanged: 0/0
 12337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12342 ;;Total ram usage:        0 bytes
 12343 ;; Hardware stack levels used:    1
 12344 ;; Hardware stack levels required when called:    5
 12345 ;; This function calls:
 12346 ;;		Nothing
 12347 ;; This function is called by:
 12348 ;;		_SYSTEM_Initialize
 12349 ;; This function uses a non-reentrant model
 12350 ;;
 12351                           
 12352                           
 12353                           ;psect for function _WWDT_Initialize
 12354  0F11                     _WWDT_Initialize:	
 12355                           
 12356                           ;mcc.c: 116: WDTCON0 = 36;
 12357                           
 12358                           ;incstack = 0
 12359                           ; Regs used in _WWDT_Initialize: [wreg]
 12360  0F11  3024               	movlw	36
 12361  0F12  0030               	movlb	16	; select bank16
 12362  0F13  008C               	movwf	12	;volatile
 12363                           
 12364                           ;mcc.c: 117: WDTCON1 = 7|0;
 12365  0F14  3007               	movlw	7
 12366  0F15  008D               	movwf	13	;volatile
 12367  0F16  0008               	return
 12368  0F17                     __end_of_WWDT_Initialize:	
 12369  0F17                     __ptext1:	
 12370 ;; *************** function _eeprom_read *****************
 12371 ;; Defined at:
 12372 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\pic\eeread.c"
 12373 ;; Parameters:    Size  Location     Type
 12374 ;;  addr            1    wreg     unsigned char 
 12375 ;; Auto vars:     Size  Location     Type
 12376 ;;  addr            1    1[COMMON] unsigned char 
 12377 ;; Return value:  Size  Location     Type
 12378 ;;                  1    wreg      unsigned char 
 12379 ;; Registers used:
 12380 ;;		wreg
 12381 ;; Tracked objects:
 12382 ;;		On entry : 1F/5
 12383 ;;		On exit  : 1F/10
 12384 ;;		Unchanged: 0/0
 12385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12389 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12390 ;;Total ram usage:        1 bytes
 12391 ;; Hardware stack levels used:    1
 12392 ;; Hardware stack levels required when called:    5
 12393 ;; This function calls:
 12394 ;;		Nothing
 12395 ;; This function is called by:
 12396 ;;		_main
 12397 ;; This function uses a non-reentrant model
 12398 ;;
 12399                           
 12400                           
 12401                           ;psect for function _eeprom_read
 12402  0F17                     _eeprom_read:	
 12403                           
 12404                           ;incstack = 0
 12405                           ; Regs used in _eeprom_read: [wreg]
 12406                           ;eeprom_read@addr stored from wreg
 12407  0F17  00F1               	movwf	eeprom_read@addr
 12408  0F18  2F1A               	goto	l966
 12409  0F19                     u2501:	
 12410  0F19  0025               	movlb	5	; select bank5
 12411  0F1A                     l966:	
 12412  0F1A  0064               	clrwdt	;# 
 12413  0F1B  0030               	movlb	16	; select bank16
 12414  0F1C  189E               	btfsc	30,1	;volsfr
 12415  0F1D  2F19               	goto	u2501
 12416  0F1E  171E               	bsf	30,6	;volsfr
 12417  0F1F  0871               	movf	eeprom_read@addr,w
 12418  0F20  009A               	movwf	26	;volatile
 12419  0F21  3070               	movlw	112
 12420  0F22  009B               	movwf	27	;volatile
 12421  0F23  141E               	bsf	30,0	;volsfr
 12422  0F24  081C               	movf	28,w	;volatile
 12423  0F25  0008               	return
 12424  0F26                     __end_of_eeprom_read:	
 12425  0F26                     __ptext58:	
 12426 ;; *************** function _RELAY_RL1_Disengage *****************
 12427 ;; Defined at:
 12428 ;;		line 29 in file "mcc_generated_files/Relay_app.c"
 12429 ;; Parameters:    Size  Location     Type
 12430 ;;		None
 12431 ;; Auto vars:     Size  Location     Type
 12432 ;;		None
 12433 ;; Return value:  Size  Location     Type
 12434 ;;                  1    wreg      void 
 12435 ;; Registers used:
 12436 ;;		None
 12437 ;; Tracked objects:
 12438 ;;		On entry : 0/10
 12439 ;;		On exit  : 1F/0
 12440 ;;		Unchanged: 0/0
 12441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12442 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12445 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12446 ;;Total ram usage:        0 bytes
 12447 ;; Hardware stack levels used:    1
 12448 ;; Hardware stack levels required when called:    5
 12449 ;; This function calls:
 12450 ;;		Nothing
 12451 ;; This function is called by:
 12452 ;;		_Knock
 12453 ;; This function uses a non-reentrant model
 12454 ;;
 12455                           
 12456                           
 12457                           ;psect for function _RELAY_RL1_Disengage
 12458  0F26                     _RELAY_RL1_Disengage:	
 12459                           
 12460                           ;incstack = 0
 12461                           ; Regs used in _RELAY_RL1_Disengage: []
 12462                           ;Relay_app.c: 30: do { LATCbits.LATC2 = 0; } while(0);
 12463  0F26  0020               	movlb	0	; select bank0
 12464  0F27  1118               	bcf	24,2	;volatile
 12465  0F28  0008               	return
 12466  0F29                     __end_of_RELAY_RL1_Disengage:	
 12467  0F29                     __ptext51:	
 12468 ;; *************** function _ClearIndicators *****************
 12469 ;; Defined at:
 12470 ;;		line 71 in file "main.c"
 12471 ;; Parameters:    Size  Location     Type
 12472 ;;		None
 12473 ;; Auto vars:     Size  Location     Type
 12474 ;;		None
 12475 ;; Return value:  Size  Location     Type
 12476 ;;                  1    wreg      void 
 12477 ;; Registers used:
 12478 ;;		status,2
 12479 ;; Tracked objects:
 12480 ;;		On entry : 1F/5
 12481 ;;		On exit  : 1F/0
 12482 ;;		Unchanged: 0/0
 12483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12488 ;;Total ram usage:        0 bytes
 12489 ;; Hardware stack levels used:    1
 12490 ;; Hardware stack levels required when called:    5
 12491 ;; This function calls:
 12492 ;;		Nothing
 12493 ;; This function is called by:
 12494 ;;		_goto_mode
 12495 ;; This function uses a non-reentrant model
 12496 ;;
 12497                           
 12498                           
 12499                           ;psect for function _ClearIndicators
 12500  0F29                     _ClearIndicators:	
 12501  0F29                     l3872:	
 12502                           ;incstack = 0
 12503                           ; Regs used in _ClearIndicators: [status,2]
 12504                           
 12505                           
 12506                           ;main.c: 72: indStatus = 0;
 12507  0F29  0021               	movlb	1	; select bank1
 12508  0F2A  01CE               	clrf	_indStatus^(0+128)
 12509                           
 12510                           ;main.c: 73: LATAbits.LATA4 = 0;
 12511  0F2B  0020               	movlb	0	; select bank0
 12512  0F2C  1216               	bcf	22,4	;volatile
 12513                           
 12514                           ;main.c: 74: LATAbits.LATA5 = 0;
 12515  0F2D  1296               	bcf	22,5	;volatile
 12516                           
 12517                           ;main.c: 75: LATAbits.LATA6 = 0;
 12518  0F2E  1316               	bcf	22,6	;volatile
 12519                           
 12520                           ;main.c: 76: LATAbits.LATA7 = 0;
 12521  0F2F  1396               	bcf	22,7	;volatile
 12522  0F30  0008               	return
 12523  0F31                     __end_of_ClearIndicators:	
 12524  0F31                     __ptext49:	
 12525 ;; *************** function _TMR2_Start *****************
 12526 ;; Defined at:
 12527 ;;		line 110 in file "mcc_generated_files/tmr2.c"
 12528 ;; Parameters:    Size  Location     Type
 12529 ;;		None
 12530 ;; Auto vars:     Size  Location     Type
 12531 ;;		None
 12532 ;; Return value:  Size  Location     Type
 12533 ;;                  1    wreg      void 
 12534 ;; Registers used:
 12535 ;;		None
 12536 ;; Tracked objects:
 12537 ;;		On entry : 0/1
 12538 ;;		On exit  : 1F/5
 12539 ;;		Unchanged: 0/0
 12540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12542 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12544 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12545 ;;Total ram usage:        0 bytes
 12546 ;; Hardware stack levels used:    1
 12547 ;; Hardware stack levels required when called:    5
 12548 ;; This function calls:
 12549 ;;		Nothing
 12550 ;; This function is called by:
 12551 ;;		_TMR2_Initialize
 12552 ;;		_TMR2_StartTimer
 12553 ;; This function uses a non-reentrant model
 12554 ;;
 12555                           
 12556                           
 12557                           ;psect for function _TMR2_Start
 12558  0F31                     _TMR2_Start:	
 12559  0F31                     l3592:	
 12560                           ;incstack = 0
 12561                           ; Regs used in _TMR2_Start: []
 12562                           
 12563                           
 12564                           ;tmr2.c: 113: T2CONbits.TMR2ON = 1;
 12565  0F31  0025               	movlb	5	; select bank5
 12566  0F32  178E               	bsf	14,7	;volatile
 12567  0F33  0008               	return
 12568  0F34                     __end_of_TMR2_Start:	
 12569  0F34                     __ptext47:	
 12570 ;; *************** function _TMR2_Stop *****************
 12571 ;; Defined at:
 12572 ;;		line 121 in file "mcc_generated_files/tmr2.c"
 12573 ;; Parameters:    Size  Location     Type
 12574 ;;		None
 12575 ;; Auto vars:     Size  Location     Type
 12576 ;;		None
 12577 ;; Return value:  Size  Location     Type
 12578 ;;                  1    wreg      void 
 12579 ;; Registers used:
 12580 ;;		None
 12581 ;; Tracked objects:
 12582 ;;		On entry : 0/1
 12583 ;;		On exit  : 1F/5
 12584 ;;		Unchanged: 0/0
 12585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12586 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12587 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12589 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12590 ;;Total ram usage:        0 bytes
 12591 ;; Hardware stack levels used:    1
 12592 ;; Hardware stack levels required when called:    5
 12593 ;; This function calls:
 12594 ;;		Nothing
 12595 ;; This function is called by:
 12596 ;;		_TMR2_StopTimer
 12597 ;; This function uses a non-reentrant model
 12598 ;;
 12599                           
 12600                           
 12601                           ;psect for function _TMR2_Stop
 12602  0F34                     _TMR2_Stop:	
 12603  0F34                     l3594:	
 12604                           ;incstack = 0
 12605                           ; Regs used in _TMR2_Stop: []
 12606                           
 12607                           
 12608                           ;tmr2.c: 124: T2CONbits.TMR2ON = 0;
 12609  0F34  0025               	movlb	5	; select bank5
 12610  0F35  138E               	bcf	14,7	;volatile
 12611  0F36  0008               	return
 12612  0F37                     __end_of_TMR2_Stop:	
 12613  0F37                     __ptext43:	
 12614 ;; *************** function _TMR4_Stop *****************
 12615 ;; Defined at:
 12616 ;;		line 121 in file "mcc_generated_files/tmr4.c"
 12617 ;; Parameters:    Size  Location     Type
 12618 ;;		None
 12619 ;; Auto vars:     Size  Location     Type
 12620 ;;		None
 12621 ;; Return value:  Size  Location     Type
 12622 ;;                  1    wreg      void 
 12623 ;; Registers used:
 12624 ;;		None
 12625 ;; Tracked objects:
 12626 ;;		On entry : 1A/5
 12627 ;;		On exit  : 1F/5
 12628 ;;		Unchanged: 0/0
 12629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12634 ;;Total ram usage:        0 bytes
 12635 ;; Hardware stack levels used:    1
 12636 ;; Hardware stack levels required when called:    5
 12637 ;; This function calls:
 12638 ;;		Nothing
 12639 ;; This function is called by:
 12640 ;;		_TMR4_StopTimer
 12641 ;; This function uses a non-reentrant model
 12642 ;;
 12643                           
 12644                           
 12645                           ;psect for function _TMR4_Stop
 12646  0F37                     _TMR4_Stop:	
 12647  0F37                     l3590:	
 12648                           ;incstack = 0
 12649                           ; Regs used in _TMR4_Stop: []
 12650                           
 12651                           
 12652                           ;tmr4.c: 124: T4CONbits.TMR4ON = 0;
 12653  0F37  0025               	movlb	5	; select bank5
 12654  0F38  1394               	bcf	20,7	;volatile
 12655  0F39  0008               	return
 12656  0F3A                     __end_of_TMR4_Stop:	
 12657  0F3A                     __ptext17:	
 12658 ;; *************** function _EUSART_Initialize *****************
 12659 ;; Defined at:
 12660 ;;		line 75 in file "mcc_generated_files/eusart.c"
 12661 ;; Parameters:    Size  Location     Type
 12662 ;;		None
 12663 ;; Auto vars:     Size  Location     Type
 12664 ;;		None
 12665 ;; Return value:  Size  Location     Type
 12666 ;;                  1    wreg      void 
 12667 ;; Registers used:
 12668 ;;		wreg, status,2, status,0, pclath, cstack
 12669 ;; Tracked objects:
 12670 ;;		On entry : 1F/5
 12671 ;;		On exit  : 1F/E
 12672 ;;		Unchanged: 0/0
 12673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12674 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12675 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12676 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12677 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12678 ;;Total ram usage:        0 bytes
 12679 ;; Hardware stack levels used:    1
 12680 ;; Hardware stack levels required when called:    6
 12681 ;; This function calls:
 12682 ;;		_EUSART_SetRxInterruptHandler
 12683 ;;		_EUSART_SetTxInterruptHandler
 12684 ;; This function is called by:
 12685 ;;		_SYSTEM_Initialize
 12686 ;; This function uses a non-reentrant model
 12687 ;;
 12688                           
 12689                           
 12690                           ;psect for function _EUSART_Initialize
 12691  0F3A                     _EUSART_Initialize:	
 12692  0F3A                     l3126:	
 12693                           ;incstack = 0
 12694                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
 12695                           
 12696                           
 12697                           ;eusart.c: 78: PIE3bits.RCIE = 0;
 12698  0F3A  002E               	movlb	14	; select bank14
 12699  0F3B  1299               	bcf	25,5	;volatile
 12700                           
 12701                           ;eusart.c: 79: PIE3bits.TXIE = 0;
 12702  0F3C  1219               	bcf	25,4	;volatile
 12703                           
 12704                           ;eusart.c: 81: EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR);
 12705  0F3D  30A0               	movlw	low _EUSART_Transmit_ISR
 12706  0F3E  00F1               	movwf	EUSART_SetTxInterruptHandler@handler
 12707  0F3F  3000               	movlw	high _EUSART_Transmit_ISR
 12708  0F40  00F2               	movwf	EUSART_SetTxInterruptHandler@handler+1
 12709  0F41  27E2  3188         	fcall	_EUSART_SetTxInterruptHandler
 12710                           
 12711                           ;eusart.c: 82: EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 12712  0F43  30CF               	movlw	low _EUSART_Receive_ISR
 12713  0F44  00F1               	movwf	EUSART_SetRxInterruptHandler@handler
 12714  0F45  3000               	movlw	high _EUSART_Receive_ISR
 12715  0F46  00F2               	movwf	EUSART_SetRxInterruptHandler@handler+1
 12716  0F47  27FB               	fcall	_EUSART_SetRxInterruptHandler
 12717                           
 12718                           ;eusart.c: 87: BAUD1CON = 0x08;
 12719  0F48  3008               	movlw	8
 12720  0F49  0022               	movlb	2	; select bank2
 12721  0F4A  009F               	movwf	31	;volatile
 12722                           
 12723                           ;eusart.c: 90: RC1STA = 0x90;
 12724  0F4B  3090               	movlw	144
 12725  0F4C  009D               	movwf	29	;volatile
 12726                           
 12727                           ;eusart.c: 93: TX1STA = 0x24;
 12728  0F4D  3024               	movlw	36
 12729  0F4E  009E               	movwf	30	;volatile
 12730                           
 12731                           ;eusart.c: 96: SP1BRGL = 0x40;
 12732  0F4F  3040               	movlw	64
 12733  0F50  009B               	movwf	27	;volatile
 12734                           
 12735                           ;eusart.c: 99: SP1BRGH = 0x03;
 12736  0F51  3003               	movlw	3
 12737  0F52  009C               	movwf	28	;volatile
 12738                           
 12739                           ;eusart.c: 103: eusartTxHead = 0;
 12740  0F53  01FC               	clrf	_eusartTxHead	;volatile
 12741                           
 12742                           ;eusart.c: 104: eusartTxTail = 0;
 12743  0F54  0020               	movlb	0	; select bank0
 12744  0F55  01EF               	clrf	_eusartTxTail	;volatile
 12745                           
 12746                           ;eusart.c: 105: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
 12747  0F56  3008               	movlw	8
 12748  0F57  0021               	movlb	1	; select bank1
 12749  0F58  00EB               	movwf	_eusartTxBufferRemaining^(0+128)	;volatile
 12750                           
 12751                           ;eusart.c: 107: eusartRxHead = 0;
 12752  0F59  0020               	movlb	0	; select bank0
 12753  0F5A  01EE               	clrf	_eusartRxHead	;volatile
 12754                           
 12755                           ;eusart.c: 108: eusartRxTail = 0;
 12756  0F5B  0021               	movlb	1	; select bank1
 12757  0F5C  01D2               	clrf	_eusartRxTail^(0+128)	;volatile
 12758                           
 12759                           ;eusart.c: 109: eusartRxCount = 0;
 12760  0F5D  01D1               	clrf	_eusartRxCount^(0+128)	;volatile
 12761                           
 12762                           ;eusart.c: 112: PIE3bits.RCIE = 1;
 12763  0F5E  002E               	movlb	14	; select bank14
 12764  0F5F  1699               	bsf	25,5	;volatile
 12765  0F60  0008               	return
 12766  0F61                     __end_of_EUSART_Initialize:	
 12767  0F61                     PL2:	
 12768  0F61  00A7               	movwf	??_sprintf
 12769  0F62  01A8               	clrf	??_sprintf+1
 12770  0F63  1BA7               	btfsc	??_sprintf,7
 12771  0F64  03A8               	decf	??_sprintf+1,f
 12772  0F65  0828               	movf	??_sprintf+1,w
 12773  0F66  3A80               	xorlw	128
 12774  0F67  00A9               	movwf	??_sprintf+2
 12775  0F68  0838               	movf	sprintf@width+1,w
 12776  0F69  3A80               	xorlw	128
 12777  0F6A  0229               	subwf	??_sprintf+2,w
 12778  0F6B  1D03               	skipz
 12779  0F6C  0008               	return
 12780  0F6D  0837               	movf	sprintf@width,w
 12781  0F6E  0227               	subwf	??_sprintf,w
 12782  0F6F  0008               	return
 12783  0F70                     __end_ofPL2:	
 12784  0F70                     PL4:	
 12785  0F70  0822               	movf	sprintf@f+1,w
 12786  0F71  00A8               	movwf	??_sprintf+1
 12787  0F72  0821               	movf	sprintf@f,w
 12788  0F73  00A7               	movwf	??_sprintf
 12789  0F74  0AA1               	incf	sprintf@f,f
 12790  0F75  1903               	skipnz
 12791  0F76  0AA2               	incf	sprintf@f+1,f
 12792  0F77  0084               	movwf	4
 12793  0F78  0828               	movf	??_sprintf+1,w
 12794  0F79  0085               	movwf	5
 12795  0F7A  0800               	movf	0,w	;code access
 12796  0F7B  00B9               	movwf	sprintf@c
 12797  0F7C  0008               	return
 12798  0F7D                     __end_ofPL4:	
 12799  0F7D                     PL6:	
 12800  0F7D  00A7               	movwf	??_sprintf
 12801  0F7E  30AE               	movlw	low (_hexpowers| (0+32768))
 12802  0F7F  01A8               	clrf	??_sprintf+1
 12803  0F80  35A7               	lslf	??_sprintf,f
 12804  0F81  0DA8               	rlf	??_sprintf+1,f
 12805  0F82  0727               	addwf	??_sprintf,w
 12806  0F83  0084               	movwf	4
 12807  0F84  3092               	movlw	high (_hexpowers| (0+32768))
 12808  0F85  3D28               	addwfc	??_sprintf+1,w
 12809  0F86  0085               	movwf	5
 12810  0F87  3F00               	moviw [0]fsr0
 12811  0F88  0008               	return
 12812  0F89                     __end_ofPL6:	
 12813  0F89                     PL8:	
 12814  0F89  0821               	movf	sprintf@f,w
 12815  0F8A  0084               	movwf	4
 12816  0F8B  0822               	movf	sprintf@f+1,w
 12817  0F8C  0085               	movwf	5
 12818  0F8D  0800               	movf	0,w	;code access
 12819  0F8E  0008               	return
 12820  0F8F                     __end_ofPL8:	
 12821  0F8F                     PL10:	
 12822  0F8F  0086               	movwf	6
 12823  0F90  3020               	movlw	32
 12824  0F91  0187               	clrf	7
 12825  0F92  0081               	movwf	1
 12826  0F93  30FF               	movlw	-1
 12827  0F94  0AB6               	incf	sprintf@sp,f
 12828  0F95  07B7               	addwf	sprintf@width,f
 12829  0F96  1C03               	skipc
 12830  0F97  03B8               	decf	sprintf@width+1,f
 12831  0F98  0837               	movf	sprintf@width,w
 12832  0F99  0438               	iorwf	sprintf@width+1,w
 12833  0F9A  0008               	return
 12834  0F9B                     __end_ofPL10:	
 12835  0F9B                     PL12:	
 12836  0F9B  00A7               	movwf	??_sprintf
 12837  0F9C  307E               	movlw	low (_dpowers| (0+32768))
 12838  0F9D  01A8               	clrf	??_sprintf+1
 12839  0F9E  35A7               	lslf	??_sprintf,f
 12840  0F9F  0DA8               	rlf	??_sprintf+1,f
 12841  0FA0  0727               	addwf	??_sprintf,w
 12842  0FA1  0084               	movwf	4
 12843  0FA2  3092               	movlw	high (_dpowers| (0+32768))
 12844  0FA3  3D28               	addwfc	??_sprintf+1,w
 12845  0FA4  0085               	movwf	5
 12846  0FA5  3F00               	moviw [0]fsr0
 12847  0FA6  0008               	return
 12848  0FA7                     __end_ofPL12:	
 12849  0FA7                     PL14:	
 12850  0FA7  082E               	movf	sprintf@ap,w
 12851  0FA8  0086               	movwf	6
 12852  0FA9  0187               	clrf	7
 12853  0FAA  3F40               	moviw [0]fsr1
 12854  0FAB  00B1               	movwf	sprintf@val
 12855  0FAC  3F41               	moviw [1]fsr1
 12856  0FAD  00B2               	movwf	sprintf@val+1
 12857  0FAE  0AAE               	incf	sprintf@ap,f
 12858  0FAF  0AAE               	incf	sprintf@ap,f
 12859  0FB0  0008               	return
 12860  0FB1                     __end_ofPL14:	
 12861  0FB1                     PL16:	
 12862  0FB1  0836               	movf	sprintf@sp,w
 12863  0FB2  0086               	movwf	6
 12864  0FB3  3020               	movlw	32
 12865  0FB4  0187               	clrf	7
 12866  0FB5  0081               	movwf	1
 12867  0FB6  0AB6               	incf	sprintf@sp,f
 12868  0FB7  0008               	return
 12869  0FB8                     __end_ofPL16:	
 12870  0FB8                     PL18:	
 12871  0FB8  00A7               	movwf	??_sprintf
 12872  0FB9  01A8               	clrf	??_sprintf+1
 12873  0FBA  1BA7               	btfsc	??_sprintf,7
 12874  0FBB  03A8               	decf	??_sprintf+1,f
 12875  0FBC  02B7               	subwf	sprintf@width,f
 12876  0FBD  0828               	movf	??_sprintf+1,w
 12877  0FBE  3BB8               	subwfb	sprintf@width+1,f
 12878  0FBF  0008               	return
 12879  0FC0                     __end_ofPL18:	
 12880  0FC0                     PL20:	
 12881  0FC0  00A2               	movwf	sprintf@f+1
 12882  0FC1  0021               	movlb	1	; select bank1
 12883  0FC2  0869               	movf	_UID^(0+128),w
 12884  0FC3  0020               	movlb	0	; select bank0
 12885  0FC4  00A3               	movwf	?_sprintf+2
 12886  0FC5  0008               	return
 12887  0FC6                     __end_ofPL20:	
 12888  0FC6                     PL22:	
 12889  0FC6  30CA               	movlw	low ((_uart+4)| (0+32768))
 12890  0FC7  0084               	movwf	4
 12891  0FC8  3091               	movlw	high ((_uart+4)| (0+32768))
 12892  0FC9  0085               	movwf	5
 12893  0FCA  3F01               	moviw [1]fsr0
 12894  0FCB  0008               	return
 12895  0FCC                     __end_ofPL22:	
 12896  0FCC                     PL26:	
 12897  0FCC  00FA               	movwf	??_CheckResponse
 12898  0FCD  0086               	movwf	6
 12899  0FCE  0187               	clrf	7
 12900  0FCF  0801               	movf	1,w
 12901  0FD0  0628               	xorwf	CheckResponse@input,w
 12902  0FD1  0008               	return
 12903  0FD2                     __end_ofPL26:	
 12904  0FD2                     PL28:	
 12905  0FD2  3055               	movlw	85
 12906  0FD3  003D               	movlb	29	; select bank29
 12907  0FD4  008F               	movwf	15	;volatile
 12908  0FD5  30AA               	movlw	170
 12909  0FD6  008F               	movwf	15	;volatile
 12910  0FD7  0008               	return
 12911  0FD8                     __end_ofPL28:	
 12912  0FD8                     PL30:	
 12913  0FD8  30E8               	movlw	low (_hardRebootStr| (0+32768))
 12914  0FD9  00F6               	movwf	WiFly_CheckRecv@chkString
 12915  0FDA  3092               	movlw	high (_hardRebootStr| (0+32768))
 12916  0FDB  00F7               	movwf	WiFly_CheckRecv@chkString+1
 12917  0FDC  0008               	return
 12918  0FDD                     __end_ofPL30:	
 12919  0FDD                     PL32:	
 12920  0FDD  3008               	movlw	low (_aokStr| (0+32768))
 12921  0FDE  00F6               	movwf	WiFly_CheckRecv@chkString
 12922  0FDF  3093               	movlw	high (_aokStr| (0+32768))
 12923  0FE0  00F7               	movwf	WiFly_CheckRecv@chkString+1
 12924  0FE1  0008               	return
 12925  0FE2                     __end_ofPL32:	
 12926  0FE2                     __ptext18:	
 12927 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 12928 ;; Defined at:
 12929 ;;		line 212 in file "mcc_generated_files/eusart.c"
 12930 ;; Parameters:    Size  Location     Type
 12931 ;;  handler         2    1[COMMON] PTR void 
 12932 ;;		 -> EUSART_Transmit_ISR(1), 
 12933 ;; Auto vars:     Size  Location     Type
 12934 ;;		None
 12935 ;; Return value:  Size  Location     Type
 12936 ;;                  1    wreg      void 
 12937 ;; Registers used:
 12938 ;;		wreg
 12939 ;; Tracked objects:
 12940 ;;		On entry : 1F/E
 12941 ;;		On exit  : 1F/1
 12942 ;;		Unchanged: 0/0
 12943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12944 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12947 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12948 ;;Total ram usage:        2 bytes
 12949 ;; Hardware stack levels used:    1
 12950 ;; Hardware stack levels required when called:    5
 12951 ;; This function calls:
 12952 ;;		Nothing
 12953 ;; This function is called by:
 12954 ;;		_EUSART_Initialize
 12955 ;; This function uses a non-reentrant model
 12956 ;;
 12957                           
 12958                           
 12959                           ;psect for function _EUSART_SetTxInterruptHandler
 12960  0FE2                     _EUSART_SetTxInterruptHandler:	
 12961                           
 12962                           ;eusart.c: 213: EUSART_TxDefaultInterruptHandler = handler;
 12963                           
 12964                           ;incstack = 0
 12965                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
 12966  0FE2  0872               	movf	EUSART_SetTxInterruptHandler@handler+1,w
 12967  0FE3  0021               	movlb	1	; select bank1
 12968  0FE4  00E6               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
 12969  0FE5  0871               	movf	EUSART_SetTxInterruptHandler@handler,w
 12970  0FE6  00E5               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
 12971  0FE7  0008               	return
 12972  0FE8                     __end_of_EUSART_SetTxInterruptHandler:	
 12973  0FE8                     __ptext13:	
 12974 ;; *************** function _TMR2_Initialize *****************
 12975 ;; Defined at:
 12976 ;;		line 63 in file "mcc_generated_files/tmr2.c"
 12977 ;; Parameters:    Size  Location     Type
 12978 ;;		None
 12979 ;; Auto vars:     Size  Location     Type
 12980 ;;		None
 12981 ;; Return value:  Size  Location     Type
 12982 ;;                  1    wreg      void 
 12983 ;; Registers used:
 12984 ;;		wreg, status,2, status,0, pclath, cstack
 12985 ;; Tracked objects:
 12986 ;;		On entry : 1F/5
 12987 ;;		On exit  : 1F/5
 12988 ;;		Unchanged: 0/0
 12989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12994 ;;Total ram usage:        0 bytes
 12995 ;; Hardware stack levels used:    1
 12996 ;; Hardware stack levels required when called:    6
 12997 ;; This function calls:
 12998 ;;		_TMR2_SetInterruptHandler
 12999 ;;		_TMR2_Start
 13000 ;; This function is called by:
 13001 ;;		_SYSTEM_Initialize
 13002 ;; This function uses a non-reentrant model
 13003 ;;
 13004                           
 13005                           
 13006                           ;psect for function _TMR2_Initialize
 13007  0FE8                     _TMR2_Initialize:	
 13008                           
 13009                           ;tmr2.c: 68: T2CON = 0x3F;
 13010                           
 13011                           ;incstack = 0
 13012                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
 13013  0FE8  303F               	movlw	63
 13014  0FE9  008E               	movwf	14	;volatile
 13015                           
 13016                           ;tmr2.c: 71: T2CLKCON = 0x04;
 13017  0FEA  3004               	movlw	4
 13018  0FEB  0090               	movwf	16	;volatile
 13019                           
 13020                           ;tmr2.c: 74: T2HLT = 0x00;
 13021  0FEC  018F               	clrf	15	;volatile
 13022                           
 13023                           ;tmr2.c: 77: T2RST = 0x00;
 13024  0FED  0191               	clrf	17	;volatile
 13025                           
 13026                           ;tmr2.c: 80: T2PR = 0x01;
 13027  0FEE  3001               	movlw	1
 13028  0FEF  008D               	movwf	13	;volatile
 13029                           
 13030                           ;tmr2.c: 83: T2TMR = 0x00;
 13031  0FF0  018C               	clrf	12	;volatile
 13032                           
 13033                           ;tmr2.c: 86: PIR4bits.TMR2IF = 0;
 13034  0FF1  002E               	movlb	14	; select bank14
 13035  0FF2  1090               	bcf	16,1	;volatile
 13036                           
 13037                           ;tmr2.c: 89: PIE4bits.TMR2IE = 1;
 13038  0FF3  149A               	bsf	26,1	;volatile
 13039                           
 13040                           ;tmr2.c: 92: TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandler);
 13041  0FF4  3021               	movlw	low _TMR2_DefaultInterruptHandler
 13042  0FF5  00F1               	movwf	TMR2_SetInterruptHandler@InterruptHandler
 13043  0FF6  3001               	movlw	high _TMR2_DefaultInterruptHandler
 13044  0FF7  00F2               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
 13045  0FF8  23D5  3188         	fcall	_TMR2_SetInterruptHandler
 13046                           
 13047                           ;tmr2.c: 95: TMR2_Start();
 13048  0FFA  2F31               	ljmp	l3592
 13049  0FFB                     __end_of_TMR2_Initialize:	
 13050  0FFB                     __ptext19:	
 13051 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 13052 ;; Defined at:
 13053 ;;		line 216 in file "mcc_generated_files/eusart.c"
 13054 ;; Parameters:    Size  Location     Type
 13055 ;;  handler         2    1[COMMON] PTR void 
 13056 ;;		 -> EUSART_Receive_ISR(1), 
 13057 ;; Auto vars:     Size  Location     Type
 13058 ;;		None
 13059 ;; Return value:  Size  Location     Type
 13060 ;;                  1    wreg      void 
 13061 ;; Registers used:
 13062 ;;		wreg
 13063 ;; Tracked objects:
 13064 ;;		On entry : 1F/1
 13065 ;;		On exit  : 1F/1
 13066 ;;		Unchanged: 0/0
 13067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13071 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13072 ;;Total ram usage:        2 bytes
 13073 ;; Hardware stack levels used:    1
 13074 ;; Hardware stack levels required when called:    5
 13075 ;; This function calls:
 13076 ;;		Nothing
 13077 ;; This function is called by:
 13078 ;;		_EUSART_Initialize
 13079 ;; This function uses a non-reentrant model
 13080 ;;
 13081                           
 13082                           
 13083                           ;psect for function _EUSART_SetRxInterruptHandler
 13084  0FFB                     _EUSART_SetRxInterruptHandler:	
 13085                           
 13086                           ;eusart.c: 217: EUSART_RxDefaultInterruptHandler = handler;
 13087                           
 13088                           ;incstack = 0
 13089                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
 13090  0FFB  0872               	movf	EUSART_SetRxInterruptHandler@handler+1,w
 13091  0FFC  00E4               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
 13092  0FFD  0871               	movf	EUSART_SetRxInterruptHandler@handler,w
 13093  0FFE  00E3               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
 13094  0FFF  0008               	return
 13095  1000                     __end_of_EUSART_SetRxInterruptHandler:	
 13096                           
 13097                           	psect	bssCOMMON
 13098  007C                     __pbssCOMMON:	
 13099  007C                     _eusartTxHead:	
 13100  007C                     	ds	1
 13101                           
 13102                           	psect	bssBANK0
 13103  006E                     __pbssBANK0:	
 13104  006E                     _eusartRxHead:	
 13105  006E                     	ds	1
 13106  006F                     _eusartTxTail:	
 13107  006F                     	ds	1
 13108                           
 13109                           	psect	bssBANK1
 13110  00BE                     __pbssBANK1:	
 13111  00BE                     _eusartRxBuffer:	
 13112  00BE                     	ds	8
 13113  00C6                     _eusartTxBuffer:	
 13114  00C6                     	ds	8
 13115  00CE                     _indStatus:	
 13116  00CE                     	ds	1
 13117  00CF                     _pingTime:	
 13118  00CF                     	ds	1
 13119  00D0                     _mode:	
 13120  00D0                     	ds	1
 13121  00D1                     _eusartRxCount:	
 13122  00D1                     	ds	1
 13123  00D2                     _eusartRxTail:	
 13124  00D2                     	ds	1
 13125                           
 13126                           	psect	dataBANK1
 13127  00A0                     __pdataBANK1:	
 13128  00A0                     Knock@F15440:	
 13129  00A0                     	ds	10
 13130  00AA                     Pair@F15432:	
 13131  00AA                     	ds	9
 13132  00B3                     _failedStr:	
 13133  00B3                     	ds	7
 13134  00BA                     _errStr:	
 13135  00BA                     	ds	4
 13136                           
 13137                           	psect	dataBANK2
 13138  0120                     __pdataBANK2:	
 13139  0120                     Validate@F15436:	
 13140  0120                     	ds	13
 13141                           
 13142                           	psect	inittext
 13143  0114                     init_ram:	
 13144  0114  00FE               	movwf	126
 13145  0115                     initloop:	
 13146  0115  0012               	moviw fsr0++
 13147  0116  001E               	movwi fsr1++
 13148  0117  0BFE               	decfsz	126,f
 13149  0118  2915               	goto	initloop
 13150  0119  3400               	retlw	0
 13151                           
 13152                           	psect	clrtext
 13153  011A                     clear_ram0:	
 13154                           ;	Called with FSR0 containing the base address, and
 13155                           ;	WREG with the size to clear
 13156                           
 13157  011A  0064               	clrwdt	;clear the watchdog before getting into this loop
 13158  011B                     clrloop0:	
 13159  011B  0180               	clrf	0	;clear RAM location pointed to by FSR
 13160  011C  3101               	addfsr 0,1
 13161  011D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
 13162  011E  291B               	goto	clrloop0	;have we reached the end yet?
 13163  011F  3400               	retlw	0	;all done for this memory range, return
 13164                           
 13165                           	psect	cstackBANK1
 13166  00D3                     __pcstackBANK1:	
 13167  00D3                     ??_Knock:	
 13168  00D3                     Pair@pairString:	
 13169                           ; 1 bytes @ 0x0
 13170                           
 13171  00D3                     Validate@valString:	
 13172                           ; 9 bytes @ 0x0
 13173                           
 13174                           
 13175                           ; 13 bytes @ 0x0
 13176  00D3                     	ds	2
 13177  00D5                     Knock@knockString:	
 13178                           
 13179                           ; 10 bytes @ 0x2
 13180  00D5                     	ds	7
 13181  00DC                     Pair@returnVal:	
 13182                           
 13183                           ; 1 bytes @ 0x9
 13184  00DC                     	ds	3
 13185  00DF                     Knock@returnVal:	
 13186                           
 13187                           ; 1 bytes @ 0xC
 13188  00DF                     	ds	1
 13189  00E0                     Validate@returnVal:	
 13190                           
 13191                           ; 1 bytes @ 0xD
 13192  00E0                     	ds	1
 13193                           
 13194                           	psect	cstackCOMMON
 13195  0070                     __pcstackCOMMON:	
 13196  0070                     ?_isdigit:	
 13197  0070                     ?_TMR4_DefaultInterruptHandler:	
 13198                           ; 1 bit 
 13199                           
 13200  0070                     ??_TMR4_DefaultInterruptHandler:	
 13201                           ; 1 bytes @ 0x0
 13202                           
 13203  0070                     ?_TMR4_Start:	
 13204                           ; 1 bytes @ 0x0
 13205                           
 13206  0070                     ?_EUSART_Transmit_ISR:	
 13207                           ; 1 bytes @ 0x0
 13208                           
 13209  0070                     ??_EUSART_Transmit_ISR:	
 13210                           ; 1 bytes @ 0x0
 13211                           
 13212  0070                     ?_EUSART_Receive_ISR:	
 13213                           ; 1 bytes @ 0x0
 13214                           
 13215  0070                     ??_EUSART_Receive_ISR:	
 13216                           ; 1 bytes @ 0x0
 13217                           
 13218  0070                     ?_PIN_MANAGER_Initialize:	
 13219                           ; 1 bytes @ 0x0
 13220                           
 13221  0070                     ?_OSCILLATOR_Initialize:	
 13222                           ; 1 bytes @ 0x0
 13223                           
 13224  0070                     ?_WWDT_Initialize:	
 13225                           ; 1 bytes @ 0x0
 13226                           
 13227  0070                     ?_TMR2_Initialize:	
 13228                           ; 1 bytes @ 0x0
 13229                           
 13230  0070                     ?_TMR2_DefaultInterruptHandler:	
 13231                           ; 1 bytes @ 0x0
 13232                           
 13233  0070                     ??_TMR2_DefaultInterruptHandler:	
 13234                           ; 1 bytes @ 0x0
 13235                           
 13236  0070                     ?_TMR2_Start:	
 13237                           ; 1 bytes @ 0x0
 13238                           
 13239  0070                     ?_WiFly_EnterCMDMode:	
 13240                           ; 1 bytes @ 0x0
 13241                           
 13242  0070                     ?_eeprom_read:	
 13243                           ; 1 bytes @ 0x0
 13244                           
 13245  0070                     ?_TMR4_Initialize:	
 13246                           ; 1 bytes @ 0x0
 13247                           
 13248  0070                     ?_TMR4_StartTimer:	
 13249                           ; 1 bytes @ 0x0
 13250                           
 13251  0070                     ?_TMR4_Stop:	
 13252                           ; 1 bytes @ 0x0
 13253                           
 13254  0070                     ?_TMR4_StopTimer:	
 13255                           ; 1 bytes @ 0x0
 13256                           
 13257  0070                     ?_TMR4_ISR:	
 13258                           ; 1 bytes @ 0x0
 13259                           
 13260  0070                     ??_TMR4_ISR:	
 13261                           ; 1 bytes @ 0x0
 13262                           
 13263  0070                     ?_EUSART_Initialize:	
 13264                           ; 1 bytes @ 0x0
 13265                           
 13266  0070                     ?_EUSART_is_rx_ready:	
 13267                           ; 1 bytes @ 0x0
 13268                           
 13269  0070                     ?_EUSART_Read:	
 13270                           ; 1 bytes @ 0x0
 13271                           
 13272  0070                     ?_SYSTEM_Initialize:	
 13273                           ; 1 bytes @ 0x0
 13274                           
 13275  0070                     ?_RELAY_RL1_Engage:	
 13276                           ; 1 bytes @ 0x0
 13277                           
 13278  0070                     ?_RELAY_RL1_Disengage:	
 13279                           ; 1 bytes @ 0x0
 13280                           
 13281  0070                     ?_TMR2_StartTimer:	
 13282                           ; 1 bytes @ 0x0
 13283                           
 13284  0070                     ?_TMR2_Stop:	
 13285                           ; 1 bytes @ 0x0
 13286                           
 13287  0070                     ?_TMR2_StopTimer:	
 13288                           ; 1 bytes @ 0x0
 13289                           
 13290  0070                     ?_TMR2_ISR:	
 13291                           ; 1 bytes @ 0x0
 13292                           
 13293  0070                     ?_Clear_RX_Buffer:	
 13294                           ; 1 bytes @ 0x0
 13295                           
 13296  0070                     ?_WiFly_CheckInCMD:	
 13297                           ; 1 bytes @ 0x0
 13298                           
 13299  0070                     ?_WiFly_ReadChar:	
 13300                           ; 1 bytes @ 0x0
 13301                           
 13302  0070                     ?_WiFly_RebootCMD:	
 13303                           ; 1 bytes @ 0x0
 13304                           
 13305  0070                     ?_WiFly_SaveConfig:	
 13306                           ; 1 bytes @ 0x0
 13307                           
 13308  0070                     ?_WiFly_FactoryReset:	
 13309                           ; 1 bytes @ 0x0
 13310                           
 13311  0070                     ?_INTERRUPT_InterruptManager:	
 13312                           ; 1 bytes @ 0x0
 13313                           
 13314  0070                     ?_ClearIndicators:	
 13315                           ; 1 bytes @ 0x0
 13316                           
 13317  0070                     ?_SetIndication:	
 13318                           ; 1 bytes @ 0x0
 13319                           
 13320  0070                     ?_goto_mode:	
 13321                           ; 1 bytes @ 0x0
 13322                           
 13323  0070                     ?_get_response:	
 13324                           ; 1 bytes @ 0x0
 13325                           
 13326  0070                     ?_send_message:	
 13327                           ; 1 bytes @ 0x0
 13328                           
 13329  0070                     ?_Pair:	
 13330                           ; 1 bytes @ 0x0
 13331                           
 13332  0070                     ?_Validate:	
 13333                           ; 1 bytes @ 0x0
 13334                           
 13335  0070                     ?_Knock:	
 13336                           ; 1 bytes @ 0x0
 13337                           
 13338  0070                     ?_blink:	
 13339                           ; 1 bytes @ 0x0
 13340                           
 13341  0070                     ?_setFlag:	
 13342                           ; 1 bytes @ 0x0
 13343                           
 13344  0070                     ??_setFlag:	
 13345                           ; 1 bytes @ 0x0
 13346                           
 13347  0070                     ?_main:	
 13348                           ; 1 bytes @ 0x0
 13349                           
 13350  0070                     ?i1_TMR4_Stop:	
 13351                           ; 1 bytes @ 0x0
 13352                           
 13353  0070                     ??i1_TMR4_Stop:	
 13354                           ; 1 bytes @ 0x0
 13355                           
 13356  0070                     ?i1_TMR4_StopTimer:	
 13357                           ; 1 bytes @ 0x0
 13358                           
 13359  0070                     ??i1_TMR4_StopTimer:	
 13360                           ; 1 bytes @ 0x0
 13361                           
 13362  0070                     ?i1_SetIndication:	
 13363                           ; 1 bytes @ 0x0
 13364                           
 13365  0070                     ??i1_SetIndication:	
 13366                           ; 1 bytes @ 0x0
 13367                           
 13368  0070                     i1SetIndication@set:	
 13369                           ; 1 bytes @ 0x0
 13370                           
 13371                           
 13372                           ; 1 bytes @ 0x0
 13373  0070                     	ds	1
 13374  0071                     ?_TMR4_SetInterruptHandler:	
 13375  0071                     ??_TMR4_Start:	
 13376                           ; 1 bytes @ 0x1
 13377                           
 13378  0071                     ?_EUSART_SetTxInterruptHandler:	
 13379                           ; 1 bytes @ 0x1
 13380                           
 13381  0071                     ?_EUSART_SetRxInterruptHandler:	
 13382                           ; 1 bytes @ 0x1
 13383                           
 13384  0071                     ??_PIN_MANAGER_Initialize:	
 13385                           ; 1 bytes @ 0x1
 13386                           
 13387  0071                     ??_OSCILLATOR_Initialize:	
 13388                           ; 1 bytes @ 0x1
 13389                           
 13390  0071                     ??_WWDT_Initialize:	
 13391                           ; 1 bytes @ 0x1
 13392                           
 13393  0071                     ?_TMR2_SetInterruptHandler:	
 13394                           ; 1 bytes @ 0x1
 13395                           
 13396  0071                     ??_TMR2_Start:	
 13397                           ; 1 bytes @ 0x1
 13398                           
 13399  0071                     ?_eeprom_write:	
 13400                           ; 1 bytes @ 0x1
 13401                           
 13402  0071                     ??_eeprom_read:	
 13403                           ; 1 bytes @ 0x1
 13404                           
 13405  0071                     ??_isdigit:	
 13406                           ; 1 bytes @ 0x1
 13407                           
 13408  0071                     ??_TMR4_StartTimer:	
 13409                           ; 1 bytes @ 0x1
 13410                           
 13411  0071                     ??_TMR4_Stop:	
 13412                           ; 1 bytes @ 0x1
 13413                           
 13414  0071                     ??_TMR4_StopTimer:	
 13415                           ; 1 bytes @ 0x1
 13416                           
 13417  0071                     ??_EUSART_is_rx_ready:	
 13418                           ; 1 bytes @ 0x1
 13419                           
 13420  0071                     ??_EUSART_Read:	
 13421                           ; 1 bytes @ 0x1
 13422                           
 13423  0071                     ?_EUSART_Write:	
 13424                           ; 1 bytes @ 0x1
 13425                           
 13426  0071                     ??_RELAY_RL1_Engage:	
 13427                           ; 1 bytes @ 0x1
 13428                           
 13429  0071                     ??_RELAY_RL1_Disengage:	
 13430                           ; 1 bytes @ 0x1
 13431                           
 13432  0071                     ??_TMR2_StartTimer:	
 13433                           ; 1 bytes @ 0x1
 13434                           
 13435  0071                     ??_TMR2_Stop:	
 13436                           ; 1 bytes @ 0x1
 13437                           
 13438  0071                     ??_TMR2_StopTimer:	
 13439                           ; 1 bytes @ 0x1
 13440                           
 13441  0071                     ??_TMR2_ISR:	
 13442                           ; 1 bytes @ 0x1
 13443                           
 13444  0071                     ??_INTERRUPT_InterruptManager:	
 13445                           ; 1 bytes @ 0x1
 13446                           
 13447  0071                     ??_ClearIndicators:	
 13448                           ; 1 bytes @ 0x1
 13449                           
 13450  0071                     ??_SetIndication:	
 13451                           ; 1 bytes @ 0x1
 13452                           
 13453  0071                     ??_blink:	
 13454                           ; 1 bytes @ 0x1
 13455                           
 13456  0071                     ?___bmul:	
 13457                           ; 1 bytes @ 0x1
 13458                           
 13459  0071                     ?_strlen:	
 13460                           ; 1 bytes @ 0x1
 13461                           
 13462  0071                     ?___wmul:	
 13463                           ; 2 bytes @ 0x1
 13464                           
 13465  0071                     ?___lwdiv:	
 13466                           ; 2 bytes @ 0x1
 13467                           
 13468  0071                     EUSART_Read@readValue:	
 13469                           ; 2 bytes @ 0x1
 13470                           
 13471  0071                     EUSART_Write@txData:	
 13472                           ; 1 bytes @ 0x1
 13473                           
 13474  0071                     PIN_MANAGER_Initialize@state:	
 13475                           ; 1 bytes @ 0x1
 13476                           
 13477  0071                     SetIndication@set:	
 13478                           ; 1 bytes @ 0x1
 13479                           
 13480  0071                     eeprom_read@addr:	
 13481                           ; 1 bytes @ 0x1
 13482                           
 13483  0071                     eeprom_write@value:	
 13484                           ; 1 bytes @ 0x1
 13485                           
 13486  0071                     ___bmul@multiplicand:	
 13487                           ; 1 bytes @ 0x1
 13488                           
 13489  0071                     _isdigit$1909:	
 13490                           ; 1 bytes @ 0x1
 13491                           
 13492  0071                     TMR4_SetInterruptHandler@InterruptHandler:	
 13493                           ; 1 bytes @ 0x1
 13494                           
 13495  0071                     EUSART_SetTxInterruptHandler@handler:	
 13496                           ; 2 bytes @ 0x1
 13497                           
 13498  0071                     EUSART_SetRxInterruptHandler@handler:	
 13499                           ; 2 bytes @ 0x1
 13500                           
 13501  0071                     TMR2_SetInterruptHandler@InterruptHandler:	
 13502                           ; 2 bytes @ 0x1
 13503                           
 13504  0071                     ___wmul@multiplier:	
 13505                           ; 2 bytes @ 0x1
 13506                           
 13507  0071                     ___lwdiv@divisor:	
 13508                           ; 2 bytes @ 0x1
 13509                           
 13510  0071                     strlen@s:	
 13511                           ; 2 bytes @ 0x1
 13512                           
 13513                           
 13514                           ; 2 bytes @ 0x1
 13515  0071                     	ds	1
 13516  0072                     ??_eeprom_write:	
 13517  0072                     ??_EUSART_Write:	
 13518                           ; 1 bytes @ 0x2
 13519                           
 13520  0072                     ?_WiFly_Send:	
 13521                           ; 1 bytes @ 0x2
 13522                           
 13523  0072                     ??_Clear_RX_Buffer:	
 13524                           ; 1 bytes @ 0x2
 13525                           
 13526  0072                     ??_WiFly_ReadChar:	
 13527                           ; 1 bytes @ 0x2
 13528                           
 13529  0072                     ??_goto_mode:	
 13530                           ; 1 bytes @ 0x2
 13531                           
 13532  0072                     ??___bmul:	
 13533                           ; 1 bytes @ 0x2
 13534                           
 13535  0072                     goto_mode@target:	
 13536                           ; 1 bytes @ 0x2
 13537                           
 13538  0072                     eeprom_write@addr:	
 13539                           ; 1 bytes @ 0x2
 13540                           
 13541  0072                     ___bmul@product:	
 13542                           ; 1 bytes @ 0x2
 13543                           
 13544  0072                     isdigit@c:	
 13545                           ; 1 bytes @ 0x2
 13546                           
 13547  0072                     WiFly_Send@command:	
 13548                           ; 1 bytes @ 0x2
 13549                           
 13550                           
 13551                           ; 2 bytes @ 0x2
 13552  0072                     	ds	1
 13553  0073                     ??_TMR4_SetInterruptHandler:	
 13554  0073                     ??_EUSART_SetTxInterruptHandler:	
 13555                           ; 1 bytes @ 0x3
 13556                           
 13557  0073                     ??_EUSART_SetRxInterruptHandler:	
 13558                           ; 1 bytes @ 0x3
 13559                           
 13560  0073                     ??_TMR2_Initialize:	
 13561                           ; 1 bytes @ 0x3
 13562                           
 13563  0073                     ??_TMR2_SetInterruptHandler:	
 13564                           ; 1 bytes @ 0x3
 13565                           
 13566  0073                     ??_strlen:	
 13567                           ; 1 bytes @ 0x3
 13568                           
 13569  0073                     ??_TMR4_Initialize:	
 13570                           ; 1 bytes @ 0x3
 13571                           
 13572  0073                     ??_EUSART_Initialize:	
 13573                           ; 1 bytes @ 0x3
 13574                           
 13575  0073                     ??_SYSTEM_Initialize:	
 13576                           ; 1 bytes @ 0x3
 13577                           
 13578  0073                     ___bmul@multiplier:	
 13579                           ; 1 bytes @ 0x3
 13580                           
 13581  0073                     ___wmul@multiplicand:	
 13582                           ; 1 bytes @ 0x3
 13583                           
 13584  0073                     ___lwdiv@dividend:	
 13585                           ; 2 bytes @ 0x3
 13586                           
 13587                           
 13588                           ; 2 bytes @ 0x3
 13589  0073                     	ds	1
 13590  0074                     ??_WiFly_Send:	
 13591  0074                     strlen@cp:	
 13592                           ; 1 bytes @ 0x4
 13593                           
 13594                           
 13595                           ; 2 bytes @ 0x4
 13596  0074                     	ds	1
 13597  0075                     ?_WiFly_SendString:	
 13598  0075                     ??___wmul:	
 13599                           ; 1 bytes @ 0x5
 13600                           
 13601  0075                     ??___lwdiv:	
 13602                           ; 1 bytes @ 0x5
 13603                           
 13604  0075                     WiFly_SendString@sendString:	
 13605                           ; 1 bytes @ 0x5
 13606                           
 13607  0075                     ___wmul@product:	
 13608                           ; 2 bytes @ 0x5
 13609                           
 13610  0075                     ___lwdiv@quotient:	
 13611                           ; 2 bytes @ 0x5
 13612                           
 13613                           
 13614                           ; 2 bytes @ 0x5
 13615  0075                     	ds	1
 13616  0076                     ?_WiFly_CheckRecv:	
 13617  0076                     ?_CheckResponse:	
 13618                           ; 1 bytes @ 0x6
 13619                           
 13620  0076                     ?_WaitResponse:	
 13621                           ; 1 bytes @ 0x6
 13622                           
 13623  0076                     WiFly_CheckRecv@chkString:	
 13624                           ; 1 bytes @ 0x6
 13625                           
 13626  0076                     CheckResponse@chkString1:	
 13627                           ; 2 bytes @ 0x6
 13628                           
 13629  0076                     WaitResponse@chkString:	
 13630                           ; 2 bytes @ 0x6
 13631                           
 13632                           
 13633                           ; 2 bytes @ 0x6
 13634  0076                     	ds	1
 13635  0077                     ??_WiFly_SendString:	
 13636  0077                     ___lwdiv@counter:	
 13637                           ; 1 bytes @ 0x7
 13638                           
 13639                           
 13640                           ; 1 bytes @ 0x7
 13641  0077                     	ds	1
 13642  0078                     ??_WiFly_CheckRecv:	
 13643  0078                     ??_WaitResponse:	
 13644                           ; 1 bytes @ 0x8
 13645                           
 13646  0078                     ?___lwmod:	
 13647                           ; 1 bytes @ 0x8
 13648                           
 13649  0078                     CheckResponse@chkString2:	
 13650                           ; 2 bytes @ 0x8
 13651                           
 13652  0078                     ___lwmod@divisor:	
 13653                           ; 1 bytes @ 0x8
 13654                           
 13655                           
 13656                           ; 2 bytes @ 0x8
 13657  0078                     	ds	1
 13658  0079                     ??_WiFly_EnterCMDMode:	
 13659  0079                     ??_get_response:	
 13660                           ; 1 bytes @ 0x9
 13661                           
 13662  0079                     CheckResponse@chkString3:	
 13663                           ; 1 bytes @ 0x9
 13664                           
 13665  0079                     get_response@status:	
 13666                           ; 1 bytes @ 0x9
 13667                           
 13668                           
 13669                           ; 1 bytes @ 0x9
 13670  0079                     	ds	1
 13671  007A                     ??_CheckResponse:	
 13672  007A                     ___lwmod@dividend:	
 13673                           ; 1 bytes @ 0xA
 13674                           
 13675                           
 13676                           ; 2 bytes @ 0xA
 13677  007A                     	ds	1
 13678  007B                     ??_WiFly_CheckInCMD:	
 13679  007B                     ??_WiFly_SendCMD:	
 13680                           ; 1 bytes @ 0xB
 13681                           
 13682  007B                     ??_WiFly_RebootCMD:	
 13683                           ; 1 bytes @ 0xB
 13684                           
 13685  007B                     ??_WiFly_SaveConfig:	
 13686                           ; 1 bytes @ 0xB
 13687                           
 13688                           
 13689                           ; 1 bytes @ 0xB
 13690  007B                     	ds	1
 13691  007C                     ??_WiFly_SendCMD_SingleArg:	
 13692  007C                     ??_WiFly_SendCMD_DoubleArg:	
 13693                           ; 1 bytes @ 0xC
 13694                           
 13695  007C                     ??_connect_socket:	
 13696                           ; 1 bytes @ 0xC
 13697                           
 13698  007C                     ??_send_message:	
 13699                           ; 1 bytes @ 0xC
 13700                           
 13701  007C                     ??_connect_network:	
 13702                           ; 1 bytes @ 0xC
 13703                           
 13704  007C                     ??_main:	
 13705                           ; 1 bytes @ 0xC
 13706                           
 13707  007C                     ??___lwmod:	
 13708                           ; 1 bytes @ 0xC
 13709                           
 13710                           
 13711                           	psect	cstackBANK0
 13712  0020                     __pcstackBANK0:	
 13713                           ; 1 bytes @ 0xC
 13714                           
 13715  0020                     ___lwmod@counter:	
 13716  0020                     WiFly_CheckRecv@length:	
 13717                           ; 1 bytes @ 0x0
 13718                           
 13719  0020                     CheckResponse@length3:	
 13720                           ; 2 bytes @ 0x0
 13721                           
 13722  0020                     WaitResponse@length:	
 13723                           ; 2 bytes @ 0x0
 13724                           
 13725                           
 13726                           ; 2 bytes @ 0x0
 13727  0020                     	ds	1
 13728  0021                     ?_sprintf:	
 13729  0021                     sprintf@f:	
 13730                           ; 2 bytes @ 0x1
 13731                           
 13732                           
 13733                           ; 2 bytes @ 0x1
 13734  0021                     	ds	1
 13735  0022                     WiFly_CheckRecv@i:	
 13736  0022                     CheckResponse@length1:	
 13737                           ; 2 bytes @ 0x2
 13738                           
 13739  0022                     WaitResponse@i:	
 13740                           ; 2 bytes @ 0x2
 13741                           
 13742                           
 13743                           ; 2 bytes @ 0x2
 13744  0022                     	ds	2
 13745  0024                     ?_WiFly_SendCMD:	
 13746  0024                     WiFly_SendCMD@cmd:	
 13747                           ; 1 bytes @ 0x4
 13748                           
 13749  0024                     CheckResponse@length2:	
 13750                           ; 2 bytes @ 0x4
 13751                           
 13752                           
 13753                           ; 2 bytes @ 0x4
 13754  0024                     	ds	2
 13755  0026                     ??_WiFly_FactoryReset:	
 13756  0026                     CheckResponse@i3:	
 13757                           ; 1 bytes @ 0x6
 13758                           
 13759                           
 13760                           ; 2 bytes @ 0x6
 13761  0026                     	ds	1
 13762  0027                     ??_sprintf:	
 13763                           
 13764                           ; 1 bytes @ 0x7
 13765  0027                     	ds	1
 13766  0028                     CheckResponse@input:	
 13767                           
 13768                           ; 1 bytes @ 0x8
 13769  0028                     	ds	1
 13770  0029                     CheckResponse@i1:	
 13771                           
 13772                           ; 2 bytes @ 0x9
 13773  0029                     	ds	2
 13774  002B                     sprintf@idx:	
 13775  002B                     CheckResponse@i2:	
 13776                           ; 1 bytes @ 0xB
 13777                           
 13778                           
 13779                           ; 2 bytes @ 0xB
 13780  002B                     	ds	1
 13781  002C                     sprintf@cp:	
 13782                           
 13783                           ; 2 bytes @ 0xC
 13784  002C                     	ds	2
 13785  002E                     sprintf@ap:	
 13786                           
 13787                           ; 1 bytes @ 0xE
 13788  002E                     	ds	1
 13789  002F                     sprintf@len:	
 13790                           
 13791                           ; 2 bytes @ 0xF
 13792  002F                     	ds	2
 13793  0031                     sprintf@val:	
 13794                           
 13795                           ; 2 bytes @ 0x11
 13796  0031                     	ds	2
 13797  0033                     sprintf@prec:	
 13798                           
 13799                           ; 1 bytes @ 0x13
 13800  0033                     	ds	1
 13801  0034                     sprintf@flag:	
 13802                           
 13803                           ; 2 bytes @ 0x14
 13804  0034                     	ds	2
 13805  0036                     sprintf@sp:	
 13806                           
 13807                           ; 1 bytes @ 0x16
 13808  0036                     	ds	1
 13809  0037                     sprintf@width:	
 13810                           
 13811                           ; 2 bytes @ 0x17
 13812  0037                     	ds	2
 13813  0039                     sprintf@c:	
 13814                           
 13815                           ; 1 bytes @ 0x19
 13816  0039                     	ds	1
 13817  003A                     ?_WiFly_SendCMD_SingleArg:	
 13818  003A                     ?_WiFly_SendCMD_DoubleArg:	
 13819                           ; 1 bytes @ 0x1A
 13820                           
 13821  003A                     WiFly_SendCMD_SingleArg@cmdFormat:	
 13822                           ; 1 bytes @ 0x1A
 13823                           
 13824  003A                     WiFly_SendCMD_DoubleArg@cmdFormat:	
 13825                           ; 2 bytes @ 0x1A
 13826                           
 13827                           
 13828                           ; 2 bytes @ 0x1A
 13829  003A                     	ds	2
 13830  003C                     WiFly_SendCMD_SingleArg@arg:	
 13831  003C                     WiFly_SendCMD_DoubleArg@arg1:	
 13832                           ; 2 bytes @ 0x1C
 13833                           
 13834                           
 13835                           ; 2 bytes @ 0x1C
 13836  003C                     	ds	2
 13837  003E                     WiFly_SendCMD_DoubleArg@arg2:	
 13838  003E                     WiFly_SendCMD_SingleArg@txBuffer:	
 13839                           ; 2 bytes @ 0x1E
 13840                           
 13841                           
 13842                           ; 40 bytes @ 0x1E
 13843  003E                     	ds	2
 13844  0040                     WiFly_SendCMD_DoubleArg@txBuffer:	
 13845                           
 13846                           ; 40 bytes @ 0x20
 13847  0040                     	ds	38
 13848  0066                     ?_connect_network:	
 13849  0066                     connect_network@ssid:	
 13850                           ; 1 bytes @ 0x46
 13851                           
 13852                           
 13853                           ; 2 bytes @ 0x46
 13854  0066                     	ds	2
 13855  0068                     ?_connect_socket:	
 13856  0068                     connect_socket@addr:	
 13857                           ; 1 bytes @ 0x48
 13858                           
 13859  0068                     connect_network@passwd:	
 13860                           ; 2 bytes @ 0x48
 13861                           
 13862                           
 13863                           ; 2 bytes @ 0x48
 13864  0068                     	ds	2
 13865  006A                     connect_socket@port:	
 13866                           
 13867                           ; 2 bytes @ 0x4A
 13868  006A                     	ds	2
 13869  006C                     send_message@message:	
 13870                           
 13871                           ; 1 bytes @ 0x4C
 13872  006C                     	ds	1
 13873  006D                     ??_Pair:	
 13874  006D                     ??_Validate:	
 13875                           ; 1 bytes @ 0x4D
 13876                           
 13877                           
 13878                           ; 1 bytes @ 0x4D
 13879  006D                     	ds	1
 13880                           
 13881                           	psect	text38
 13882  0084                     __ptext38:	
 13883 ;; *************** function _EUSART_Write *****************
 13884 ;; Defined at:
 13885 ;;		line 150 in file "mcc_generated_files/eusart.c"
 13886 ;; Parameters:    Size  Location     Type
 13887 ;;  txData          1    1[COMMON] unsigned char 
 13888 ;; Auto vars:     Size  Location     Type
 13889 ;;		None
 13890 ;; Return value:  Size  Location     Type
 13891 ;;                  1    wreg      void 
 13892 ;; Registers used:
 13893 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13894 ;; Tracked objects:
 13895 ;;		On entry : 0/0
 13896 ;;		On exit  : 1F/E
 13897 ;;		Unchanged: 0/0
 13898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13899 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13902 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13903 ;;Total ram usage:        1 bytes
 13904 ;; Hardware stack levels used:    1
 13905 ;; Hardware stack levels required when called:    5
 13906 ;; This function calls:
 13907 ;;		Nothing
 13908 ;; This function is called by:
 13909 ;;		_WiFly_Send
 13910 ;; This function uses a non-reentrant model
 13911 ;;
 13912                           
 13913                           
 13914                           ;psect for function _EUSART_Write
 13915  0084                     _EUSART_Write:	
 13916  0084                     l2516:	
 13917                           ;eusart.c: 152: while(0 == eusartTxBufferRemaining)
 13918                           
 13919                           ;incstack = 0
 13920                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 13921                           
 13922  0084  0021               	movlb	1	; select bank1
 13923  0085  086B               	movf	_eusartTxBufferRemaining^(0+128),w	;volatile
 13924  0086  1903               	btfsc	3,2
 13925  0087  2884               	goto	l2516
 13926                           
 13927                           ;eusart.c: 154: }
 13928                           ;eusart.c: 156: if(0 == PIE3bits.TXIE)
 13929  0088  002E               	movlb	14	; select bank14
 13930  0089  1A19               	btfsc	25,4	;volatile
 13931  008A  288F               	goto	l156
 13932                           
 13933                           ;eusart.c: 157: {
 13934                           ;eusart.c: 158: TX1REG = txData;
 13935  008B  0871               	movf	EUSART_Write@txData,w
 13936  008C  0022               	movlb	2	; select bank2
 13937  008D  009A               	movwf	26	;volatile
 13938                           
 13939                           ;eusart.c: 159: }
 13940  008E  289D               	goto	l2530
 13941  008F                     l156:	
 13942                           
 13943                           ;eusart.c: 160: else
 13944                           ;eusart.c: 161: {
 13945                           ;eusart.c: 162: PIE3bits.TXIE = 0;
 13946  008F  1219               	bcf	25,4	;volatile
 13947                           
 13948                           ;eusart.c: 163: eusartTxBuffer[eusartTxHead++] = txData;
 13949  0090  087C               	movf	_eusartTxHead,w
 13950  0091  3EC6               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 13951  0092  0086               	movwf	6
 13952  0093  0187               	clrf	7
 13953  0094  0871               	movf	EUSART_Write@txData,w
 13954  0095  0081               	movwf	1
 13955  0096  0AFC               	incf	_eusartTxHead,f	;volatile
 13956                           
 13957                           ;eusart.c: 164: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 13958  0097  3008               	movlw	8
 13959  0098  027C               	subwf	_eusartTxHead,w
 13960  0099  1803               	btfsc	3,0
 13961                           
 13962                           ;eusart.c: 165: {
 13963                           ;eusart.c: 166: eusartTxHead = 0;
 13964  009A  01FC               	clrf	_eusartTxHead	;volatile
 13965                           
 13966                           ;eusart.c: 167: }
 13967                           ;eusart.c: 168: eusartTxBufferRemaining--;
 13968  009B  0021               	movlb	1	; select bank1
 13969  009C  03EB               	decf	_eusartTxBufferRemaining^(0+128),f	;volatile
 13970  009D                     l2530:	
 13971                           
 13972                           ;eusart.c: 169: }
 13973                           ;eusart.c: 170: PIE3bits.TXIE = 1;
 13974  009D  002E               	movlb	14	; select bank14
 13975  009E  1619               	bsf	25,4	;volatile
 13976  009F  0008               	return
 13977  00A0                     __end_of_EUSART_Write:	
 13978                           
 13979                           	psect	text56
 13980  00B8                     __ptext56:	
 13981 ;; *************** function _EUSART_Read *****************
 13982 ;; Defined at:
 13983 ;;		line 130 in file "mcc_generated_files/eusart.c"
 13984 ;; Parameters:    Size  Location     Type
 13985 ;;		None
 13986 ;; Auto vars:     Size  Location     Type
 13987 ;;  readValue       1    1[COMMON] unsigned char 
 13988 ;; Return value:  Size  Location     Type
 13989 ;;                  1    wreg      unsigned char 
 13990 ;; Registers used:
 13991 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13992 ;; Tracked objects:
 13993 ;;		On entry : 0/0
 13994 ;;		On exit  : 1F/E
 13995 ;;		Unchanged: 0/0
 13996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13998 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13999 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14000 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14001 ;;Total ram usage:        1 bytes
 14002 ;; Hardware stack levels used:    1
 14003 ;; Hardware stack levels required when called:    5
 14004 ;; This function calls:
 14005 ;;		Nothing
 14006 ;; This function is called by:
 14007 ;;		_Clear_RX_Buffer
 14008 ;;		_WiFly_CheckRecv
 14009 ;;		_WiFly_ReadChar
 14010 ;; This function uses a non-reentrant model
 14011 ;;
 14012                           
 14013                           
 14014                           ;psect for function _EUSART_Read
 14015  00B8                     _EUSART_Read:	
 14016  00B8                     l3506:	
 14017                           ;eusart.c: 134: while(0 == eusartRxCount)
 14018                           
 14019                           ;incstack = 0
 14020                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 14021                           
 14022  00B8  0021               	movlb	1	; select bank1
 14023  00B9  0851               	movf	_eusartRxCount^(0+128),w	;volatile
 14024  00BA  1903               	btfsc	3,2
 14025  00BB  28B8               	goto	l3506
 14026                           
 14027                           ;eusart.c: 136: }
 14028                           ;eusart.c: 138: readValue = eusartRxBuffer[eusartRxTail++];
 14029  00BC  0852               	movf	_eusartRxTail^(0+128),w
 14030  00BD  3EBE               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 14031  00BE  0086               	movwf	6
 14032  00BF  0187               	clrf	7
 14033  00C0  0801               	movf	1,w
 14034  00C1  00F1               	movwf	EUSART_Read@readValue
 14035  00C2  0AD2               	incf	_eusartRxTail^(0+128),f	;volatile
 14036                           
 14037                           ;eusart.c: 139: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 14038  00C3  3008               	movlw	8
 14039  00C4  0252               	subwf	_eusartRxTail^(0+128),w
 14040  00C5  1803               	btfsc	3,0
 14041                           
 14042                           ;eusart.c: 140: {
 14043                           ;eusart.c: 141: eusartRxTail = 0;
 14044  00C6  01D2               	clrf	_eusartRxTail^(0+128)	;volatile
 14045                           
 14046                           ;eusart.c: 142: }
 14047                           ;eusart.c: 143: PIE3bits.RCIE = 0;
 14048  00C7  002E               	movlb	14	; select bank14
 14049  00C8  1299               	bcf	25,5	;volatile
 14050                           
 14051                           ;eusart.c: 144: eusartRxCount--;
 14052  00C9  0021               	movlb	1	; select bank1
 14053  00CA  03D1               	decf	_eusartRxCount^(0+128),f	;volatile
 14054                           
 14055                           ;eusart.c: 145: PIE3bits.RCIE = 1;
 14056  00CB  002E               	movlb	14	; select bank14
 14057  00CC  1699               	bsf	25,5	;volatile
 14058                           
 14059                           ;eusart.c: 147: return readValue;
 14060  00CD  0871               	movf	EUSART_Read@readValue,w
 14061  00CE  0008               	return
 14062  00CF                     __end_of_EUSART_Read:	
 14063                           
 14064                           	psect	intentry
 14065  0004                     __pintentry:	
 14066 ;; *************** function _INTERRUPT_InterruptManager *****************
 14067 ;; Defined at:
 14068 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 14069 ;; Parameters:    Size  Location     Type
 14070 ;;		None
 14071 ;; Auto vars:     Size  Location     Type
 14072 ;;		None
 14073 ;; Return value:  Size  Location     Type
 14074 ;;                  1    wreg      void 
 14075 ;; Registers used:
 14076 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14077 ;; Tracked objects:
 14078 ;;		On entry : 0/0
 14079 ;;		On exit  : 0/0
 14080 ;;		Unchanged: 0/0
 14081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14086 ;;Total ram usage:        0 bytes
 14087 ;; Hardware stack levels used:    1
 14088 ;; Hardware stack levels required when called:    4
 14089 ;; This function calls:
 14090 ;;		Absolute function
 14091 ;;		_EUSART_Receive_ISR
 14092 ;;		_EUSART_Transmit_ISR
 14093 ;;		_TMR2_ISR
 14094 ;;		_TMR4_ISR
 14095 ;; This function is called by:
 14096 ;;		Interrupt level 1
 14097 ;; This function uses a non-reentrant model
 14098 ;;
 14099                           
 14100  0004                     _INTERRUPT_InterruptManager:	
 14101                           
 14102                           ;incstack = 0
 14103  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14104                           
 14105                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
 14106  0005  3180               	pagesel	$
 14107                           
 14108                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE3bits.TXIE == 1 && PIR3bits.TXIF
      +                           == 1)
 14109  0006  1F0B               	btfss	11,6	;volatile
 14110  0007  2813               	goto	i1l632
 14111  0008  002E               	movlb	14	; select bank14
 14112  0009  1A19               	btfsc	25,4	;volatile
 14113  000A  1E0F               	btfss	15,4	;volatile
 14114  000B  2813               	goto	i1l632
 14115                           
 14116                           ;interrupt_manager.c: 55: {
 14117                           ;interrupt_manager.c: 56: EUSART_TxDefaultInterruptHandler();
 14118  000C  0021               	movlb	1	; select bank1
 14119  000D  0866               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
 14120  000E  008A               	movwf	10
 14121  000F  0865               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
 14122  0010  000A               	callw
 14123  0011  3180               	pagesel	$
 14124                           
 14125                           ;interrupt_manager.c: 57: }
 14126  0012  2832               	goto	i1l640
 14127  0013                     i1l632:	
 14128                           
 14129                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE3bits.RCIE == 1 && PIR3bits
      +                          .RCIF == 1)
 14130  0013  1F0B               	btfss	11,6	;volatile
 14131  0014  2820               	goto	i1l634
 14132  0015  002E               	movlb	14	; select bank14
 14133  0016  1A99               	btfsc	25,5	;volatile
 14134  0017  1E8F               	btfss	15,5	;volatile
 14135  0018  2820               	goto	i1l634
 14136                           
 14137                           ;interrupt_manager.c: 59: {
 14138                           ;interrupt_manager.c: 60: EUSART_RxDefaultInterruptHandler();
 14139  0019  0021               	movlb	1	; select bank1
 14140  001A  0864               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
 14141  001B  008A               	movwf	10
 14142  001C  0863               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
 14143  001D  000A               	callw
 14144  001E  3180               	pagesel	$
 14145                           
 14146                           ;interrupt_manager.c: 61: }
 14147  001F  2832               	goto	i1l640
 14148  0020                     i1l634:	
 14149                           
 14150                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE4bits.TMR4IE == 1 && PIR4bi
      +                          ts.TMR4IF == 1)
 14151  0020  1F0B               	btfss	11,6	;volatile
 14152  0021  282A               	goto	i1l636
 14153  0022  002E               	movlb	14	; select bank14
 14154  0023  199A               	btfsc	26,3	;volatile
 14155  0024  1D90               	btfss	16,3	;volatile
 14156  0025  282A               	goto	i1l636
 14157                           
 14158                           ;interrupt_manager.c: 63: {
 14159                           ;interrupt_manager.c: 64: TMR4_ISR();
 14160  0026  3180  20F2  3180   	fcall	_TMR4_ISR
 14161                           
 14162                           ;interrupt_manager.c: 65: }
 14163  0029  2832               	goto	i1l640
 14164  002A                     i1l636:	
 14165                           
 14166                           ;interrupt_manager.c: 66: else if(INTCONbits.PEIE == 1 && PIE4bits.TMR2IE == 1 && PIR4bi
      +                          ts.TMR2IF == 1)
 14167  002A  1F0B               	btfss	11,6	;volatile
 14168  002B  2832               	goto	i1l640
 14169  002C  002E               	movlb	14	; select bank14
 14170  002D  189A               	btfsc	26,1	;volatile
 14171  002E  1C90               	btfss	16,1	;volatile
 14172  002F  2832               	goto	i1l640
 14173                           
 14174                           ;interrupt_manager.c: 67: {
 14175                           ;interrupt_manager.c: 68: TMR2_ISR();
 14176  0030  3180  20FE         	fcall	_TMR2_ISR
 14177  0032                     i1l640:	
 14178                           ;interrupt_manager.c: 69: }
 14179                           
 14180  0032  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14181  0033  0009               	retfie
 14182  0034                     __end_of_INTERRUPT_InterruptManager:	
 14183                           
 14184                           	psect	text60
 14185  00F2                     __ptext60:	
 14186 ;; *************** function _TMR4_ISR *****************
 14187 ;; Defined at:
 14188 ;;		line 167 in file "mcc_generated_files/tmr4.c"
 14189 ;; Parameters:    Size  Location     Type
 14190 ;;		None
 14191 ;; Auto vars:     Size  Location     Type
 14192 ;;		None
 14193 ;; Return value:  Size  Location     Type
 14194 ;;                  1    wreg      void 
 14195 ;; Registers used:
 14196 ;;		wreg, status,2, status,0, pclath, cstack
 14197 ;; Tracked objects:
 14198 ;;		On entry : 1F/E
 14199 ;;		On exit  : 0/0
 14200 ;;		Unchanged: 0/0
 14201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14206 ;;Total ram usage:        0 bytes
 14207 ;; Hardware stack levels used:    1
 14208 ;; Hardware stack levels required when called:    3
 14209 ;; This function calls:
 14210 ;;		Absolute function
 14211 ;;		_TMR4_DefaultInterruptHandler
 14212 ;;		_setFlag
 14213 ;; This function is called by:
 14214 ;;		_INTERRUPT_InterruptManager
 14215 ;; This function uses a non-reentrant model
 14216 ;;
 14217                           
 14218                           
 14219                           ;psect for function _TMR4_ISR
 14220  00F2                     _TMR4_ISR:	
 14221                           
 14222                           ;tmr4.c: 171: PIR4bits.TMR4IF = 0;
 14223                           
 14224                           ;incstack = 0
 14225                           ; Regs used in _TMR4_ISR: [wreg+status,2+status,0+pclath+cstack]
 14226  00F2  1190               	bcf	16,3	;volatile
 14227                           
 14228                           ;tmr4.c: 173: if(TMR4_InterruptHandler)
 14229  00F3  0021               	movlb	1	; select bank1
 14230  00F4  0867               	movf	_TMR4_InterruptHandler^(0+128),w
 14231  00F5  0468               	iorwf	(_TMR4_InterruptHandler+1)^(0+128),w
 14232  00F6  1903               	btfsc	3,2
 14233  00F7  0008               	return
 14234                           
 14235                           ;tmr4.c: 174: {
 14236                           ;tmr4.c: 175: TMR4_InterruptHandler();
 14237  00F8  0868               	movf	(_TMR4_InterruptHandler+1)^(0+128),w
 14238  00F9  008A               	movwf	10
 14239  00FA  0867               	movf	_TMR4_InterruptHandler^(0+128),w
 14240  00FB  000A               	callw
 14241  00FC  3180               	pagesel	$
 14242  00FD  0008               	return
 14243  00FE                     __end_of_TMR4_ISR:	
 14244                           
 14245                           	psect	text61
 14246  0120                     __ptext61:	
 14247 ;; *************** function _TMR4_DefaultInterruptHandler *****************
 14248 ;; Defined at:
 14249 ;;		line 184 in file "mcc_generated_files/tmr4.c"
 14250 ;; Parameters:    Size  Location     Type
 14251 ;;		None
 14252 ;; Auto vars:     Size  Location     Type
 14253 ;;		None
 14254 ;; Return value:  Size  Location     Type
 14255 ;;                  1    wreg      void 
 14256 ;; Registers used:
 14257 ;;		None
 14258 ;; Tracked objects:
 14259 ;;		On entry : 1F/1
 14260 ;;		On exit  : 1F/1
 14261 ;;		Unchanged: 1F/0
 14262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14267 ;;Total ram usage:        0 bytes
 14268 ;; Hardware stack levels used:    1
 14269 ;; This function calls:
 14270 ;;		Nothing
 14271 ;; This function is called by:
 14272 ;;		_TMR4_Initialize
 14273 ;;		_TMR4_ISR
 14274 ;; This function uses a non-reentrant model
 14275 ;;
 14276                           
 14277                           
 14278                           ;psect for function _TMR4_DefaultInterruptHandler
 14279  0120                     _TMR4_DefaultInterruptHandler:	
 14280                           
 14281                           ;incstack = 0
 14282                           ; Regs used in _TMR4_DefaultInterruptHandler: []
 14283  0120  0008               	return
 14284  0121                     __end_of_TMR4_DefaultInterruptHandler:	
 14285                           
 14286                           	psect	text62
 14287  010A                     __ptext62:	
 14288 ;; *************** function _setFlag *****************
 14289 ;; Defined at:
 14290 ;;		line 281 in file "main.c"
 14291 ;; Parameters:    Size  Location     Type
 14292 ;;		None
 14293 ;; Auto vars:     Size  Location     Type
 14294 ;;		None
 14295 ;; Return value:  Size  Location     Type
 14296 ;;                  1    wreg      void 
 14297 ;; Registers used:
 14298 ;;		status,2, status,0, pclath, cstack
 14299 ;; Tracked objects:
 14300 ;;		On entry : 1F/1
 14301 ;;		On exit  : 1F/1
 14302 ;;		Unchanged: 0/0
 14303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14308 ;;Total ram usage:        0 bytes
 14309 ;; Hardware stack levels used:    1
 14310 ;; Hardware stack levels required when called:    2
 14311 ;; This function calls:
 14312 ;;		i1_TMR4_StopTimer
 14313 ;; This function is called by:
 14314 ;;		_main
 14315 ;;		_TMR4_ISR
 14316 ;; This function uses a non-reentrant model
 14317 ;;
 14318                           
 14319                           
 14320                           ;psect for function _setFlag
 14321  010A                     _setFlag:	
 14322                           
 14323                           ;main.c: 282: TMR4_StopTimer();
 14324                           
 14325                           ;incstack = 0
 14326                           ; Regs used in _setFlag: [status,2+status,0+pclath+cstack]
 14327  010A  210F               	fcall	i1_TMR4_StopTimer
 14328                           
 14329                           ;main.c: 283: pingTime = 1;
 14330  010B  0021               	movlb	1	; select bank1
 14331  010C  01CF               	clrf	_pingTime^(0+128)
 14332  010D  0ACF               	incf	_pingTime^(0+128),f
 14333  010E  0008               	return
 14334  010F                     __end_of_setFlag:	
 14335  010F                     __ptext63:	
 14336 ;; *************** function i1_TMR4_StopTimer *****************
 14337 ;; Defined at:
 14338 ;;		line 127 in file "mcc_generated_files/tmr4.c"
 14339 ;; Parameters:    Size  Location     Type
 14340 ;;		None
 14341 ;; Auto vars:     Size  Location     Type
 14342 ;;		None
 14343 ;; Return value:  Size  Location     Type
 14344 ;;                  1    wreg      void 
 14345 ;; Registers used:
 14346 ;;		status,2, status,0, pclath, cstack
 14347 ;; Tracked objects:
 14348 ;;		On entry : 1F/1
 14349 ;;		On exit  : 1F/5
 14350 ;;		Unchanged: 0/0
 14351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14356 ;;Total ram usage:        0 bytes
 14357 ;; Hardware stack levels used:    1
 14358 ;; Hardware stack levels required when called:    1
 14359 ;; This function calls:
 14360 ;;		i1_TMR4_Stop
 14361 ;; This function is called by:
 14362 ;;		_setFlag
 14363 ;; This function uses a non-reentrant model
 14364 ;;
 14365                           
 14366                           
 14367                           ;psect for function i1_TMR4_StopTimer
 14368  010F                     i1_TMR4_StopTimer:	
 14369                           
 14370                           ;tmr4.c: 129: TMR4_Stop();
 14371                           
 14372                           ;incstack = 0
 14373                           ; Regs used in i1_TMR4_StopTimer: [status,2+status,0+pclath+cstack]
 14374  010F  2111               	fcall	i1_TMR4_Stop
 14375  0110  0008               	return
 14376  0111                     __end_ofi1_TMR4_StopTimer:	
 14377  0111                     __ptext64:	
 14378 ;; *************** function i1_TMR4_Stop *****************
 14379 ;; Defined at:
 14380 ;;		line 121 in file "mcc_generated_files/tmr4.c"
 14381 ;; Parameters:    Size  Location     Type
 14382 ;;		None
 14383 ;; Auto vars:     Size  Location     Type
 14384 ;;		None
 14385 ;; Return value:  Size  Location     Type
 14386 ;;                  1    wreg      void 
 14387 ;; Registers used:
 14388 ;;		None
 14389 ;; Tracked objects:
 14390 ;;		On entry : 1F/1
 14391 ;;		On exit  : 1F/5
 14392 ;;		Unchanged: 0/0
 14393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14395 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14397 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14398 ;;Total ram usage:        0 bytes
 14399 ;; Hardware stack levels used:    1
 14400 ;; This function calls:
 14401 ;;		Nothing
 14402 ;; This function is called by:
 14403 ;;		i1_TMR4_StopTimer
 14404 ;; This function uses a non-reentrant model
 14405 ;;
 14406                           
 14407                           
 14408                           ;psect for function i1_TMR4_Stop
 14409  0111                     i1_TMR4_Stop:	
 14410                           
 14411                           ;tmr4.c: 124: T4CONbits.TMR4ON = 0;
 14412                           
 14413                           ;incstack = 0
 14414                           ; Regs used in i1_TMR4_Stop: []
 14415  0111  0025               	movlb	5	; select bank5
 14416  0112  1394               	bcf	20,7	;volatile
 14417  0113  0008               	return
 14418  0114                     __end_ofi1_TMR4_Stop:	
 14419                           
 14420                           	psect	text65
 14421  00FE                     __ptext65:	
 14422 ;; *************** function _TMR2_ISR *****************
 14423 ;; Defined at:
 14424 ;;		line 167 in file "mcc_generated_files/tmr2.c"
 14425 ;; Parameters:    Size  Location     Type
 14426 ;;		None
 14427 ;; Auto vars:     Size  Location     Type
 14428 ;;		None
 14429 ;; Return value:  Size  Location     Type
 14430 ;;                  1    wreg      void 
 14431 ;; Registers used:
 14432 ;;		wreg, status,2, status,0, pclath, cstack
 14433 ;; Tracked objects:
 14434 ;;		On entry : 1F/E
 14435 ;;		On exit  : 0/0
 14436 ;;		Unchanged: 0/0
 14437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14442 ;;Total ram usage:        0 bytes
 14443 ;; Hardware stack levels used:    1
 14444 ;; Hardware stack levels required when called:    2
 14445 ;; This function calls:
 14446 ;;		Absolute function
 14447 ;;		_TMR2_DefaultInterruptHandler
 14448 ;;		_blink
 14449 ;; This function is called by:
 14450 ;;		_INTERRUPT_InterruptManager
 14451 ;; This function uses a non-reentrant model
 14452 ;;
 14453                           
 14454                           
 14455                           ;psect for function _TMR2_ISR
 14456  00FE                     _TMR2_ISR:	
 14457                           
 14458                           ;tmr2.c: 171: PIR4bits.TMR2IF = 0;
 14459                           
 14460                           ;incstack = 0
 14461                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
 14462  00FE  1090               	bcf	16,1	;volatile
 14463                           
 14464                           ;tmr2.c: 173: if(TMR2_InterruptHandler)
 14465  00FF  0021               	movlb	1	; select bank1
 14466  0100  0861               	movf	_TMR2_InterruptHandler^(0+128),w
 14467  0101  0462               	iorwf	(_TMR2_InterruptHandler+1)^(0+128),w
 14468  0102  1903               	btfsc	3,2
 14469  0103  0008               	return
 14470                           
 14471                           ;tmr2.c: 174: {
 14472                           ;tmr2.c: 175: TMR2_InterruptHandler();
 14473  0104  0862               	movf	(_TMR2_InterruptHandler+1)^(0+128),w
 14474  0105  008A               	movwf	10
 14475  0106  0861               	movf	_TMR2_InterruptHandler^(0+128),w
 14476  0107  000A               	callw
 14477  0108  3180               	pagesel	$
 14478  0109  0008               	return
 14479  010A                     __end_of_TMR2_ISR:	
 14480                           
 14481                           	psect	text66
 14482  0121                     __ptext66:	
 14483 ;; *************** function _TMR2_DefaultInterruptHandler *****************
 14484 ;; Defined at:
 14485 ;;		line 184 in file "mcc_generated_files/tmr2.c"
 14486 ;; Parameters:    Size  Location     Type
 14487 ;;		None
 14488 ;; Auto vars:     Size  Location     Type
 14489 ;;		None
 14490 ;; Return value:  Size  Location     Type
 14491 ;;                  1    wreg      void 
 14492 ;; Registers used:
 14493 ;;		None
 14494 ;; Tracked objects:
 14495 ;;		On entry : 1F/1
 14496 ;;		On exit  : 1F/1
 14497 ;;		Unchanged: 1F/0
 14498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14503 ;;Total ram usage:        0 bytes
 14504 ;; Hardware stack levels used:    1
 14505 ;; This function calls:
 14506 ;;		Nothing
 14507 ;; This function is called by:
 14508 ;;		_TMR2_Initialize
 14509 ;;		_TMR2_ISR
 14510 ;; This function uses a non-reentrant model
 14511 ;;
 14512                           
 14513                           
 14514                           ;psect for function _TMR2_DefaultInterruptHandler
 14515  0121                     _TMR2_DefaultInterruptHandler:	
 14516                           
 14517                           ;incstack = 0
 14518                           ; Regs used in _TMR2_DefaultInterruptHandler: []
 14519  0121  0008               	return
 14520  0122                     __end_of_TMR2_DefaultInterruptHandler:	
 14521                           
 14522                           	psect	text67
 14523  0036                     __ptext67:	
 14524 ;; *************** function _blink *****************
 14525 ;; Defined at:
 14526 ;;		line 277 in file "main.c"
 14527 ;; Parameters:    Size  Location     Type
 14528 ;;		None
 14529 ;; Auto vars:     Size  Location     Type
 14530 ;;		None
 14531 ;; Return value:  Size  Location     Type
 14532 ;;                  1    wreg      void 
 14533 ;; Registers used:
 14534 ;;		wreg, status,2, status,0, pclath, cstack
 14535 ;; Tracked objects:
 14536 ;;		On entry : 1F/1
 14537 ;;		On exit  : 1E/0
 14538 ;;		Unchanged: 0/0
 14539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14544 ;;Total ram usage:        0 bytes
 14545 ;; Hardware stack levels used:    1
 14546 ;; Hardware stack levels required when called:    1
 14547 ;; This function calls:
 14548 ;;		i1_SetIndication
 14549 ;; This function is called by:
 14550 ;;		_main
 14551 ;;		_TMR2_ISR
 14552 ;; This function uses a non-reentrant model
 14553 ;;
 14554                           
 14555                           
 14556                           ;psect for function _blink
 14557  0036                     _blink:	
 14558                           
 14559                           ;main.c: 278: SetIndication(!indStatus);
 14560                           
 14561                           ;incstack = 0
 14562                           ; Regs used in _blink: [wreg+status,2+status,0+pclath+cstack]
 14563  0036  084E               	movf	_indStatus^(0+128),w
 14564  0037  1D03               	btfss	3,2
 14565  0038  283B               	goto	u233_20
 14566  0039  3001               	movlw	1
 14567  003A  283C               	goto	u234_20
 14568  003B                     u233_20:	
 14569  003B  3000               	movlw	0
 14570  003C                     u234_20:	
 14571  003C  203E               	fcall	i1_SetIndication
 14572  003D  0008               	return
 14573  003E                     __end_of_blink:	
 14574  003E                     __ptext68:	
 14575 ;; *************** function i1_SetIndication *****************
 14576 ;; Defined at:
 14577 ;;		line 79 in file "main.c"
 14578 ;; Parameters:    Size  Location     Type
 14579 ;;  set             1    wreg     unsigned char 
 14580 ;; Auto vars:     Size  Location     Type
 14581 ;;  set             1    0[COMMON] unsigned char 
 14582 ;; Return value:  Size  Location     Type
 14583 ;;                  1    wreg      void 
 14584 ;; Registers used:
 14585 ;;		wreg, status,0
 14586 ;; Tracked objects:
 14587 ;;		On entry : 1F/1
 14588 ;;		On exit  : 1E/0
 14589 ;;		Unchanged: 0/0
 14590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14592 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14594 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14595 ;;Total ram usage:        1 bytes
 14596 ;; Hardware stack levels used:    1
 14597 ;; This function calls:
 14598 ;;		Nothing
 14599 ;; This function is called by:
 14600 ;;		_blink
 14601 ;; This function uses a non-reentrant model
 14602 ;;
 14603                           
 14604                           
 14605                           ;psect for function i1_SetIndication
 14606  003E                     i1_SetIndication:	
 14607                           
 14608                           ;incstack = 0
 14609                           ; Regs used in i1_SetIndication: [wreg+status,0]
 14610                           ;i1SetIndication@set stored from wreg
 14611  003E  00F0               	movwf	i1SetIndication@set
 14612                           
 14613                           ;main.c: 80: indStatus = set;
 14614  003F  0870               	movf	i1SetIndication@set,w
 14615  0040  00CE               	movwf	_indStatus^(0+128)
 14616                           
 14617                           ;main.c: 82: if (UID & 1) {
 14618  0041  1C69               	btfss	_UID^(0+128),0
 14619  0042  2849               	goto	i1l3098
 14620                           
 14621                           ;main.c: 83: LATAbits.LATA4 = set;
 14622  0043  0C70               	rrf	i1SetIndication@set,w
 14623  0044  0020               	movlb	0	; select bank0
 14624  0045  1C03               	skipc
 14625  0046  1216               	bcf	22,4	;volatile
 14626  0047  1803               	skipnc
 14627  0048  1616               	bsf	22,4	;volatile
 14628  0049                     i1l3098:	
 14629                           
 14630                           ;main.c: 84: }
 14631                           ;main.c: 85: if (UID & 1 << 1) {
 14632  0049  0021               	movlb	1	; select bank1
 14633  004A  1CE9               	btfss	_UID^(0+128),1
 14634  004B  2852               	goto	i1l3102
 14635                           
 14636                           ;main.c: 86: LATAbits.LATA5 = set;
 14637  004C  0C70               	rrf	i1SetIndication@set,w
 14638  004D  0020               	movlb	0	; select bank0
 14639  004E  1C03               	skipc
 14640  004F  1296               	bcf	22,5	;volatile
 14641  0050  1803               	skipnc
 14642  0051  1696               	bsf	22,5	;volatile
 14643  0052                     i1l3102:	
 14644                           
 14645                           ;main.c: 87: }
 14646                           ;main.c: 88: if (UID & 1 << 2) {
 14647  0052  0021               	movlb	1	; select bank1
 14648  0053  1D69               	btfss	_UID^(0+128),2
 14649  0054  285B               	goto	i1l3106
 14650                           
 14651                           ;main.c: 89: LATAbits.LATA6 = set;
 14652  0055  0C70               	rrf	i1SetIndication@set,w
 14653  0056  0020               	movlb	0	; select bank0
 14654  0057  1C03               	skipc
 14655  0058  1316               	bcf	22,6	;volatile
 14656  0059  1803               	skipnc
 14657  005A  1716               	bsf	22,6	;volatile
 14658  005B                     i1l3106:	
 14659                           
 14660                           ;main.c: 90: }
 14661                           ;main.c: 91: if (UID & 1 << 3) {
 14662  005B  0021               	movlb	1	; select bank1
 14663  005C  1DE9               	btfss	_UID^(0+128),3
 14664  005D  0008               	return
 14665                           
 14666                           ;main.c: 92: LATAbits.LATA7 = set;
 14667  005E  0C70               	rrf	i1SetIndication@set,w
 14668  005F  2860               	ljmp	PL24	;call to abstracted procedure
 14669  0060                     __end_ofi1_SetIndication:	
 14670  0060                     PL24:	
 14671  0060  0020               	movlb	0	; select bank0
 14672  0061  1C03               	skipc
 14673  0062  1396               	bcf	22,7	;volatile
 14674  0063  1803               	skipnc
 14675  0064  1796               	bsf	22,7	;volatile
 14676  0065  0008               	return
 14677  0066                     __end_ofPL24:	
 14678                           
 14679                           	psect	text69
 14680  00A0                     __ptext69:	
 14681 ;; *************** function _EUSART_Transmit_ISR *****************
 14682 ;; Defined at:
 14683 ;;		line 173 in file "mcc_generated_files/eusart.c"
 14684 ;; Parameters:    Size  Location     Type
 14685 ;;		None
 14686 ;; Auto vars:     Size  Location     Type
 14687 ;;		None
 14688 ;; Return value:  Size  Location     Type
 14689 ;;                  1    wreg      void 
 14690 ;; Registers used:
 14691 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14692 ;; Tracked objects:
 14693 ;;		On entry : 1F/1
 14694 ;;		On exit  : 10/0
 14695 ;;		Unchanged: 0/0
 14696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14701 ;;Total ram usage:        0 bytes
 14702 ;; Hardware stack levels used:    1
 14703 ;; This function calls:
 14704 ;;		Nothing
 14705 ;; This function is called by:
 14706 ;;		_EUSART_Initialize
 14707 ;;		_INTERRUPT_InterruptManager
 14708 ;; This function uses a non-reentrant model
 14709 ;;
 14710                           
 14711                           
 14712                           ;psect for function _EUSART_Transmit_ISR
 14713  00A0                     _EUSART_Transmit_ISR:	
 14714                           
 14715                           ;eusart.c: 177: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 14716                           
 14717                           ;incstack = 0
 14718                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 14719  00A0  3008               	movlw	8
 14720  00A1  026B               	subwf	_eusartTxBufferRemaining^(0+128),w
 14721  00A2  1803               	skipnc
 14722  00A3  28B5               	goto	i1l162
 14723                           
 14724                           ;eusart.c: 178: {
 14725                           ;eusart.c: 179: TX1REG = eusartTxBuffer[eusartTxTail++];
 14726  00A4  0020               	movlb	0	; select bank0
 14727  00A5  086F               	movf	_eusartTxTail,w
 14728  00A6  3EC6               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
 14729  00A7  0086               	movwf	6
 14730  00A8  0187               	clrf	7
 14731  00A9  0801               	movf	1,w
 14732  00AA  0022               	movlb	2	; select bank2
 14733  00AB  009A               	movwf	26	;volatile
 14734  00AC  0020               	movlb	0	; select bank0
 14735  00AD  0AEF               	incf	_eusartTxTail,f	;volatile
 14736                           
 14737                           ;eusart.c: 180: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 14738  00AE  3008               	movlw	8
 14739  00AF  026F               	subwf	_eusartTxTail,w
 14740  00B0  1803               	btfsc	3,0
 14741                           
 14742                           ;eusart.c: 181: {
 14743                           ;eusart.c: 182: eusartTxTail = 0;
 14744  00B1  01EF               	clrf	_eusartTxTail	;volatile
 14745                           
 14746                           ;eusart.c: 183: }
 14747                           ;eusart.c: 184: eusartTxBufferRemaining++;
 14748  00B2  0021               	movlb	1	; select bank1
 14749  00B3  0AEB               	incf	_eusartTxBufferRemaining^(0+128),f	;volatile
 14750                           
 14751                           ;eusart.c: 185: }
 14752  00B4  0008               	return
 14753  00B5                     i1l162:	
 14754                           
 14755                           ;eusart.c: 186: else
 14756                           ;eusart.c: 187: {
 14757                           ;eusart.c: 188: PIE3bits.TXIE = 0;
 14758  00B5  002E               	movlb	14	; select bank14
 14759  00B6  1219               	bcf	25,4	;volatile
 14760  00B7  0008               	return
 14761  00B8                     __end_of_EUSART_Transmit_ISR:	
 14762                           
 14763                           	psect	text70
 14764  00CF                     __ptext70:	
 14765 ;; *************** function _EUSART_Receive_ISR *****************
 14766 ;; Defined at:
 14767 ;;		line 192 in file "mcc_generated_files/eusart.c"
 14768 ;; Parameters:    Size  Location     Type
 14769 ;;		None
 14770 ;; Auto vars:     Size  Location     Type
 14771 ;;		None
 14772 ;; Return value:  Size  Location     Type
 14773 ;;                  1    wreg      void 
 14774 ;; Registers used:
 14775 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14776 ;; Tracked objects:
 14777 ;;		On entry : 1F/1
 14778 ;;		On exit  : 1F/1
 14779 ;;		Unchanged: 0/0
 14780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14785 ;;Total ram usage:        0 bytes
 14786 ;; Hardware stack levels used:    1
 14787 ;; This function calls:
 14788 ;;		Nothing
 14789 ;; This function is called by:
 14790 ;;		_EUSART_Initialize
 14791 ;;		_INTERRUPT_InterruptManager
 14792 ;; This function uses a non-reentrant model
 14793 ;;
 14794                           
 14795                           
 14796                           ;psect for function _EUSART_Receive_ISR
 14797  00CF                     _EUSART_Receive_ISR:	
 14798                           
 14799                           ;eusart.c: 195: if(1 == RC1STAbits.OERR)
 14800                           
 14801                           ;incstack = 0
 14802                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 14803  00CF  0022               	movlb	2	; select bank2
 14804  00D0  1C9D               	btfss	29,1	;volatile
 14805  00D1  28D4               	goto	i1l3340
 14806                           
 14807                           ;eusart.c: 196: {
 14808                           ;eusart.c: 199: RC1STAbits.CREN = 0;
 14809  00D2  121D               	bcf	29,4	;volatile
 14810                           
 14811                           ;eusart.c: 200: RC1STAbits.CREN = 1;
 14812  00D3  161D               	bsf	29,4	;volatile
 14813  00D4                     i1l3340:	
 14814                           
 14815                           ;eusart.c: 201: }
 14816                           ;eusart.c: 204: eusartRxBuffer[eusartRxHead++] = RC1REG;
 14817  00D4  0020               	movlb	0	; select bank0
 14818  00D5  086E               	movf	_eusartRxHead,w
 14819  00D6  3EBE               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
 14820  00D7  0086               	movwf	6
 14821  00D8  0187               	clrf	7
 14822  00D9  0022               	movlb	2	; select bank2
 14823  00DA  0819               	movf	25,w	;volatile
 14824  00DB  0081               	movwf	1
 14825  00DC  0020               	movlb	0	; select bank0
 14826  00DD  0AEE               	incf	_eusartRxHead,f	;volatile
 14827                           
 14828                           ;eusart.c: 205: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 14829  00DE  3008               	movlw	8
 14830  00DF  026E               	subwf	_eusartRxHead,w
 14831  00E0  1803               	btfsc	3,0
 14832                           
 14833                           ;eusart.c: 206: {
 14834                           ;eusart.c: 207: eusartRxHead = 0;
 14835  00E1  01EE               	clrf	_eusartRxHead	;volatile
 14836                           
 14837                           ;eusart.c: 208: }
 14838                           ;eusart.c: 209: eusartRxCount++;
 14839  00E2  0021               	movlb	1	; select bank1
 14840  00E3  0AD1               	incf	_eusartRxCount^(0+128),f	;volatile
 14841  00E4  0008               	return
 14842  00E5                     __end_of_EUSART_Receive_ISR:	
 14843  007E                     btemp	set	126	;btemp
 14844  007E                     int$flags	set	126
 14845  007E                     wtemp0	set	126


Data Sizes:
    Strings     719
    Constant    69
    Data        43
    BSS         24
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     78      80
    BANK1            80     14      76
    BANK2            80      0      13
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    S572$4$0	PTR void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    S572$5$0	PTR void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_33(CODE[6]), STR_24(CODE[8]), STR_21(CODE[7]), errStr(BANK1[4]), 
		 -> failedStr(BANK1[7]), STR_18(CODE[5]), STR_16(CODE[7]), STR_14(CODE[8]), 
		 -> openStr(CODE[5]), STR_12(CODE[6]), hardRebootStr(CODE[6]), softRebootStr(CODE[7]), 
		 -> aokStr(CODE[4]), endStr(CODE[5]), cmdStr(CODE[4]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_33(CODE[6]), STR_24(CODE[8]), STR_21(CODE[7]), errStr(BANK1[4]), 
		 -> failedStr(BANK1[7]), STR_18(CODE[5]), STR_16(CODE[7]), STR_14(CODE[8]), 
		 -> openStr(CODE[5]), STR_12(CODE[6]), hardRebootStr(CODE[6]), softRebootStr(CODE[7]), 
		 -> aokStr(CODE[4]), endStr(CODE[5]), cmdStr(CODE[4]), 

    sprintf@cp	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_36(CODE[7]), sprintf@c(BANK0[1]), STR_35(CODE[10]), STR_34(CODE[14]), 
		 -> STR_23(CODE[5]), STR_22(CODE[12]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_30(CODE[19]), STR_29(CODE[25]), STR_27(CODE[11]), STR_26(CODE[14]), 
		 -> STR_25(CODE[10]), STR_20(CODE[13]), STR_13(CODE[13]), STR_9(CODE[19]), 
		 -> STR_8(CODE[25]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 40
		 -> Knock@knockString(BANK1[10]), Validate@valString(BANK1[13]), Pair@pairString(BANK1[9]), WiFly_SendCMD_DoubleArg@txBuffer(BANK0[40]), 
		 -> WiFly_SendCMD_SingleArg@txBuffer(BANK0[40]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    connect_network@ssid	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_34(CODE[14]), 

    connect_network@passwd	PTR const unsigned char  size(2) Largest target is 10
		 -> STR_35(CODE[10]), 

    send_message@message	PTR const unsigned char  size(1) Largest target is 13
		 -> Knock@knockString(BANK1[10]), Validate@valString(BANK1[13]), Pair@pairString(BANK1[9]), 

    WaitResponse@chkString	PTR const unsigned char  size(2) Largest target is 8
		 -> STR_24(CODE[8]), STR_21(CODE[7]), 

    connect_socket@port	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_23(CODE[5]), 

    connect_socket@addr	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[12]), 

    CheckResponse@chkString3	PTR const unsigned char  size(1) Largest target is 4
		 -> errStr(BANK1[4]), 

    CheckResponse@chkString2	PTR const unsigned char  size(1) Largest target is 7
		 -> failedStr(BANK1[7]), 

    CheckResponse@chkString1	PTR const unsigned char  size(2) Largest target is 5
		 -> openStr(CODE[5]), 

    WiFly_SendCMD@cmd	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_31(CODE[18]), STR_28(CODE[16]), STR_10(CODE[18]), STR_7(CODE[16]), 
		 -> STR_6(CODE[21]), 

    WiFly_SendCMD_DoubleArg@arg2	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_23(CODE[5]), 

    WiFly_SendCMD_DoubleArg@arg1	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_22(CODE[12]), 

    WiFly_SendCMD_DoubleArg@cmdFormat	PTR const unsigned char  size(2) Largest target is 13
		 -> STR_20(CODE[13]), STR_13(CODE[13]), 

    WiFly_SendCMD_SingleArg@arg	PTR const unsigned char  size(2) Largest target is 14
		 -> STR_35(CODE[10]), STR_34(CODE[14]), 

    WiFly_SendCMD_SingleArg@cmdFormat	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_30(CODE[19]), STR_29(CODE[25]), STR_9(CODE[19]), STR_8(CODE[25]), 

    WiFly_CheckRecv@chkString	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_33(CODE[6]), openStr(CODE[5]), STR_12(CODE[6]), hardRebootStr(CODE[6]), 
		 -> softRebootStr(CODE[7]), aokStr(CODE[4]), endStr(CODE[5]), cmdStr(CODE[4]), 

    WiFly_SendString@sendString	PTR const unsigned char  size(2) Largest target is 387
		 -> STR_32(CODE[21]), STR_31(CODE[18]), STR_28(CODE[16]), Knock@knockString(BANK1[10]), 
		 -> Validate@valString(BANK1[13]), Pair@pairString(BANK1[9]), STR_19(CODE[387]), STR_17(CODE[9]), 
		 -> STR_15(CODE[14]), STR_11(CODE[21]), STR_10(CODE[18]), STR_7(CODE[16]), 
		 -> STR_6(CODE[21]), STR_5(CODE[16]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> STR_2(CODE[7]), 

    WiFly_Send@command	PTR unsigned char  size(2) Largest target is 387
		 -> STR_32(CODE[21]), STR_31(CODE[18]), STR_28(CODE[16]), Knock@knockString(BANK1[10]), 
		 -> Validate@valString(BANK1[13]), Pair@pairString(BANK1[9]), STR_19(CODE[387]), STR_17(CODE[9]), 
		 -> STR_15(CODE[14]), STR_11(CODE[21]), STR_10(CODE[18]), STR_7(CODE[16]), 
		 -> STR_6(CODE[21]), STR_5(CODE[16]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> WiFly_SendCMD_DoubleArg@txBuffer(BANK0[40]), WiFly_SendCMD_SingleArg@txBuffer(BANK0[40]), STR_2(CODE[7]), STR_1(CODE[4]), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> blink(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> blink(), TMR2_DefaultInterruptHandler(), Absolute function(), 

    S572$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    uart.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    S572$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    uart.TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    S572$TransmitReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_is_tx_ready(), 

    uart.TransmitReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_is_tx_ready(), 

    S572$TransmitDone	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_is_tx_done(), 

    uart.TransmitDone	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_is_tx_done(), 

    S572$SetTxISR	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> EUSART_SetTxInterruptHandler(), 

    uart.SetTxISR	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> EUSART_SetTxInterruptHandler(), 

    S572$SetRxISR	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> EUSART_SetRxInterruptHandler(), 

    uart.SetRxISR	PTR FTN(PTR void ,)void  size(2) Largest target is 1
		 -> EUSART_SetRxInterruptHandler(), 

    S572$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    uart.RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    S572$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    uart.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    S572$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    uart.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S572$DataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_is_rx_ready(), 

    uart.DataReady	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_is_rx_ready(), 

    EUSART_SetRxInterruptHandler@handler	PTR void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@handler	PTR void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    TMR4_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> setFlag(), TMR4_DefaultInterruptHandler(), 

    TMR4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> setFlag(), Absolute function(), TMR4_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _TMR4_Initialize->_TMR4_SetInterruptHandler
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _WiFly_CheckInCMD->_WiFly_EnterCMDMode
    _WiFly_EnterCMDMode->_WiFly_CheckRecv
    _WiFly_CheckRecv->_strlen
    _CheckResponse->_strlen
    _WiFly_SendString->_WiFly_Send
    _WiFly_Send->_EUSART_Write
    _Clear_RX_Buffer->_EUSART_Read
    _get_response->_WaitResponse
    _goto_mode->_SetIndication
    _WaitResponse->_strlen
    _WiFly_ReadChar->_EUSART_Read

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _blink->i1_SetIndication

Critical Paths under _main in BANK0

    _main->_Pair
    _main->_Validate
    _connect_network->_WiFly_SendCMD_SingleArg
    _WiFly_SendCMD_SingleArg->_sprintf
    _WiFly_FactoryReset->_WiFly_SendCMD
    _WiFly_SendCMD->_WiFly_CheckRecv
    _WiFly_RebootCMD->_WiFly_CheckRecv
    _Validate->_send_message
    _Pair->_send_message
    _Knock->_send_message
    _send_message->_connect_socket
    _connect_socket->_WiFly_SendCMD_DoubleArg
    _WiFly_SendCMD_DoubleArg->_sprintf
    _sprintf->___lwmod
    _WiFly_EnterCMDMode->_WiFly_CheckRecv
    _get_response->_WaitResponse

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_Validate

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  116105
                              _Knock
                               _Pair
                  _SYSTEM_Initialize
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
           _TMR4_SetInterruptHandler
                     _TMR4_StopTimer
                           _Validate
                 _WiFly_FactoryReset
                    _connect_network
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (1) _eeprom_read                                          1     1      0      22
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _connect_network                                      4     0      4   41185
                                             70 BANK0      4     0      4
                    _WiFly_CheckRecv
                 _WiFly_FactoryReset
                   _WiFly_SaveConfig
                      _WiFly_SendCMD
            _WiFly_SendCMD_SingleArg
                   _WiFly_SendString
 ---------------------------------------------------------------------------------
 (2) _WiFly_SendCMD_SingleArg                             44    40      4    9433
                                             26 BANK0     44    40      4
                    _Clear_RX_Buffer
                   _WiFly_CheckInCMD
                    _WiFly_CheckRecv
                         _WiFly_Send
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _WiFly_FactoryReset                                   2     2      0   18068
                                              6 BANK0      2     2      0
                    _WiFly_CheckRecv
                    _WiFly_RebootCMD
                   _WiFly_SaveConfig
                      _WiFly_SendCMD
                   _WiFly_SendString
 ---------------------------------------------------------------------------------
 (2) _WiFly_SendCMD                                        2     0      2    4976
                                              4 BANK0      2     0      2
                   _WiFly_CheckInCMD
                    _WiFly_CheckRecv
                   _WiFly_SendString
 ---------------------------------------------------------------------------------
 (2) _WiFly_SaveConfig                                     0     0      0    5803
                    _WiFly_RebootCMD
                   _WiFly_SendString
 ---------------------------------------------------------------------------------
 (3) _WiFly_RebootCMD                                      0     0      0    4600
                   _WiFly_CheckInCMD
                    _WiFly_CheckRecv
                   _WiFly_SendString
 ---------------------------------------------------------------------------------
 (1) _Validate                                            15    15      0   18661
                                             77 BANK0      1     1      0
                                              0 BANK1     14    14      0
                    _TMR4_StartTimer
                       _get_response
                          _goto_mode
                       _send_message
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     495
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR2_Initialize
                    _TMR4_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR4_Initialize                                      0     0      0     150
           _TMR4_SetInterruptHandler
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (1) _TMR4_SetInterruptHandler                             2     0      2     150
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0     150
           _TMR2_SetInterruptHandler
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (1) _TMR2_SetInterruptHandler                             2     0      2     150
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               1     1      0      23
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     172
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      86
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      86
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Pair                                                11    11      0   18744
                                             77 BANK0      1     1      0
                                              0 BANK1     10    10      0
                     _WiFly_ReadChar
                       _eeprom_write
                       _get_response
                          _goto_mode
                       _send_message
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _eeprom_write                                         2     1      1     108
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _Knock                                               13    13      0   18630
                                              0 BANK1     13    13      0
                _RELAY_RL1_Disengage
                   _RELAY_RL1_Engage
                     _TMR4_StopTimer
                       _get_response
                          _goto_mode
                       _send_message
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _send_message                                         1     1      0   12107
                                             76 BANK0      1     1      0
                    _Clear_RX_Buffer
                       _WaitResponse
                   _WiFly_SendString
                     _connect_socket
                          _goto_mode
 ---------------------------------------------------------------------------------
 (3) _connect_socket                                       4     0      4    9621
                                             72 BANK0      4     0      4
                      _CheckResponse
            _WiFly_SendCMD_DoubleArg
 ---------------------------------------------------------------------------------
 (4) _WiFly_SendCMD_DoubleArg                             46    40      6    7844
                                             26 BANK0     46    40      6
                    _Clear_RX_Buffer
                   _WiFly_CheckInCMD
                         _WiFly_Send
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             29    23      6    4879
                                              1 BANK0     25    19      6
                             ___bmul
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     220
                                              1 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     386
                                              8 COMMON     4     0      4
                                              0 BANK0      1     1      0
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     418
                                              1 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               3     2      1     156
                                              1 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (3) _WiFly_CheckInCMD                                     0     0      0    1911
                 _WiFly_EnterCMDMode
 ---------------------------------------------------------------------------------
 (4) _WiFly_EnterCMDMode                                   2     2      0    1911
                                              9 COMMON     2     2      0
                    _Clear_RX_Buffer
                    _WiFly_CheckRecv
                         _WiFly_Send
 ---------------------------------------------------------------------------------
 (3) _WiFly_CheckRecv                                      7     5      2    1486
                                              6 COMMON     3     1      2
                                              0 BANK0      4     4      0
                        _EUSART_Read *
                 _EUSART_is_rx_ready
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _CheckResponse                                       18    14      4    1561
                                              6 COMMON     5     1      4
                                              0 BANK0     13    13      0
                     _WiFly_ReadChar
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _WiFly_SendString                                     2     0      2    1203
                                              5 COMMON     2     0      2
                    _Clear_RX_Buffer
                         _WiFly_Send
 ---------------------------------------------------------------------------------
 (3) _WiFly_Send                                           3     1      2     388
                                              2 COMMON     3     1      2
                       _EUSART_Write *
 ---------------------------------------------------------------------------------
 (4) _EUSART_Write                                         1     0      1      87
                                              1 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (3) _Clear_RX_Buffer                                      0     0      0      37
                        _EUSART_Read *
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (2) _get_response                                         1     1      0    1249
                                              9 COMMON     1     1      0
                       _WaitResponse
                     _WiFly_ReadChar
                          _goto_mode
 ---------------------------------------------------------------------------------
 (3) _goto_mode                                            1     1      0     186
                                              2 COMMON     1     1      0
                    _ClearIndicators
                      _SetIndication
                    _TMR2_StartTimer
                     _TMR2_StopTimer
                    _TMR4_StartTimer
                     _TMR4_StopTimer
 ---------------------------------------------------------------------------------
 (4) _TMR4_StopTimer                                       0     0      0       0
                          _TMR4_Stop
 ---------------------------------------------------------------------------------
 (5) _TMR4_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR4_StartTimer                                      0     0      0       0
                         _TMR4_Start
 ---------------------------------------------------------------------------------
 (5) _TMR4_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (5) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (5) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _SetIndication                                        1     1      0     155
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _ClearIndicators                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _WaitResponse                                         7     5      2     930
                                              6 COMMON     3     1      2
                                              0 BANK0      4     4      0
                     _WiFly_ReadChar
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _strlen                                               5     3      2     572
                                              1 COMMON     5     3      2
 ---------------------------------------------------------------------------------
 (5) _WiFly_ReadChar                                       0     0      0      37
                        _EUSART_Read *
                 _EUSART_is_rx_ready
 ---------------------------------------------------------------------------------
 (4) _EUSART_is_rx_ready                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _EUSART_Read                                          1     1      0      37
                                              1 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _RELAY_RL1_Engage                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _RELAY_RL1_Disengage                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _INTERRUPT_InterruptManager                           0     0      0     110
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
                           _TMR2_ISR
                           _TMR4_ISR
 ---------------------------------------------------------------------------------
 (10) _TMR4_ISR                                            0     0      0       0
                   Absolute function *
       _TMR4_DefaultInterruptHandler *
                            _setFlag *
 ---------------------------------------------------------------------------------
 (11) _setFlag                                             0     0      0       0
                   i1_TMR4_StopTimer
 ---------------------------------------------------------------------------------
 (12) i1_TMR4_StopTimer                                    0     0      0       0
                        i1_TMR4_Stop
 ---------------------------------------------------------------------------------
 (13) i1_TMR4_Stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _TMR4_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _TMR2_ISR                                            0     0      0     110
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                              _blink *
 ---------------------------------------------------------------------------------
 (11) _blink                                               0     0      0     110
                    i1_SetIndication
 ---------------------------------------------------------------------------------
 (12) i1_SetIndication                                     1     1      0     110
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (11) _TMR2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (11) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _EUSART_Receive_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Knock
     _RELAY_RL1_Disengage
     _RELAY_RL1_Engage
     _TMR4_StopTimer
       _TMR4_Stop
     _get_response
       _WaitResponse
         _WiFly_ReadChar
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _strlen
       _WiFly_ReadChar
         _EUSART_Read *
         _EUSART_is_rx_ready *
       _goto_mode
         _ClearIndicators
         _SetIndication
         _TMR2_StartTimer
           _TMR2_Start
         _TMR2_StopTimer
           _TMR2_Stop
         _TMR4_StartTimer
           _TMR4_Start
         _TMR4_StopTimer
           _TMR4_Stop
     _goto_mode
       _ClearIndicators
       _SetIndication
       _TMR2_StartTimer
         _TMR2_Start
       _TMR2_StopTimer
         _TMR2_Stop
       _TMR4_StartTimer
         _TMR4_Start
       _TMR4_StopTimer
         _TMR4_Stop
     _send_message
       _Clear_RX_Buffer
         _EUSART_Read *
         _EUSART_is_rx_ready *
       _WaitResponse
         _WiFly_ReadChar
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _strlen
       _WiFly_SendString
         _Clear_RX_Buffer
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _WiFly_Send
           _EUSART_Write *
       _connect_socket
         _CheckResponse
           _WiFly_ReadChar
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _strlen
         _WiFly_SendCMD_DoubleArg
           _Clear_RX_Buffer
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _WiFly_CheckInCMD
             _WiFly_EnterCMDMode
               _Clear_RX_Buffer
                 _EUSART_Read *
                 _EUSART_is_rx_ready *
               _WiFly_CheckRecv
                 _EUSART_Read *
                 _EUSART_is_rx_ready *
                 _strlen *
               _WiFly_Send
                 _EUSART_Write *
           _WiFly_Send
             _EUSART_Write *
           _sprintf
             ___bmul
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _goto_mode
         _ClearIndicators
         _SetIndication
         _TMR2_StartTimer
           _TMR2_Start
         _TMR2_StopTimer
           _TMR2_Stop
         _TMR4_StartTimer
           _TMR4_Start
         _TMR4_StopTimer
           _TMR4_Stop
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _Pair
     _WiFly_ReadChar
       _EUSART_Read *
       _EUSART_is_rx_ready *
     _eeprom_write
     _get_response
       _WaitResponse
         _WiFly_ReadChar
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _strlen
       _WiFly_ReadChar
         _EUSART_Read *
         _EUSART_is_rx_ready *
       _goto_mode
         _ClearIndicators
         _SetIndication
         _TMR2_StartTimer
           _TMR2_Start
         _TMR2_StopTimer
           _TMR2_Stop
         _TMR4_StartTimer
           _TMR4_Start
         _TMR4_StopTimer
           _TMR4_Stop
     _goto_mode
       _ClearIndicators
       _SetIndication
       _TMR2_StartTimer
         _TMR2_Start
       _TMR2_StopTimer
         _TMR2_Stop
       _TMR4_StartTimer
         _TMR4_Start
       _TMR4_StopTimer
         _TMR4_Stop
     _send_message
       _Clear_RX_Buffer
         _EUSART_Read *
         _EUSART_is_rx_ready *
       _WaitResponse
         _WiFly_ReadChar
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _strlen
       _WiFly_SendString
         _Clear_RX_Buffer
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _WiFly_Send
           _EUSART_Write *
       _connect_socket
         _CheckResponse
           _WiFly_ReadChar
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _strlen
         _WiFly_SendCMD_DoubleArg
           _Clear_RX_Buffer
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _WiFly_CheckInCMD
             _WiFly_EnterCMDMode
               _Clear_RX_Buffer
                 _EUSART_Read *
                 _EUSART_is_rx_ready *
               _WiFly_CheckRecv
                 _EUSART_Read *
                 _EUSART_is_rx_ready *
                 _strlen *
               _WiFly_Send
                 _EUSART_Write *
           _WiFly_Send
             _EUSART_Write *
           _sprintf
             ___bmul
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _goto_mode
         _ClearIndicators
         _SetIndication
         _TMR2_StartTimer
           _TMR2_Start
         _TMR2_StopTimer
           _TMR2_Stop
         _TMR4_StartTimer
           _TMR4_Start
         _TMR4_StopTimer
           _TMR4_Stop
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR2_Initialize
       _TMR2_SetInterruptHandler
       _TMR2_Start
     _TMR4_Initialize
       _TMR4_SetInterruptHandler
       _TMR4_Start
     _WWDT_Initialize
   _TMR2_SetInterruptHandler
   _TMR2_StartTimer
     _TMR2_Start
   _TMR4_SetInterruptHandler
   _TMR4_StopTimer
     _TMR4_Stop
   _Validate
     _TMR4_StartTimer
       _TMR4_Start
     _get_response
       _WaitResponse
         _WiFly_ReadChar
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _strlen
       _WiFly_ReadChar
         _EUSART_Read *
         _EUSART_is_rx_ready *
       _goto_mode
         _ClearIndicators
         _SetIndication
         _TMR2_StartTimer
           _TMR2_Start
         _TMR2_StopTimer
           _TMR2_Stop
         _TMR4_StartTimer
           _TMR4_Start
         _TMR4_StopTimer
           _TMR4_Stop
     _goto_mode
       _ClearIndicators
       _SetIndication
       _TMR2_StartTimer
         _TMR2_Start
       _TMR2_StopTimer
         _TMR2_Stop
       _TMR4_StartTimer
         _TMR4_Start
       _TMR4_StopTimer
         _TMR4_Stop
     _send_message
       _Clear_RX_Buffer
         _EUSART_Read *
         _EUSART_is_rx_ready *
       _WaitResponse
         _WiFly_ReadChar
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _strlen
       _WiFly_SendString
         _Clear_RX_Buffer
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _WiFly_Send
           _EUSART_Write *
       _connect_socket
         _CheckResponse
           _WiFly_ReadChar
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _strlen
         _WiFly_SendCMD_DoubleArg
           _Clear_RX_Buffer
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _WiFly_CheckInCMD
             _WiFly_EnterCMDMode
               _Clear_RX_Buffer
                 _EUSART_Read *
                 _EUSART_is_rx_ready *
               _WiFly_CheckRecv
                 _EUSART_Read *
                 _EUSART_is_rx_ready *
                 _strlen *
               _WiFly_Send
                 _EUSART_Write *
           _WiFly_Send
             _EUSART_Write *
           _sprintf
             ___bmul
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _isdigit
       _goto_mode
         _ClearIndicators
         _SetIndication
         _TMR2_StartTimer
           _TMR2_Start
         _TMR2_StopTimer
           _TMR2_Stop
         _TMR4_StartTimer
           _TMR4_Start
         _TMR4_StopTimer
           _TMR4_Stop
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       ___wmul
       _isdigit
   _WiFly_FactoryReset
     _WiFly_CheckRecv
       _EUSART_Read *
       _EUSART_is_rx_ready *
       _strlen *
     _WiFly_RebootCMD
       _WiFly_CheckInCMD
         _WiFly_EnterCMDMode
           _Clear_RX_Buffer
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _WiFly_CheckRecv
             _EUSART_Read *
             _EUSART_is_rx_ready *
             _strlen *
           _WiFly_Send
             _EUSART_Write *
       _WiFly_CheckRecv
         _EUSART_Read *
         _EUSART_is_rx_ready *
         _strlen *
       _WiFly_SendString
         _Clear_RX_Buffer
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _WiFly_Send
           _EUSART_Write *
     _WiFly_SaveConfig
       _WiFly_RebootCMD
         _WiFly_CheckInCMD
           _WiFly_EnterCMDMode
             _Clear_RX_Buffer
               _EUSART_Read *
               _EUSART_is_rx_ready *
             _WiFly_CheckRecv
               _EUSART_Read *
               _EUSART_is_rx_ready *
               _strlen *
             _WiFly_Send
               _EUSART_Write *
         _WiFly_CheckRecv
           _EUSART_Read *
           _EUSART_is_rx_ready *
           _strlen *
         _WiFly_SendString
           _Clear_RX_Buffer
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _WiFly_Send
             _EUSART_Write *
       _WiFly_SendString
         _Clear_RX_Buffer
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _WiFly_Send
           _EUSART_Write *
     _WiFly_SendCMD
       _WiFly_CheckInCMD
         _WiFly_EnterCMDMode
           _Clear_RX_Buffer
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _WiFly_CheckRecv
             _EUSART_Read *
             _EUSART_is_rx_ready *
             _strlen *
           _WiFly_Send
             _EUSART_Write *
       _WiFly_CheckRecv
         _EUSART_Read *
         _EUSART_is_rx_ready *
         _strlen *
       _WiFly_SendString
         _Clear_RX_Buffer
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _WiFly_Send
           _EUSART_Write *
     _WiFly_SendString
       _Clear_RX_Buffer
         _EUSART_Read *
         _EUSART_is_rx_ready *
       _WiFly_Send
         _EUSART_Write *
   _connect_network
     _WiFly_CheckRecv
       _EUSART_Read *
       _EUSART_is_rx_ready *
       _strlen *
     _WiFly_FactoryReset
       _WiFly_CheckRecv
         _EUSART_Read *
         _EUSART_is_rx_ready *
         _strlen *
       _WiFly_RebootCMD
         _WiFly_CheckInCMD
           _WiFly_EnterCMDMode
             _Clear_RX_Buffer
               _EUSART_Read *
               _EUSART_is_rx_ready *
             _WiFly_CheckRecv
               _EUSART_Read *
               _EUSART_is_rx_ready *
               _strlen *
             _WiFly_Send
               _EUSART_Write *
         _WiFly_CheckRecv
           _EUSART_Read *
           _EUSART_is_rx_ready *
           _strlen *
         _WiFly_SendString
           _Clear_RX_Buffer
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _WiFly_Send
             _EUSART_Write *
       _WiFly_SaveConfig
         _WiFly_RebootCMD
           _WiFly_CheckInCMD
             _WiFly_EnterCMDMode
               _Clear_RX_Buffer
                 _EUSART_Read *
                 _EUSART_is_rx_ready *
               _WiFly_CheckRecv
                 _EUSART_Read *
                 _EUSART_is_rx_ready *
                 _strlen *
               _WiFly_Send
                 _EUSART_Write *
           _WiFly_CheckRecv
             _EUSART_Read *
             _EUSART_is_rx_ready *
             _strlen *
           _WiFly_SendString
             _Clear_RX_Buffer
               _EUSART_Read *
               _EUSART_is_rx_ready *
             _WiFly_Send
               _EUSART_Write *
         _WiFly_SendString
           _Clear_RX_Buffer
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _WiFly_Send
             _EUSART_Write *
       _WiFly_SendCMD
         _WiFly_CheckInCMD
           _WiFly_EnterCMDMode
             _Clear_RX_Buffer
               _EUSART_Read *
               _EUSART_is_rx_ready *
             _WiFly_CheckRecv
               _EUSART_Read *
               _EUSART_is_rx_ready *
               _strlen *
             _WiFly_Send
               _EUSART_Write *
         _WiFly_CheckRecv
           _EUSART_Read *
           _EUSART_is_rx_ready *
           _strlen *
         _WiFly_SendString
           _Clear_RX_Buffer
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _WiFly_Send
             _EUSART_Write *
       _WiFly_SendString
         _Clear_RX_Buffer
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _WiFly_Send
           _EUSART_Write *
     _WiFly_SaveConfig
       _WiFly_RebootCMD
         _WiFly_CheckInCMD
           _WiFly_EnterCMDMode
             _Clear_RX_Buffer
               _EUSART_Read *
               _EUSART_is_rx_ready *
             _WiFly_CheckRecv
               _EUSART_Read *
               _EUSART_is_rx_ready *
               _strlen *
             _WiFly_Send
               _EUSART_Write *
         _WiFly_CheckRecv
           _EUSART_Read *
           _EUSART_is_rx_ready *
           _strlen *
         _WiFly_SendString
           _Clear_RX_Buffer
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _WiFly_Send
             _EUSART_Write *
       _WiFly_SendString
         _Clear_RX_Buffer
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _WiFly_Send
           _EUSART_Write *
     _WiFly_SendCMD
       _WiFly_CheckInCMD
         _WiFly_EnterCMDMode
           _Clear_RX_Buffer
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _WiFly_CheckRecv
             _EUSART_Read *
             _EUSART_is_rx_ready *
             _strlen *
           _WiFly_Send
             _EUSART_Write *
       _WiFly_CheckRecv
         _EUSART_Read *
         _EUSART_is_rx_ready *
         _strlen *
       _WiFly_SendString
         _Clear_RX_Buffer
           _EUSART_Read *
           _EUSART_is_rx_ready *
         _WiFly_Send
           _EUSART_Write *
     _WiFly_SendCMD_SingleArg
       _Clear_RX_Buffer
         _EUSART_Read *
         _EUSART_is_rx_ready *
       _WiFly_CheckInCMD
         _WiFly_EnterCMDMode
           _Clear_RX_Buffer
             _EUSART_Read *
             _EUSART_is_rx_ready *
           _WiFly_CheckRecv
             _EUSART_Read *
             _EUSART_is_rx_ready *
             _strlen *
           _WiFly_Send
             _EUSART_Write *
       _WiFly_CheckRecv
         _EUSART_Read *
         _EUSART_is_rx_ready *
         _strlen *
       _WiFly_Send
         _EUSART_Write *
       _sprintf
         ___bmul
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _isdigit
     _WiFly_SendString
       _Clear_RX_Buffer
         _EUSART_Read *
         _EUSART_is_rx_ready *
       _WiFly_Send
         _EUSART_Write *
   _eeprom_read

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
   _EUSART_Transmit_ISR *
   _TMR2_ISR *
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _blink *
       i1_SetIndication
   _TMR4_ISR *
     Absolute function(Fake) *
     _TMR4_DefaultInterruptHandler *
     _setFlag *
       i1_TMR4_StopTimer
         i1_TMR4_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      C       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4E      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      E      4C       7       95.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       D       9       16.3%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      B6      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      B6      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Sep 17 11:36:04 2017

           ?_EUSART_SetRxInterruptHandler 0071                          ??_WiFly_ReadChar 0072  
                __size_of_WWDT_Initialize 0006          __end_of_TMR2_SetInterruptHandler 0BDB  
                          ___bmul@product 0072                               __CFG_CP$OFF 0000  
                                      PL2 0F61                                        PL4 0F70  
                                      PL6 0F7D                                        PL8 0F89  
                                      _WR 40F1                             ?_get_response 0070  
                     ___wmul@multiplicand 0073                                       PL10 0F8F  
                                     PL20 0FC0                                       PL12 0F9B  
                                     PL30 0FD8                                       PL22 0FC6  
                                     PL14 0FA7                                       PL32 0FDD  
                                     PL24 0060                                       PL16 0FB1  
                                     PL26 0FCC                                       PL18 0FB8  
                                     PL28 0FD2                               __CFG_LVP$ON 0000  
                                     l156 008F                                       l840 09AB  
                                     l914 0D5C                                       l770 0B7D  
                                     l749 0A1A                                       l870 0C5C  
                                     l838 09BB                                       l783 0A4C  
                                     l919 0D70                                       l866 0C4D  
                                     l868 0C4F                                       l885 0D43  
                                     l966 0F1A                                       l887 0CAD  
                                     l992 0BCF                                       _GIE 005F  
                                     l988 0BBA                              __CFG_CPD$OFF 0000  
                                     _UID 00E9                         ??_WiFly_RebootCMD 007B  
     EUSART_SetRxInterruptHandler@handler 0071                           _TMR2_Initialize 0FE8  
                            __CFG_BORV$LO 0000                                       wreg 0009  
         __end_of_WiFly_SendCMD_DoubleArg 0BB4                    __end_of_connect_socket 0B9B  
                            ?_EUSART_Read 0070                              __CFG_ZCD$OFF 0000  
                                    l3126 0F3A                                      l2600 0EED  
                                    l2530 009D                                      l4130 0A46  
                                    l4060 0A5B                                      l2516 0084  
                                    l2612 0EBB                                      l4108 09F7  
                                    l4150 0959                                      l4142 094D  
                                    l4126 0A41                                      l4118 0A35  
                                    l3600 0E85                                      l3506 00B8  
                                    l3530 0B6B                                      l2642 0E7C  
                                    l2634 0E6D                                      l3604 0A64  
                                    l3532 0B76                                      l3540 0AE4  
                                    l2548 0E98                                      l3700 0D0E  
                                    l3620 0C50                                      l3606 0A6B  
                                    l3550 0905                                      l3542 08E1  
                                    l2646 0E80                                      l2590 0E5E  
                                    l3710 0D26                                      l3630 0C5F  
                                    l4190 09B1                                      l3552 0908  
                                    l3704 0D1A                                      l4184 09A6  
                                    l3546 08EF                                      l3554 090D  
                                    l3802 0DD4                                      l3810 0DE3  
                                    l3634 0C67                                      l3642 0C89  
                                    l3626 0C53                                      l3618 0C48  
                                    l4194 09B6                                      l4186 09A8  
                                    l3556 084C                                      l3580 0EDC  
                                    l2596 0EE7                                      l3820 0DED  
                                    l3732 0D53                                      l3708 0D1C  
                                    l3716 0D2E                                      l3590 0F37  
                                    l3910 0B15                                      l3814 0DE8  
                                    l3670 0CC1                                      l3654 0C96  
                                    l3592 0F31                                      l3576 0ED0  
                                    l3584 0EE0                                      l3728 0D51  
                                    l3672 0CCE                                      l3656 0CAB  
                                    l3594 0F34                                      l3922 0B33  
                                    l3930 0B3E                                      l3826 0DF6  
                                    l3842 0E36                                      l3682 0CF0  
                                    l3666 0CBF                                      l3658 0CAF  
                                    l3588 0F0E                                      l3924 0B35  
                                    l3916 0B27                                      l3908 0B12  
                                    l3836 0E28                                      l3828 0E0E  
                                    l3780 0DAC                                      l3764 0D84  
                                    l3692 0CF7                                      l3684 0CF2  
                                    l3852 0C37                                      l3918 0B29  
                                    l3846 0E46                                      l3838 0E30  
                                    l3774 0DA0                                      l3766 0D8C  
                                    l3854 0E4D                                      l3694 0D01  
                                    l3678 0CE3                                      l3872 0F29  
                                    l3936 0B56                                      l3792 0DC5  
                                    l3688 0CF5                                      l3962 0A09  
                                    l3794 0DC8                                      l3786 0DB8  
                                    l3892 0AD4                                      l3972 0A13  
                                    l3788 0DBB                                      l3868 089C  
                                    l3958 0EB2                                      l3896 0ADD  
                                    l3888 0ACB                                      l3976 0A15  
                                    l3968 0A0F                                      l3996 0A9F  
                                    l3988 0A9C                                      STR_1 1310  
                                    STR_2 12E1                                      STR_3 12A5  
                                    STR_4 12DA                                      STR_5 1220  
                                    STR_6 11B1                                      STR_7 1210  
                                    STR_8 1183                                      STR_9 11DA  
                                    _LATA 0016                                      _LATB 0017  
                                    u3015 0D6D                                      _LATC 0018  
                                    u2240 0C32                                      _LATD 0019  
                                    _LATE 001A                                      u3035 0D81  
                                    u2501 0F19                                      u1535 0E75  
                                    u3215 0E44                                      _T2PR 028D  
                                    u3315 0B44                                      u3420 09D2  
                                    u3325 0B4C                                      u3335 0B54  
                                    u3440 0A28                                      u3345 0B5C  
                                    _T4PR 0293                                      u3355 0B64  
                                    u2735 0914                                      u3480 093F  
                                    u3385 0AA5                                      u2905 0CE9  
                                    u2765 0ED6                                      u3557 0880  
                                    u3567 0969                                      u3577 0853  
                                    u3587 086B                                      u2895 0CDC  
                                    _WPUA 0F39                                      _WPUB 0F44  
                                    _WPUC 0F4F                            ??_eeprom_write 0072  
                                    _WPUD 0F5A                                      _WPUE 0F65  
                       ?_WiFly_SaveConfig 0070                                      _Pair 09C7  
                            __CFG_WRT$OFF 0000                             __CFG_FCMEN$ON 0000  
                        ?_ClearIndicators 0070                                      _main 0973  
                                    _mode 00D0                                      _uart 11C6  
                                    fsr0h 0005                                      fsr1h 0007  
                                    indf0 0000                                      fsr0l 0004  
                                    indf1 0001                                      fsr1l 0006  
                                    btemp 007E                        ??_WiFly_SaveConfig 007B  
                           __CFG_BOREN$ON 0000                         ?_WiFly_SendString 0075  
                                    start 0034                   CheckResponse@chkString1 0076  
                 CheckResponse@chkString2 0078                   CheckResponse@chkString3 0079  
                 __end_of_connect_network 08E1                        ??_WiFly_SendString 0077  
                           __CFG_CSWEN$ON 0000                         ___bmul@multiplier 0073  
                           __CFG_MCLRE$ON 0000                          ?_Clear_RX_Buffer 0070  
              ??_TMR4_SetInterruptHandler 0073                            ??_get_response 0079  
         __end_of_WiFly_SendCMD_SingleArg 0930                             ?_EUSART_Write 0071  
          __size_of_OSCILLATOR_Initialize 0009                                     ?_Pair 0070  
           __end_of_OSCILLATOR_Initialize 0BF5                                     ?_main 0070  
                                   STR_10 11ED                                     STR_11 119C  
                                   STR_20 125A                                     STR_12 12EE  
                                   STR_21 12CC                                     STR_13 125A  
                                   STR_30 11DA                                     STR_14 12B6  
                                   STR_22 1267                                     STR_31 11ED  
                                   STR_23 12FE                                     STR_15 124C  
                                   STR_32 119C                                     STR_24 12B6  
                                   STR_16 12D3                                     STR_33 12EE  
                                   STR_17 129C                                     STR_25 1292  
                                   STR_18 1303                                     STR_26 123E  
                                   STR_34 1230                                     STR_35 1288  
                                   STR_27 1273                                     STR_19 1000  
                                   STR_28 1210                                     STR_36 12C5  
                                   STR_29 1183                                     STR_37 11FF  
                                   _T2CON 028E                                     _T4CON 0294  
                                   _T2HLT 028F                                     _T4HLT 0295  
                          __CFG_DEBUG$OFF 0000                           __end_of___lwdiv 0E85  
                                   _T2TMR 028C                                     i1l162 00B5  
                                   _T2RST 0291                           __end_of___lwmod 0EE5  
                                   _T4TMR 0292                                     i1l640 0032  
                                   i1l632 0013                                     i1l634 0020  
                                   _T4RST 0297                                     i1l636 002A  
                                   _OSCEN 0891                                     _TRISA 0011  
                                   _TRISB 0012                                     _TRISC 0013  
                                   _TRISD 0014                                     _TRISE 0015  
                         _TMR4_Initialize 0EFA                                     _Knock 0930  
                        __end_of_TMR2_ISR 010A                           ?_connect_socket 0068  
                        __end_of_TMR4_ISR 00FE                                     _inCMD 00EA  
                                   _blink 0036                           __end_of_dpowers 1288  
                      __size_of_TMR2_Stop 0003                               ?_TMR2_Start 0070  
                      __size_of_TMR4_Stop 0003                           __end_of_isdigit 0E60  
                             ?_TMR4_Start 0070                           __end_of_setFlag 010F  
                         __end_of_openStr 12F9                                     pclath 000A  
             __size_of_WiFly_FactoryReset 0026                               Knock@F15440 00A0  
                                   status 0003                                     wtemp0 007E  
                         __end_of_sprintf 0E52                           _TMR2_StartTimer 0AB9  
                __end_ofi1_TMR4_StopTimer 0111                           __initialization 0826  
                            __end_of_Pair 09F9                  __size_ofi1_SetIndication 0022  
                            ?i1_TMR4_Stop 0070                              __end_of_main 09C7  
                            __end_of_uart 11DA                      CheckResponse@length1 0022  
                    CheckResponse@length2 0024                      CheckResponse@length3 0020  
                          ??_EUSART_Write 0072                        get_response@status 0079  
                 __end_of_TMR2_Initialize 0FFB               ?_INTERRUPT_InterruptManager 0070  
                                  ??_Pair 006D            ??_EUSART_SetRxInterruptHandler 0073  
                _TMR2_SetInterruptHandler 0BD5                                    ??_main 007C  
                       ??_WWDT_Initialize 0071                         ?_RELAY_RL1_Engage 0070  
                        __end_of_Validate 0A4C          WiFly_SendCMD_DoubleArg@cmdFormat 003A  
                      ??_RELAY_RL1_Engage 0071                                _WiFly_Send 0E98  
                                  ?_Knock 0070                                    ?_blink 0070  
                                  _ANSELA 0F38                                    _ANSELB 0F43  
                                  _ANSELC 0F4E                                    _ANSELD 0F59  
                                  _ANSELE 0F64                        __CFG_RSTOSC$HFINT1 0000  
              __end_of_EUSART_is_rx_ready 0ABF                                    _RC1REG 0119  
                                  _RC1PPS 0F21                                    _RC1STA 011D  
                                  i1l3102 0052                                    _ODCONA 0F3A  
                                  i1l3106 005B                                    _ODCONB 0F45  
                                  _ODCONC 0F50                                    _ODCOND 0F5B  
                                  _ODCONE 0F66                                    i1l3340 00D4  
                                  i1l3098 0049                                    u233_20 003B  
                                  u234_20 003C                                    _OSCFRQ 0893  
                                  _TX1REG 011A                                    _TX1STA 011E  
              WiFly_SendString@sendString 0075                           _TMR4_StartTimer 0AE3  
                          __CFG_PWRTE$OFF 0000                          ?_connect_network 0066  
                    __size_of_eeprom_read 000F                                    ___bmul 0EB9  
        __size_of_WiFly_SendCMD_DoubleArg 0019                           _WiFly_CheckRecv 08E1  
                                  ___wmul 0EE5                            __CFG_STVREN$ON 0000  
                       __end_of_TMR2_Stop 0F37                 __size_of_WiFly_CheckInCMD 0005  
                                  _cmdStr 130C                                    _aokStr 1308  
                       __end_of_TMR4_Stop 0F3A                                    _endStr 12F9  
                               ??___lwdiv 0075                                 ??___lwmod 007C  
                     __size_of_TMR2_Start 0003                          WiFly_SendCMD@cmd 0024  
                     _EUSART_Transmit_ISR 00A0                                    _errStr 00BA  
                     __size_of_TMR4_Start 0003                   __end_of_TMR4_Initialize 0F0E  
                  __size_of_WiFly_SendCMD 000C                      __end_of_eeprom_write 0BD5  
                     _RELAY_RL1_Disengage 0F26                                    _strlen 0B67  
                  __size_of_CheckResponse 0078      __end_of_TMR4_DefaultInterruptHandler 0121  
   __size_of_TMR4_DefaultInterruptHandler 0001              _TMR4_DefaultInterruptHandler 0120  
                               ??_isdigit 0071                                 ??_setFlag 0070  
                 __end_of_TMR2_StartTimer 0ABA  TMR2_SetInterruptHandler@InterruptHandler 0071  
TMR4_SetInterruptHandler@InterruptHandler 0071                                 ??_sprintf 0027  
                    ?_EUSART_Transmit_ISR 0070                      __end_of_get_response 0A64  
                    __size_of_EUSART_Read 0017                         _SYSTEM_Initialize 0BE1  
                 __end_of__initialization 0849          __size_of_WiFly_SendCMD_SingleArg 0019  
                    ?_RELAY_RL1_Disengage 0070                           eeprom_read@addr 0071  
                      ?_SYSTEM_Initialize 0070                          SetIndication@set 0071  
    __end_of_EUSART_SetTxInterruptHandler 0FE8     __size_of_EUSART_SetTxInterruptHandler 0006  
            _EUSART_SetTxInterruptHandler 0FE2                       ___bmul@multiplicand 0071  
                         _WiFly_RebootCMD 089C                             __end_of_Knock 0973  
                          __pcstackCOMMON 0070                              __pidataBANK1 0066  
                            __pidataBANK2 00E5                       ??_SYSTEM_Initialize 0073  
                               ?_TMR2_ISR 0070                             __end_of_blink 003E  
                               ?_TMR4_ISR 0070                     __end_of_hardRebootStr 12EE  
                        ?_TMR2_Initialize 0070                                __end_ofPL2 0F70  
                              __end_ofPL4 0F7D                                __end_ofPL6 0F89  
                              __end_ofPL8 0F8F                    __size_of_SetIndication 0024  
                       ??i1_SetIndication 0070          WiFly_SendCMD_SingleArg@cmdFormat 003A  
                      CheckResponse@input 0028                               ?_WiFly_Send 0072  
           ?_TMR4_DefaultInterruptHandler 0070                                   ??_Knock 00D3  
                       eeprom_write@value 0071                                   ??_blink 0071  
                 __end_of_TMR4_StartTimer 0AE4                 __end_of_SYSTEM_Initialize 0BEC  
                   ??_EUSART_Transmit_ISR 0070                              sprintf@width 0037  
             __size_of_WiFly_EnterCMDMode 002A                                __pbssBANK0 006E  
                              __pbssBANK1 00BE                      __end_of_EUSART_Write 00A0  
                   ??_RELAY_RL1_Disengage 0071                             _WiFly_SendCMD 0E8C  
                           _CheckResponse 0AEF                   __end_of_WiFly_CheckRecv 0917  
             __size_of_EUSART_Receive_ISR 0016                     _TMR4_InterruptHandler 00E7  
         WiFly_SendCMD_DoubleArg@txBuffer 0040                        __size_of_goto_mode 0022  
                           ?_WaitResponse 0076                                 ?_Validate 0070  
                              __pmaintext 0973                                   ?___bmul 0071  
           ?_EUSART_SetTxInterruptHandler 0071          _EUSART_TxDefaultInterruptHandler 00E5  
                                 ?___wmul 0071                           __CFG_PPS1WAY$ON 0000  
                              ??_TMR2_ISR 0071                                ??_TMR4_ISR 0070  
                              __pintentry 0004                 __size_of_WiFly_SaveConfig 0007  
                    __size_ofi1_TMR4_Stop 0003                          ?_TMR4_Initialize 0070  
                           ?_send_message 0070                          ??_connect_socket 007C  
               __size_of_WiFly_SendString 0007                                   ?_strlen 0071  
                        Knock@knockString 00D5                             _eusartRxCount 00D1  
                                 _SP1BRGH 011C                                   _SP1BRGL 011B  
                   connect_network@passwd 0068                                   _OSCCON1 088D  
                                 _OSCCON3 088F                             Pair@returnVal 00DC  
                          Knock@returnVal 00DF                                   _NVMADRH 081B  
                                 _NVMADRL 081A                                   _NVMDATH 081D  
                                 _OSCTUNE 0892                                   _NVMDATL 081C  
                                 _NVMCON2 081F                                   _PPSLOCK 0E8F  
                                 _WDTCON0 080C                                   _WDTCON1 080D  
                            ??_TMR2_Start 0071                   __size_of_TMR2_StopTimer 0001  
                            ??_TMR4_Start 0071                          ?_TMR2_StartTimer 0070  
                   WaitResponse@chkString 0076                            ?_WiFly_SendCMD 0024  
                           _SetIndication 0ABF                   __end_of_WiFly_RebootCMD 08B0  
                          ?_CheckResponse 0076       EUSART_SetTxInterruptHandler@handler 0071  
                          ??_WaitResponse 0078                                ??_Validate 006D  
                         _WWDT_Initialize 0F11                ??_TMR2_SetInterruptHandler 0073  
                 _WiFly_SendCMD_DoubleArg 0B9B                       __size_of_WiFly_Send 001A  
                       ?i1_TMR4_StopTimer 0070                  __size_of_ClearIndicators 0008  
                   __size_of_eeprom_write 001C                      __CFG_SCANE$available 0000  
                 __size_of_TMR4_StopTimer 0001                           __size_of___bmul 000C  
                        _WiFly_CheckInCMD 0BB4                           __size_of___wmul 0015  
                                 ___lwdiv 0E60                                   ___lwmod 0EC5  
                      ??i1_TMR4_StopTimer 0070                            ??_send_message 007C  
                      __end_of_TMR2_Start 0F34                        __end_of_TMR4_Start 0F11  
                                 __ptext1 0F17                                   __ptext2 08B0  
                                 __ptext3 0917                                   __ptext4 0876  
                                 __ptext5 0E8C                                   __ptext6 0EB2  
                                 __ptext7 089C                                   __ptext8 0A1C  
                                 __ptext9 0BE1                  __size_of_Clear_RX_Buffer 000B  
                         __size_of_strlen 0016                         __end_of_hexpowers 12B6  
                                 _dpowers 127E                     _OSCILLATOR_Initialize 0BEC  
                               _T2CONbits 028E                                   _isdigit 0E52  
                   __end_of_softRebootStr 12C5                   __size_of_WiFly_ReadChar 000D  
                                 _setFlag 010A                                 _T4CONbits 0294  
                       __end_of_goto_mode 0A1B                  ??_PIN_MANAGER_Initialize 0071  
       __size_of_TMR4_SetInterruptHandler 0006                     __size_of_get_response 0018  
                                 _openStr 12F4                 ?_TMR4_SetInterruptHandler 0071  
              __size_of_SYSTEM_Initialize 000B                                   _sprintf 0C34  
                                 clrloop0 011B                __end_of_WiFly_FactoryReset 089C  
                        ?_TMR4_StartTimer 0070                        i1SetIndication@set 0070  
                    end_of_initialization 0849                            ?_SetIndication 0070  
                 _WiFly_SendCMD_SingleArg 0917            ??_TMR4_DefaultInterruptHandler 0070  
                                 init_ram 0114                 __size_of_RELAY_RL1_Engage 0002  
                            _eeprom_write 0BB9                                   initloop 0115  
                        ?_WiFly_CheckRecv 0076                         _EUSART_Initialize 0F3A  
                           WaitResponse@i 0022                        ?_EUSART_Initialize 0070  
                      _EUSART_is_rx_ready 0ABC                        _EUSART_is_tx_ready 0000  
                       WiFly_Send@command 0072                     __CFG_WDTCPS$WDTCPS_18 0000  
                            _get_response 0A4C                                   strlen@s 0071  
                     ??_EUSART_Initialize 0073            ??_EUSART_SetTxInterruptHandler 0073  
                               _PORTBbits 000D                       ?_EUSART_is_rx_ready 0070  
                               _PORTCbits 000E                                 _TMR2_Stop 0F34  
                               _TMR4_Stop 0F37                     WiFly_CheckRecv@length 0020  
                    __CFG_WDTCCS$LFINTOSC 0000                     __size_of_EUSART_Write 001C  
                         ??_WiFly_SendCMD 007B                          __CFG_FEXTOSC$OFF 0000  
                         ??_CheckResponse 007A                                 _RXPPSbits 0ECB  
                 __end_of_WWDT_Initialize 0F17                 __end_of_EUSART_Initialize 0F61  
                    ??_EUSART_is_rx_ready 0071                          ?_WiFly_RebootCMD 0070  
                           ??_eeprom_read 0071                 ??_WiFly_SendCMD_DoubleArg 007C  
                         i1_SetIndication 003E      __end_of_TMR2_DefaultInterruptHandler 0122  
   __size_of_TMR2_DefaultInterruptHandler 0001              _TMR2_DefaultInterruptHandler 0121  
                          __end_of___bmul 0EC5                          _WiFly_SaveConfig 0EB2  
                          __end_of___wmul 0EFA                            __end_of_cmdStr 1310  
                          __end_of_aokStr 130C                            __end_of_endStr 12FE  
                            _EUSART_Write 0084                         __size_of_TMR2_ISR 000C  
                       __size_of_TMR4_ISR 000C                  __size_of_connect_network 0031  
                              ?_TMR2_Stop 0070                          _WiFly_SendString 0E85  
                  ?_OSCILLATOR_Initialize 0070                                ?_TMR4_Stop 0070  
                       ??_ClearIndicators 0071                            __end_of_strlen 0B7D  
                             __end_ofPL10 0F9B                               __end_ofPL20 0FC6  
                             __end_ofPL12 0FA7                               __end_ofPL30 0FDD  
                             __end_ofPL22 0FCC                               __end_ofPL14 0FB1  
                             __end_ofPL32 0FE2                               __end_ofPL24 0066  
                             __end_ofPL16 0FB8                               __end_ofPL26 0FD2  
                             __end_ofPL18 0FC0                               __end_ofPL28 0FD8  
                     start_initialization 0826                              ??_WiFly_Send 0074  
                    __end_of_WaitResponse 0AB9           __size_of_PIN_MANAGER_Initialize 003F  
               ??_WiFly_SendCMD_SingleArg 007C                            _TMR2_StopTimer 0A1B  
                           ??_EUSART_Read 0071                           ??_SetIndication 0071  
                       ??_Clear_RX_Buffer 0072                         Validate@valString 00D3  
                    __end_of_send_message 0A90                         Validate@returnVal 00E0  
                     connect_network@ssid 0066                          __CFG_LPBOREN$OFF 0000  
                          _TMR4_StopTimer 0A90                                  ??___bmul 0072  
                                ??___wmul 0075                        __end_of_WiFly_Send 0EB2  
                     __end_of_eeprom_read 0F26                         __size_of_Validate 0030  
                             __pdataBANK1 00A0                               __pdataBANK2 0120  
           ?_TMR2_DefaultInterruptHandler 0070                                  ??_strlen 0073  
                          _WiFly_ReadChar 0A64               __end_of_EUSART_Transmit_ISR 00B8  
                  __end_of_TMR2_StopTimer 0A1C                               __pbssCOMMON 007C  
                               ___latbits 0002                             __pcstackBANK0 0020  
                           __pcstackBANK1 00D3                __end_of_WiFly_EnterCMDMode 0876  
                __size_of_TMR2_Initialize 0013               __end_of_RELAY_RL1_Disengage 0F29  
                            _isdigit$1909 0071                  __end_of_WiFly_CheckInCMD 0BB9  
                 __end_ofi1_SetIndication 0060                            Validate@F15436 0120  
                        eeprom_write@addr 0072                __end_of_EUSART_Receive_ISR 00E5  
              __size_of_EUSART_Initialize 0027                          ?_WWDT_Initialize 0070  
                             sprintf@flag 0034                          _RELAY_RL1_Engage 0ABA  
                             sprintf@prec 0033          _EUSART_RxDefaultInterruptHandler 00E3  
                     __end_of_EUSART_Read 00CF                                 __pnvBANK1 00E1  
                         CheckResponse@i1 0029                           CheckResponse@i2 002B  
                         CheckResponse@i3 0026                            Pair@pairString 00D3  
                  __end_of_TMR4_StopTimer 0A91                                 _failedStr 00B3  
                        ___lwdiv@dividend 0073                    _PIN_MANAGER_Initialize 0BF5  
                    EUSART_Read@readValue 0071                             ??i1_TMR4_Stop 0070  
        __end_of_TMR4_SetInterruptHandler 0BE1                                  ?___lwdiv 0071  
                                ?___lwmod 0078                              _eusartRxHead 006E  
                            _eusartTxHead 007C                              _eusartRxTail 00D2  
                            _eusartTxTail 006F              ??_INTERRUPT_InterruptManager 0071  
                  __end_of_WiFly_ReadChar 0A71                               ??_TMR2_Stop 0071  
                             ??_TMR4_Stop 0071                   _eusartTxBufferRemaining 00EB  
                               _indStatus 00CE                                  _BAUD1CON 011F  
                                ?_isdigit 0070                           ?_TMR2_StopTimer 0070  
                     send_message@message 006C                                  ?_setFlag 0070  
               __size_ofi1_TMR4_StopTimer 0002                            __size_of_Knock 0043  
                __size_of_TMR4_Initialize 0014                                 _hexpowers 12AE  
                       ??_connect_network 007C                          __CFG_WDTE$SWDTEN 0000  
                        ___lwdiv@quotient 0075                            __size_of_blink 0008  
                                ?_sprintf 0021                                  _T2CLKCON 0290  
                               _goto_mode 09F9                                  _T4CLKCON 0296  
                          _eusartRxBuffer 00BE                            _eusartTxBuffer 00C6  
                          ___wmul@product 0075                                  _LATAbits 0016  
                                _LATCbits 0018                                  _LATDbits 0019  
                               clear_ram0 011A                               _eeprom_read 0F17  
                                _PIE3bits 0719                                  _PIE4bits 071A  
                __size_of_TMR2_StartTimer 0001                           ?_TMR4_StopTimer 0070  
     __size_of_INTERRUPT_InterruptManager 0030                                  _PIR3bits 070F  
                                _PIR4bits 0710                        _WiFly_FactoryReset 0876  
                       _EUSART_is_tx_done 0000               WiFly_SendCMD_DoubleArg@arg1 003C  
             WiFly_SendCMD_DoubleArg@arg2 003E                                  _TMR2_ISR 00FE  
                                _TMR4_ISR 00F2                             _hardRebootStr 12E8  
                   __size_of_WaitResponse 0028                       ?_WiFly_FactoryReset 0070  
                         ?_WiFly_ReadChar 0070                         ___wmul@multiplier 0071  
                     __end_ofi1_TMR4_Stop 0114            ??_TMR2_DefaultInterruptHandler 0070  
       __size_of_TMR2_SetInterruptHandler 0006                 ?_TMR2_SetInterruptHandler 0071  
                   __size_of_send_message 001F                               _EUSART_Read 00B8  
                              ?_goto_mode 0070                  __end_of_WiFly_SaveConfig 0EB9  
                 __size_of_connect_socket 001E                          ?i1_SetIndication 0070  
                    ??_WiFly_FactoryReset 0026                         ??_TMR2_Initialize 0073  
                __end_of_WiFly_SendString 0E8C                  __size_of_TMR4_StartTimer 0001  
                         _ClearIndicators 0F29                                  _Validate 0A1C  
                            _WaitResponse 0A91                   ??_OSCILLATOR_Initialize 0071  
              WiFly_SendCMD_SingleArg@arg 003C                  __size_of_WiFly_CheckRecv 0036  
                        __size_of___lwdiv 0025                           _Clear_RX_Buffer 0AE4  
                        __size_of___lwmod 0020                              _send_message 0A71  
                _TMR4_SetInterruptHandler 0BDB                                sprintf@idx 002B  
                              sprintf@len 002F                                sprintf@val 0031  
                        __size_of_isdigit 000E                           ___lwdiv@divisor 0071  
                        __size_of_setFlag 0005                           ___lwdiv@counter 0077  
                                __ptext10 0F11                                  __ptext11 0EFA  
                                __ptext20 09C7                                  __ptext12 0BDB  
                                __ptext21 0BB9                                  __ptext13 0FE8  
                                __ptext30 0E60                                  __ptext22 0930  
                                __ptext14 0BD5                                  __ptext31 0EB9  
                                __ptext23 0A71                                  __ptext15 0BF5  
                                __ptext40 0A4C                                  __ptext32 0BB4  
                                __ptext24 0B7D                                  __ptext16 0BEC  
                                __ptext41 09F9                                  __ptext33 084C  
                                __ptext25 0B9B                                  __ptext17 0F3A  
                                __ptext50 0ABF                                  __ptext42 0A90  
                                __ptext34 08E1                                  __ptext26 0C34  
                                __ptext18 0FE2                                  __ptext51 0F29  
                                __ptext43 0F37                                  __ptext35 0AEF  
                                __ptext27 0E52                                  __ptext19 0FFB  
                                __ptext60 00F2                                  __ptext52 0A91  
                                __ptext44 0AE3                                  __ptext36 0E85  
                                __ptext28 0EE5                                  __ptext61 0120  
                                __ptext53 0B67                                  __ptext45 0F0E  
                                __ptext37 0E98                                  __ptext29 0EC5  
                                __ptext70 00CF                                  __ptext62 010A  
                                __ptext54 0A64                                  __ptext46 0A1B  
                                __ptext38 0084                                  __ptext63 010F  
                                __ptext55 0ABC                                  __ptext47 0F34  
                                __ptext39 0AE4                                  __ptext64 0111  
                                __ptext56 00B8                                  __ptext48 0AB9  
                                __ptext65 00FE                                  __ptext57 0ABA  
                                __ptext49 0F31                                  __ptext66 0121  
                                __ptext58 0F26                                  __ptext67 0036  
                                __ptext68 003E                                  __ptext69 00A0  
                        __size_of_sprintf 021E                     __end_of_WiFly_SendCMD 0E98  
                           __size_of_Pair 0032                        connect_socket@addr 0068  
                   __end_of_CheckResponse 0B67                         ??_TMR4_Initialize 0073  
             __size_of_EUSART_is_rx_ready 0003                        connect_socket@port 006A  
                           __size_of_main 0054                      __CFG_WDTCWS$WDTCWS_7 0000  
                                _pingTime 00CF                                _RC1STAbits 011D  
                WiFly_CheckRecv@chkString 0076                               i1_TMR4_Stop 0111  
                __size_of_WiFly_RebootCMD 0014                                  int$flags 007E  
                       ??_TMR2_StartTimer 0071        __end_of_INTERRUPT_InterruptManager 0034  
              _INTERRUPT_InterruptManager 0004               PIN_MANAGER_Initialize@state 0071  
                __end_of_RELAY_RL1_Engage 0ABC           WiFly_SendCMD_SingleArg@txBuffer 003E  
                              _INTCONbits 000B                               _NVMCON1bits 081E  
                           _softRebootStr 12BE                          i1_TMR4_StopTimer 010F  
                          __pstringtext10 1000                            __pstringtext11 1183  
                          __pstringtext20 123E                            __pstringtext12 119C  
                          __pstringtext21 124C                            __pstringtext13 11B1  
                          __pstringtext30 12C5                            __pstringtext22 125A  
                          __pstringtext14 11DA                            __pstringtext31 12CC  
                          __pstringtext23 1267                            __pstringtext15 11ED  
                          __pstringtext32 12D3                            __pstringtext24 1273  
                          __pstringtext16 11FF                            __pstringtext33 12DA  
                          __pstringtext25 1288                            __pstringtext17 1210  
                          __pstringtext34 12E1                            __pstringtext26 1292  
                          __pstringtext18 1220                            __pstringtext35 12EE  
                          __pstringtext27 129C                            __pstringtext19 1230  
                          __pstringtext36 12FE                            __pstringtext28 12A5  
                          __pstringtext37 1303                            __pstringtext29 12B6  
                          __pstringtext38 1310                            __pstringtext39 0000  
                         goto_mode@target 0072                                  isdigit@c 0072  
                             ??_goto_mode 0072                     __end_of_SetIndication 0AE3  
                ?_WiFly_SendCMD_DoubleArg 003A                         ?_WiFly_CheckInCMD 0070  
                                intlevel1 0000                                 sprintf@ap 002E  
                               sprintf@cp 002C                                 sprintf@sp 0036  
                 __end_of_ClearIndicators 0F31                          ___lwmod@dividend 007A  
                      ??_WiFly_CheckInCMD 007B                   ?_PIN_MANAGER_Initialize 0070  
                       __CFG_CLKOUTEN$OFF 0000                               _PPSLOCKbits 0E8F  
                             _WDTCON0bits 080C                        _WiFly_EnterCMDMode 084C  
                      WaitResponse@length 0020      __end_of_EUSART_SetRxInterruptHandler 1000  
   __size_of_EUSART_SetRxInterruptHandler 0005              _EUSART_SetRxInterruptHandler 0FFB  
                 __end_of_Clear_RX_Buffer 0AEF                        _EUSART_Receive_ISR 00CF  
                     ?_WiFly_EnterCMDMode 0070                         ??_TMR4_StartTimer 0071  
                        ??_TMR2_StopTimer 0071                           _connect_network 08B0  
                           __pstringtext1 11C6                             __pstringtext2 127E  
                           __pstringtext3 12AE                             __pstringtext4 12BE  
                           __pstringtext5 12E8                             __pstringtext6 12F4  
                           __pstringtext7 12F9                             __pstringtext8 1308  
                           __pstringtext9 130C                                  sprintf@c 0039  
                                sprintf@f 0021                  ?_WiFly_SendCMD_SingleArg 003A  
                     ?_EUSART_Receive_ISR 0070                           ___lwmod@divisor 0078  
                       ??_WiFly_CheckRecv 0078                                  strlen@cp 0074  
                         ___lwmod@counter 0020                                _TX1STAbits 011E  
                              _TMR2_Start 0F31                      ??_WiFly_EnterCMDMode 0079  
                              _TMR4_Start 0F0E                            _connect_socket 0B7D  
                      EUSART_Write@txData 0071              __size_of_EUSART_Transmit_ISR 0018  
          __end_of_PIN_MANAGER_Initialize 0C34                          ??_TMR4_StopTimer 0071  
                        WiFly_CheckRecv@i 0022                             ?_eeprom_write 0071  
            __size_of_RELAY_RL1_Disengage 0003                                _STATUSbits 0003  
                    ??_EUSART_Receive_ISR 0070                              ?_eeprom_read 0070  
                   _TMR2_InterruptHandler 00E1                                Pair@F15432 00AA  
